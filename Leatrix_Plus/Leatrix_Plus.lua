----------------------------------------------------------------------
-- 	Leatrix Plus 7.2.04 (12th May 2017, www.leatrix.com)
----------------------------------------------------------------------

--	01:Functions	20:Live			50:Player		72:Profile		
--	02:Locks		30:Isolated 	60:RunOnce		74:Logout	
--	03:Restarts		40:Variable		70:Events		80:Commands

----------------------------------------------------------------------
-- 	Leatrix Plus
----------------------------------------------------------------------

--  Create global table
	_G.LeaPlusDB = _G.LeaPlusDB or {}

-- 	Create locals
	local LeaPlusLC, LeaPlusCB, LeaDropList, LeaConfigList, L = {}, {}, {}, {}, {}
	local ClientVersion = GetBuildInfo()
	local GameLocale = GetLocale()
	local void

--	Version
	LeaPlusLC["AddonVer"] = "7.2.04"

----------------------------------------------------------------------
-- 	Locale
----------------------------------------------------------------------

	-- GameLocale = "zhCN" -- Siweia
	-- GameLocale = "zhTW" -- BNS
	-- GameLocale = "ruRU" -- Felixod
	-- GameLocale = "koKR" -- ZinY05

	-- Function to assign phrases
	local function Ln(phrase, zhCN, zhTW, ruRU, koKR, x)
		if GameLocale == "zhCN" then
			L[phrase] = zhCN
		elseif GameLocale == "zhTW" then
			L[phrase] = zhTW
		elseif GameLocale == "ruRU" then
			L[phrase] = ruRU
		elseif GameLocale == "koKR" then
			L[phrase] = koKR		
		end
	end

	----------------------------------------------------------------------
	-- 	LA0: Home
	----------------------------------------------------------------------

	Ln("Home",
	--[[zhCN]] "主页",
	--[[zhTW]] "首頁",
	--[[ruRU]] "Домой",
	--[[koKR]] "홈",
	x)

	Ln("Version",
	--[[zhCN]] "版本",
	--[[zhTW]] "版本",
	--[[ruRU]] "Версия",
	--[[koKR]] "버전",
	x)

	Ln("Welcome to Leatrix Plus.",
	--[[zhCN]] "欢迎使用Leatrix Plus",
	--[[zhTW]] "歡迎使用Leatrix Plus",
	--[[ruRU]] "Добро пожаловать в Leatrix Plus.",
	--[[koKR]] "Leatrix Plus 에 오신 것을 환영합니다.",
	x)

	Ln("To begin, choose an options page.",
	--[[zhCN]] "请选择一项开始使用",
	--[[zhTW]] "請選擇一個選項開始使用",
	--[[ruRU]] "Для начала выберите страницу настроек.",
	--[[koKR]] "설정 페이지를 선택합니다.",
	x)

	Ln("Support",
	--[[zhCN]] "帮助支持",
	--[[zhTW]] "支援",
	--[[ruRU]] "Поддержка",
	--[[koKR]] "지원",
	x)

	Ln("Translation",
	--[[zhCN]] "翻译",
	--[[zhTW]] "翻譯",
	--[[ruRU]] "Перевод",
	--[[koKR]] "번역",
	x)

	----------------------------------------------------------------------
	-- 	LA1: Automation
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Automation",
		--[[zhCN]] "自动交互",
		--[[zhTW]] "自動化",
		--[[ruRU]] "Автоматизация",
		--[[koKR]] "자동화",
		x)

		Ln("Character",
		--[[zhCN]] "角色",
		--[[zhTW]] "角色",
		--[[ruRU]] "Персонаж",
		--[[koKR]] "캐릭터",
		x)

		Ln("Vendors",
		--[[zhCN]] "商贩",
		--[[zhTW]] "商店",
		--[[ruRU]] "Продавцы",
		--[[koKR]] "상인",
		x)

		----------------------------------------------------------------------
		-- Automate quests
		----------------------------------------------------------------------

		Ln("Automate quests",
		--[[zhCN]] "任务自动交接",
		--[[zhTW]] "任務自動化",
		--[[ruRU]] "Автоматизация заданий",
		--[[koKR]] "퀘스트 자동수락",
		x)

		Ln("If checked, quests will be selected, accepted and turned-in automatically.\n\nYou can hold the shift key down when you talk to a quest giver to over-ride this setting.",
		--[[zhCN]] "勾选后，任务会自动交接。\n\n当你和NPC对话时按住Shift键，可以暂时忽略此项功能。",
		--[[zhTW]] "勾選後，任務會自動交接。\n\n當你和NPC對話時按住Shift鍵，可以暫時忽略此項功能。",
		--[[ruRU]] "Если флажок установлен, задания будут автоматически выбраны, приняты и сданы.\n\nВы можете удерживать клавишу SHIFT во время общения с дающим задание персонажем для временного игнорирования этой настройки.",
		--[[koKR]] "선택하면 퀘스트 자동 받음. 수동은 shift키+말걸기.",
		x)

		----------------------------------------------------------------------
		-- Automate gossip
		----------------------------------------------------------------------

		Ln("Automate gossip",
		--[[zhCN]] "对话自动交互",
		--[[zhTW]] "自動對話",
		--[[ruRU]] "",
		--[[koKR]] "대화 자동넘김",
		x)

		Ln("If checked, you can hold a designated modifier key while opening a gossip window to automatically select a single gossip option.",
		--[[zhCN]] "勾选后，你可以按住预设的功能键来自动进行只有一个选项的对话。",
		--[[zhTW]] "勾選後，當開啟對話視窗的時候你可以按下一個指定的快捷按鍵以自動選擇一個對話選項。",
		--[[ruRU]] "",
		--[[koKR]] "NPC 하나의 대화를 설정된 키로 열때 자동으로 넘김니다.",
		x)

		Ln("Modifier key",
		--[[zhCN]] "功能键",
		--[[zhTW]] "快捷按鍵",
		--[[ruRU]] "",
		--[[koKR]] "키 설정",
		x)

		Ln("Choose a modifier key for use with this option.\n\nIf set to NONE, you can hold the shift key down to temporarily prevent automation.",
		--[[zhCN]] "为此项功能选择一个功能键。\n\n如果设置为“无”，你可以按住<Shift键>来暂时阻止自动交互功能。",
		--[[zhTW]] "選擇一個用於此選項的快捷按鍵。\n\n如果設置為無，您可以按住shift鍵暫時阻止自動化。",
		--[[ruRU]] "",
		--[[koKR]] "이 옵션을 사용하기위한 보조 키를 선택합니다.\n\n없음 으로 설정하면 시프트 키를 눌러서 일시적으로 자동화를 방지 할 수 있습니다.",
		x)

		Ln("NONE",
		--[[zhCN]] "无",
		--[[zhTW]] "無",
		--[[ruRU]] "",
		--[[koKR]] "없음",
		x)

		----------------------------------------------------------------------
		-- Accept summon
		----------------------------------------------------------------------

		Ln("Accept summon",
		--[[zhCN]] "自动接受召唤",
		--[[zhTW]] "自動接受召喚",
		--[[ruRU]] "Подтверждать призыв",
		--[[koKR]] "소환 수락",
		x)

		Ln("If checked, summon requests will be accepted automatically unless you are in combat.",
		--[[zhCN]] "勾选后，当你不处于战斗状态时会自动接受召唤。",
		--[[zhTW]] "勾選後，當你不處於戰鬥狀態時會自動接受召喚。",
		--[[ruRU]] "Если флажок установлен, запросы призыва будут приниматься автоматически, если вы не в бою.",
		--[[koKR]] "비전투시 소환 자동수락",
		x)

		----------------------------------------------------------------------
		-- Accept resurrection
		----------------------------------------------------------------------

		Ln("Accept resurrection",
		--[[zhCN]] "自动接受战复",
		--[[zhTW]] "自動接受復活",
		--[[ruRU]] "Подтверждать восркешение",
		--[[koKR]] "부활 수락",
		x)

		Ln("If checked, resurrection requests will be accepted automatically.",
		--[[zhCN]] "勾选后，你将自动接受战复。\n\n你可以点击右边的按钮进行设置。",
		--[[zhTW]] "勾選後，你將自動接受復活。\n\n你可以點擊右邊的按鈕進行設置。",
		--[[ruRU]] "Если флажок установлен, запросы на воскрешение будут приниматься автоматически.",
		--[[koKR]] "부활 요청시 자동 수락",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Accept Resurrection",
			--[[zhCN]] "自动接受战复",
			--[[zhTW]] "自動接受復活",
			--[[ruRU]] "Подтверждать воскрешение",
			--[[koKR]] "부활 수락",
			x)

			Ln("Thank the player who resurrected you",
			--[[zhCN]] "感谢战复你的玩家",
			--[[zhTW]] "感謝復活你的玩家",
			--[[ruRU]] "Благодарить игрока Вас воскресившего",
			--[[koKR]] "부활 감사합니다.",
			x)

			Ln("If checked, your character will emote a thank you when a resurrection is automatically accepted.",
			--[[zhCN]] "勾选后，当你接受战复时会发送一个感谢的表情。",
			--[[zhTW]] "勾選後，當你接受復活時會發送一個感謝的表情。",
			--[[ruRU]] "Если флажок установлен, ваш персонаж будет благодарить игрока Вас воскресившего визуальной эмоцией.",
			--[[koKR]] "부활시 플레이어에게 감사의 인사.",
			x)

			Ln("Exclude combat resurrection requests",
			--[[zhCN]] "战斗中不接受战复",
			--[[zhTW]] "排除戰鬥復活",
			--[[ruRU]] "Исключить запросы на воскрешение в бою",
			--[[koKR]] "전투중 부활 수락 제외.",
			x)

			Ln("If checked, resurrection requests will not be automatically accepted if the player resurrecting you is in combat.",
			--[[zhCN]] "勾选后，当你在战斗中被战复将不再自动接受。",
			--[[zhTW]] "勾選後，當你在戰鬥中將不再自動接受復活。",
			--[[ruRU]] "Если флажок установлен, запросы на воскрешение не будут автоматически приниматься, если игрок воскрешающий Вас находится в бою.",
			--[[koKR]] "부활 플레이어 전투중 경우 부활 자동수락 안함.",
			x)

		----------------------------------------------------------------------
		-- Release in PvP
		----------------------------------------------------------------------

		Ln("Release in PvP",
		--[[zhCN]] "PvP自动释放尸体",
		--[[zhTW]] "PvP自動釋放屍體",
		--[[ruRU]] "Испускать дух в PvP",
		--[[koKR]] "PvP지역 부활 수락 해제",
		x)

		Ln("If checked, you will release automatically after you die in a designated PvP zone.\n\nYou will not release automatically if you have the ability to self-resurrect (soulstone, reincarnation, etc).",
		--[[zhCN]] "勾选后，你在PVP区域阵亡时将自动释放尸体。\n\n你可以点击右边的按钮进行设置。\n\n当你能自我战复时（如术士灵魂石、萨满复生），不会自动释放尸体。",
		--[[zhTW]] "勾選後，你在PVP區域陣亡時將自動釋放屍體。\n\n你可以點擊右邊的按鈕進行設置。\n\n當你能自我復活時（如術士靈魂石、薩滿復生），不會自動釋放屍體。",
		--[[ruRU]] "Если флажок установлен, Вы будете автоматически испускать дух, когда умрете в зоне, отмеченной как PvP.\n\nДух не будет испущен автоматически, если у Вас есть способность к самовоскрешению (камень души, реинкарнация и др.)",
		--[[koKR]] "선택된 지역에서는 부활수락을 해제. 영혼석,윤회 제외.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Select the zones where automatic release should operate.",
			--[[zhCN]] "选择可以自动释放尸体的区域",
			--[[zhTW]] "選擇可以自動釋放屍體的區域",
			--[[ruRU]] "Выберите зоны, где должно работать автоматическое испускание духа.",
			--[[koKR]] "부활 수락 해제 지역을 선택.",
			x)

			Ln("Battlegrounds",
			--[[zhCN]] "战场",
			--[[zhTW]] "戰場",
			--[[ruRU]] "Боевые зоны",
			--[[koKR]] "전장",
			x)

			Ln("If checked, you will release automatically after you die in a battleground.",
			--[[zhCN]] "勾选后，在战场中阵亡将自动释放尸体。",
			--[[zhTW]] "勾選後，在戰場中陣亡將自動釋放屍體。",
			--[[ruRU]] "Если флажок установлен, Вы испустите дух автоматически, если умрете в боевой зоне.",
			--[[koKR]] "전장에서 죽은후 자동 해제.",
			x)

			Ln("Wintergrasp",
			--[[zhCN]] "冬拥湖",
			--[[zhTW]] "冬握湖",
			--[[ruRU]] "Озеро ледяных оков",
			--[[koKR]] "겨울손아귀",
			x)

			Ln("If checked, you will release automatically after you die in Wintergrasp.",
			--[[zhCN]] "勾选后，在冬拥湖中阵亡将自动释放尸体。",
			--[[zhTW]] "勾選後，在冬握湖中陣亡將自動釋放屍體。",
			--[[ruRU]] "Если флажок установлен, Вы испустите дух автоматически, если умрете на территории озера ледяных оков.",
			--[[koKR]] "겨울손아귀에서 죽은후 자동해제.",
			x)

			Ln("Tol Barad (the PvP zone)",
			--[[zhCN]] "托尔巴拉德战场",
			--[[zhTW]] "托巴拉德戰場",
			--[[ruRU]] "Тол Барад (PvP зона)",
			--[[koKR]] "톨 바라드",
			x)

			Ln("If checked, you will release automatically after you die in Tol Barad (the PvP zone).",
			--[[zhCN]] "勾选后，在托尔巴拉德战场中阵亡将自动释放尸体。",
			--[[zhTW]] "勾選後，在托巴拉德戰場中陣亡將自動釋放屍體。",
			--[[ruRU]] "Если флажок установлен, Вы испустите дух автоматически, если умрете на территории Тол Барада.",
			--[[koKR]] "톨바라드에서 죽은후 자동해제.",
			x)

			Ln("Ashran",
			--[[zhCN]] "阿什兰战场",
			--[[zhTW]] "艾斯蘭戰場",
			--[[ruRU]] "Ашран",
			--[[koKR]] "아쉬란",
			x)

			Ln("If checked, you will release automatically after you die in Ashran.",
			--[[zhCN]] "勾选后，在阿什兰战场中阵亡将自动释放尸体。",
			--[[zhTW]] "勾選後，在艾斯蘭戰場中陣亡將自動釋放屍體。",
			--[[ruRU]] "Если флажок установлен, Вы испустите дух автоматически, если умрете на территории Ашрана.",
			--[[koKR]] "아쉬란에서 죽은후 자동 해제.",
			x)

		----------------------------------------------------------------------
		-- Sell junk automatically
		----------------------------------------------------------------------

		Ln("Sell junk automatically",
		--[[zhCN]] "自动出售杂物",
		--[[zhTW]] "自動出售垃圾",
		--[[ruRU]] "Автоматически продавать хлам",
		--[[koKR]] "회색템 자동 판매",
		x)

		Ln("If checked, all grey items in your bags will be sold automatically when you visit a merchant.\n\nYou can hold the shift key down when you talk to a merchant to over-ride this setting.",
		--[[zhCN]] "勾选后，当你访问商贩时将自动出售背包中的杂物。\n\n当你访问时按住Shift键，可以暂时忽略该功能。",
		--[[zhTW]] "勾選後，當你訪問商販時將自動出售背包中的垃圾。\n\n當你訪問時按住Shift鍵，可以暫時忽略該功能。",
		--[[ruRU]] "Если флажок установлен, все серые предмены в Ваших сумках будут проданы автоматически при посещении торговца.\n\nВы можете удерживать клавишу SHIFT во время общения с торговцем для временного игнорирования этой настройки.",
		--[[koKR]] "상인과 대화시 회색템 자동판매. +shift 수동",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Sell Junk Automatically",
			--[[zhCN]] "自动出售杂物",
			--[[zhTW]] "自動出售垃圾",
			--[[ruRU]] "Автоматически продавать хлам",
			--[[koKR]] "회색템 자동판매",
			x)

			Ln("Show a summary of items sold",
			--[[zhCN]] "显示售出杂物的总价",
			--[[zhTW]] "顯示售出垃圾的總價",
			--[[ruRU]] "Отображать стоимость проданных предметов",
			--[[koKR]] "판매항목 요약 표시",
			x)

			Ln("If checked, a brief summary will be shown in chat when items are sold automatically.",
			--[[zhCN]] "勾选后，自动售出的杂物会在聊天窗口显示一个大致的总价。",
			--[[zhTW]] "勾選後，會在聊天視窗顯示自動售出之垃圾的摘要總計。",
			--[[ruRU]] "Если флажок установлен, стоимость всех автоматически проданных предметов низкого качества будет отображена в чате.",
			--[[koKR]] "판매시 간단한 요약을 채팅창에 표시",
			x)

			----------------------------------------------------------------------
			-- Merchant frame banner
			----------------------------------------------------------------------

			Ln("SELLING JUNK",
			--[[zhCN]] "出售杂物",
			--[[zhTW]] "出售垃圾",
			--[[ruRU]] "ПРОДАЮ ХЛАМ",
			--[[koKR]] "자동판매",
			x)

			----------------------------------------------------------------------
			-- Chat message
			----------------------------------------------------------------------

			Ln("Sold junk for",
			--[[zhCN]] "杂物出售总计",
			--[[zhTW]] "賣出垃圾為",
			--[[ruRU]] "",
			--[[koKR]] "회색템 판매",
			x)

		----------------------------------------------------------------------
		-- Repair automatically
		----------------------------------------------------------------------

		Ln("Repair automatically",
		--[[zhCN]] "自动修理装备",
		--[[zhTW]] "自動修理裝備",
		--[[ruRU]] "Автоматический ремонт",
		--[[koKR]] "자동 수리",
		x)

		Ln("If checked, your gear will be repaired automatically when you visit a suitable merchant.\n\nYou can hold the shift key down when you talk to a merchant to over-ride this setting.",
		--[[zhCN]] "勾选后，当你访问修理商时将自动修理装备。\n\n你可以访问时按住Shift键，可以暂时忽略该功能。",
		--[[zhTW]] "勾選後，當你訪問修理商時將自動修理裝備。\n\n你可以訪問時按住Shift鍵，可以暫時忽略該功能。",
		--[[ruRU]] "Если флажок установлен, предметы Вашей экипировки будут автоматически отремонтированы при посещении подходящего торговца.\n\nВы можете удерживать клавишу SHIFT во время общения с торговцем для временного игнорирования этой настройки.",
		--[[koKR]] "상인과 대화시 자동 수리. +shift 수동",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Repair Automatically",
			--[[zhCN]] "自动修理装备",
			--[[zhTW]] "自動修理裝備",
			--[[ruRU]] "Автоматический ремонт",
			--[[koKR]] "자동 수리",
			x)

			Ln("Repair using guild funds if available",
			--[[zhCN]] "优先可用的公会资金",
			--[[zhTW]] "優先使用公會資金",
			--[[ruRU]] "Использовать средства банка гильдии, если доступно",
			--[[koKR]] "길드자금 사용",
			x)

			Ln("If checked, repair costs will be taken from guild funds for characters that are guilded and have permission to repair.",
			--[[zhCN]] "勾选后，修理装备时将优先使用可用的公会资金。",
			--[[zhTW]] "勾選後，修理裝備時將優先使用可用的公會資金。",
			--[[ruRU]] "Если флажок установлен, ремонт будет оплачен из средств банка гильдии, если игрок имеет на это разрешение и в банке достаточно средств.",
			--[[koKR]] "길드자금 사용에 권한이 있는경우 길드자금으로 수리 사용합니다.",
			x)

			Ln("Show a brief summary of repair costs",
			--[[zhCN]] "显示修理花费",
			--[[zhTW]] "顯示修理花費",
			--[[ruRU]] "Отображать итоговую стоимость ремонта",
			--[[koKR]] "수리비용 표시",
			x)

			Ln("If checked, a brief summary of repair costs will be shown in chat when an automated repair is attempted.",
			--[[zhCN]] "勾选后，自动修理的大致费用会显示在聊天窗口。",
			--[[zhTW]] "勾選後，自動修理的費用摘要會顯示在聊天視窗。",
			--[[ruRU]] "Если флажок установлен, информация об итоговой стоимости будет отображена в чате в процессе автоматического ремонта.",
			--[[koKR]] "수리비용의 간단한 요약을 채팅창에 표시.",
			x)

			----------------------------------------------------------------------
			-- Chat message
			----------------------------------------------------------------------

			Ln("Repaired for",
			--[[zhCN]] "修理花费",
			--[[zhTW]] "修理花費",
			--[[ruRU]] "Стоимость ремонта",
			--[[koKR]] "수리비",
			x)

	----------------------------------------------------------------------
	-- 	LA2: Social
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Social",
		--[[zhCN]] "社交信息",
		--[[zhTW]] "社交訊息",
		--[[ruRU]] "Общение",
		--[[koKR]] "소셜",
		x)

		Ln("Blocks",
		--[[zhCN]] "屏蔽",
		--[[zhTW]] "封鎖",
		--[[ruRU]] "Блокировки",
		--[[koKR]] "차단",
		x)

		Ln("Groups",
		--[[zhCN]] "队伍",
		--[[zhTW]] "隊伍",
		--[[ruRU]] "Группы",
		--[[koKR]] "그룹",
		x)

		----------------------------------------------------------------------
		-- Block duels
		----------------------------------------------------------------------

		Ln("Block duels",
		--[[zhCN]] "屏蔽决斗信息",
		--[[zhTW]] "拒絕決鬥",
		--[[ruRU]] "Блокировать дуэли",
		--[[koKR]] "결투 차단",
		x)

		Ln("If checked, duel requests will be blocked unless the player requesting the duel is in your friends list or guild.",
		--[[zhCN]] "勾选后，对于非好友和非公会成员的决斗信息会被屏蔽。",
		--[[zhTW]] "勾選後，對於非好友與公會成員的決鬥請求會被封鎖。",
		--[[ruRU]] "",
		--[[koKR]] "친구목록,길드원 제외",
		x)

		----------------------------------------------------------------------
		-- Block pet battle duels
		----------------------------------------------------------------------

		Ln("Block pet battle duels",
		--[[zhCN]] "屏蔽宠物对战",
		--[[zhTW]] "封鎖寵物對戰",
		--[[ruRU]] "Блокировать битвы питомцев",
		--[[koKR]] "애완동물대전 차단",
		x)

		Ln("If checked, pet battle duel requests will be blocked unless the player requesting the duel is in your friends list or guild.",
		--[[zhCN]] "勾选后，对于非好友和非公会成员的宠物对战信息会被屏蔽。",
		--[[zhTW]] "勾選後，對於非好友與公會成員的寵物對戰請求會被封鎖。",
		--[[ruRU]] "",
		--[[koKR]] "친구목록,길드원 제외",
		x)

		----------------------------------------------------------------------
		-- Block party invites
		----------------------------------------------------------------------

		Ln("Block party invites",
		--[[zhCN]] "屏蔽队伍邀请",
		--[[zhTW]] "封鎖隊伍邀請",
		--[[ruRU]] "Блокировать пригл. в группу",
		--[[koKR]] "파티초대 차단",
		x)

		Ln("If checked, party invitations will be blocked unless the player inviting you is in your friends list or guild.",
		--[[zhCN]] "勾选后，对于非好友和非公会成员的组队邀请会被屏蔽。",
		--[[zhTW]] "勾選後，對於非好友與公會成員的組隊邀請會被封鎖。",
		--[[ruRU]] "",
		--[[koKR]] "친구목록,길드원 제외",
		x)

		Ln("Block friend requests",
		--[[zhCN]] "屏蔽好友申请",
		--[[zhTW]] "封鎖好友邀請",
		--[[ruRU]] "Блокировать запр. дружбы",
		--[[koKR]] "친구요청 차단",
		x)

		Ln("If checked, BattleTag and Real ID friend requests will be automatically declined.\n\nEnabling this option will automatically decline any pending requests.",
		--[[zhCN]] "勾选后，战网好友申请会自动屏蔽。\n\n启用后，当前待处理的申请会自动拒绝。",
		--[[zhTW]] "勾選後，戰網好友邀請會自動拒絕。\n\n啟用後，當前待處理的邀請會自動拒絕。",
		--[[ruRU]] "Если флажок установлен, BattleTag и Real ID запросы дружбы будут автоматически отклоняться.\n\nВключение этого параметра автоматически отклонит любые ожидающие запросы.",
		--[[koKR]] "BattleTag과 실명ID 친구 요청이 자동으로 거절됩니다.",
		x)

			----------------------------------------------------------------------
			-- Chat message
			----------------------------------------------------------------------

			Ln("A friend request from",
			--[[zhCN]] "你有一个好友申请，来自",
			--[[zhTW]] "你有一個好友申請，來自",
			--[[ruRU]] "Запрос дружбы от",
			--[[koKR]] "친구 신청",
			x)

			Ln("was automatically declined.",
			--[[zhCN]] "已经自动拒绝。",
			--[[zhTW]] "已經自動拒絕。",
			--[[ruRU]] "был автоматически отклонён.",
			--[[koKR]] "자동으로 거절되었습니다.",
			x)

		----------------------------------------------------------------------
		-- Party from friends
		----------------------------------------------------------------------

		Ln("Party from friends",
		--[[zhCN]] "好友组队邀请",
		--[[zhTW]] "好友組隊邀請",
		--[[ruRU]] "Пригл. в группу от друзей",
		--[[koKR]] "친구의 파티",
		x)

		Ln("If checked, party invitations from friends or guild members will be automatically accepted unless you are queued in Dungeon Finder.",
		--[[zhCN]] "勾选后，如果你不在地下城队列中，你的好友或公会成员发送的组队申请会被自动接受。",
		--[[zhTW]] "勾選後，如果你不在地下城佇列中，你的好友或公會成員發送的組隊邀請會被自動接受。",
		--[[ruRU]] "",
		--[[koKR]] "던전찾기 대기하지 않을때 친구,길드원 파티초대 자동 허용함.",
		x)

		----------------------------------------------------------------------
		-- Queue from friends
		----------------------------------------------------------------------

		Ln("Queue from friends",
		--[[zhCN]] "好友队列申请",
		--[[zhTW]] "好友佇列申請",
		--[[ruRU]] "Запрос от друзей",
		--[[koKR]] "친구의 대기열",
		x)

		Ln("If checked, requests initiated by your party leader to join the Dungeon Finder queue will be automatically accepted if the party leader is in your friends list or guild.\n\nThis option requires that you have selected a role for your character in the Dungeon Finder window.",
		--[[zhCN]] "勾选后，如果你的小队队长是你的好友或公会成员，其申请的地下城请求会被自动接受。\n\n这个选项不会自动将你传送到副本中。\n\n这个选项需要你在地下城页面选择一个职责。",
		--[[zhTW]] "勾選後，如果小隊隊長是你的好友或公會成員，其地城搜尋器的加入請求會被自動接受。\n\n這個選項需要你在地城搜尋器中選擇一個職責。",
		--[[ruRU]] "",
		--[[koKR]] "파티장이 친구,길드원인 경우 던전대기열 요청을 자동 허용. 사용시 던전입장은 자동 되지 않습니다.",
		x)

		----------------------------------------------------------------------
		-- Invite from whispers
		----------------------------------------------------------------------

		Ln("Invite from whispers",
		--[[zhCN]] "密语邀请",
		--[[zhTW]] "密語邀請",
		--[[ruRU]] "Приглашать по сообщению",
		--[[koKR]] "귓속말 초대",
		x)

		Ln("If checked, a group invite will be automatically sent to anyone who whispers a designated keyword to you.\n\nYou need to be either ungrouped or party leader in your own group for this to work.",
		--[[zhCN]] "勾选后，你将自动邀请那些密语你关键词的玩家。\n\n你必须不处于队伍中，或当你是队长时才可进行此项操作。",
		--[[zhTW]] "勾選後，你將自動邀請那些密語你關鍵詞的玩家。\n\n你必須不處於隊伍中，或當你是隊長時才可進行此項操作。",
		--[[ruRU]] "Если флажок установлен, приглашение в группу будет автоматически отправлено любому, кто шепнет Вам назначенное ключевое слово.",
		--[[koKR]] "귓속말 초대(파티장)시 지정된 키워드 전송.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Invite from Whispers",
			--[[zhCN]] "密语邀请",
			--[[zhTW]] "密語邀請",
			--[[ruRU]] "Приглашать по сообщению",
			--[[koKR]] "귓속말 초대",
			x)

			Ln("Whisper keyword",
			--[[zhCN]] "密语关键词",
			--[[zhTW]] "密語關鍵詞",
			--[[ruRU]] "Ключевое слово",
			--[[koKR]] "키워드",
			x)

			Ln("Enter the keyword that you want to use.",
			--[[zhCN]] "请输入你想设定的关键词。",
			--[[zhTW]] "請輸入你想設定的關鍵詞。",
			--[[ruRU]] "Введите ключевое слово, которое Вы хотите использовать.",
			--[[koKR]] "사용할 키워드 입력하세요.",
			x)

	----------------------------------------------------------------------
	-- 	LA3: Chat
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Chat",
		--[[zhCN]] "聊天功能",
		--[[zhTW]] "聊天功能",
		--[[ruRU]] "Чат",
		--[[koKR]] "채팅",
		x)

		Ln("Chat Frame",
		--[[zhCN]] "聊天窗口",
		--[[zhTW]] "聊天視窗",
		--[[ruRU]] "Окно чата",
		--[[koKR]] "채팅창",
		x)

		Ln("Mechanics",
		--[[zhCN]] "特性设置",
		--[[zhTW]] "特性設置",
		--[[ruRU]] "Механика",
		--[[koKR]] "기능",
		x)

		----------------------------------------------------------------------
		-- Use easy resizing
		----------------------------------------------------------------------

		Ln("Use easy resizing",
		--[[zhCN]] "使用简单拉伸",
		--[[zhTW]] "使用簡單拉伸",
		--[[ruRU]] "Испл. легкое измн. размера",
		--[[koKR]] "쉬운 크기조절",
		x)

		Ln("If checked, dragging the General chat tab while the chat frame is locked will expand the chat frame upwards.\n\n\If the chat frame is unlocked, dragging the General chat tab will move the chat frame.",
		--[[zhCN]] "勾选后，对锁定的聊天窗口进行拖动，会使其竖直拉伸。\n\n\对已解锁的聊天窗口进行拖动，会使其移动。",
		--[[zhTW]] "勾選後，對鎖定的聊天視窗進行拖動，會使其豎直拉伸。\n\n\對已解鎖的聊天視窗進行拖動，會使其移動。",
		--[[ruRU]] "Если флажок установлен, перемещение вверх вкладки Общие (если изменение размера чата заблокировано) расширит форму чата.\n\n\Если изменение размеров чата разблокировано, перемещение вкладки Общие приведет к перемещению окна чата.",
		--[[koKR]] "채팅창 잠긴 경우 탭(일반/전투)드레그로 위쪽을 길이 조절 할수있습니다.",
		x)

		----------------------------------------------------------------------
		-- Hide the combat log
		----------------------------------------------------------------------

		Ln("Hide the combat log",
		--[[zhCN]] "隐藏战斗记录窗口",
		--[[zhTW]] "隱藏戰鬥記錄視窗",
		--[[ruRU]] "Скрыть журнал боя",
		--[[koKR]] "전투기록 숨김",
		x)

		Ln("If checked, the combat log will be hidden.\n\nThe combat log must be docked in order for this option to work.\n\nIf the combat log is undocked, you can dock it by dragging the tab (and reloading your UI) or by resetting the chat windows (from the chat menu).",
		--[[zhCN]] "勾选后，战斗记录会被隐藏。\n\n战斗记录窗口必须未被分离时才能生效。\n\n如果战斗记录窗口被分离了，你可以拖动其合并至主窗口（然后重载插件），或者在聊天设置中重置设置。",
		--[[zhTW]] "勾選後，戰鬥記錄會被隱藏。\n\n戰鬥記錄視窗必須未被分離時才能生效。\n\n如果戰鬥記錄視窗被分離了，你可以拖動其合併至主視窗（然後重載插件），或者在聊天設置中重置設置。",
		--[[ruRU]] "Если флажок установлен, журнал боя будет скрыт.\n\nЖурнал боя должен быть присоединён к основному окну чата для того, чтобы этот параметр работал.\n\nЕсли журнал боя откреплён, Вы можете закрепить его перетащив на вкладку чата (после этого необходимо перезагрузить UI) или сбросить настройки окна чата (из соответствующего меню).",
		--[[koKR]] "전투 로그 창을 숨깁니다.",
		x)

			----------------------------------------------------------------------
			-- Chat message
			----------------------------------------------------------------------

			Ln("Combat log cannot be hidden while undocked.",
			--[[zhCN]] "战斗记录窗口被分离时无法隐藏。",
			--[[zhTW]] "戰鬥記錄視窗被分離時無法隱藏。",
			--[[ruRU]] "Журнал боя не может быть скрыт, пока отсоединён.",
			--[[koKR]] "** 창(일반/전투) 연결이 해제되면 숨길수 없습니다.",
			x)

		----------------------------------------------------------------------
		-- Hide chat buttons
		----------------------------------------------------------------------

		Ln("Hide chat buttons",
		--[[zhCN]] "隐藏聊天窗口按钮",
		--[[zhTW]] "隱藏聊天視窗按鈕",
		--[[ruRU]] "Скрыть кнопки чата",
		--[[koKR]] "채팅 버튼 숨김",
		x)

		Ln("If checked, chat frame buttons will be hidden.\n\nClicking chat tabs will automatically show the latest messages.\n\nUse the mouse wheel to scroll through the chat history.  Hold down SHIFT for page jump or CTRL to jump to the top or bottom of the chat history.",
		--[[zhCN]] "勾选后，聊天窗口的按钮会被隐藏。\n\n点击窗口标签会自动显示最新的消息。\n\n使用鼠标滚轮可以查看历史消息。按住SHIFT进行消息页面跳转，按住CTRL将滚动至消息页首/页尾。",
		--[[zhTW]] "勾選後，聊天視窗的按鈕會被隱藏。\n\n點擊視窗標簽會自動顯示最新的消息。\n\n使用鼠標滾輪可以查看歷史訊息。按住SHIFT進行訊息頁面跳轉，按住CTRL將滾動至訊息頁首/頁尾。",
		--[[ruRU]] "Если флажок установлен, кнопки чата будут скрыты.\n\nЩелчек по вкладке чата автоматически покажет последние сообщения.\n\nИспользуйте колесо мыши для прокрутки истории чата. Удерживайте нажатой клавишу SHIFT для перехода на другую страницу чата или CTRL, для перехода к верхней или нижней части истории чата.",
		--[[koKR]] "채팅창의 버튼을 숨깁니다. 최근메시지 표시-탭 클릭. 마우스휠 사용가능.",
		x)

		----------------------------------------------------------------------
		-- Hide social button
		----------------------------------------------------------------------

		Ln("Hide social button",
		--[[zhCN]] "隐藏社交按钮",
		--[[zhTW]] "隱藏社交按鈕",
		--[[ruRU]] "",
		--[[koKR]] "소셜 버튼 숨김",
		x)

		Ln("If checked, the social button and quick-join notification will be hidden.",
		--[[zhCN]] "勾选后，社交按钮和快速加入通知会被隐藏。",
		--[[zhTW]] "勾選後，社交按鈕與快速加入提醒將會隱藏。",
		--[[ruRU]] "",
		--[[koKR]] "사용시, 소셜 버튼과 빠른참여 알림을 숨깁니다.",
		x)

		----------------------------------------------------------------------
		-- Unclamp chat frame
		----------------------------------------------------------------------

		Ln("Unclamp chat frame",
		--[[zhCN]] "不限制窗口位置",
		--[[zhTW]] "不限制視窗位置",
		--[[ruRU]] "Разжать окно чата",
		--[[koKR]] "채팅창 고정 해제",
		x)

		Ln("If checked, you will be able to drag the chat frame to the edge of the screen.",
		--[[zhCN]] "勾选后，你可以把聊天窗口拖动到屏幕边缘。",
		--[[zhTW]] "勾選後，你可以把聊天視窗拖動到屏幕邊緣。",
		--[[ruRU]] "Если флажок установлен, Вы сможете переместить рамку чата к краю экрана.",
		--[[koKR]] "화면 모서리로 채팅창을 옮길수 있습니다.",
		x)

		----------------------------------------------------------------------
		-- Move editbox to top
		----------------------------------------------------------------------

		Ln("Move editbox to top",
		--[[zhCN]] "把文本框移动上方",
		--[[zhTW]] "輸入框移動至頂部",
		--[[ruRU]] "Перемест. окно ввода вверх",
		--[[koKR]] "입력창 상단",
		x)

		Ln("If checked, the editbox will be moved to the top of the chat frame.",
		--[[zhCN]] "勾选后文本框会被移动至聊天窗口上方。",
		--[[zhTW]] "勾選後輸入框會被移動至聊天視窗上方。",
		--[[ruRU]] "Если флажок установлен, поле ввода текста будет перемещено в верхнюю часть окна чата.",
		--[[koKR]] "채팅입력창을 프레임 상단으로 이동 설정됩니다.",
		x)

		----------------------------------------------------------------------
		-- Disable sticky chat
		----------------------------------------------------------------------

		Ln("Disable sticky chat",
		--[[zhCN]] "禁用聊天频道粘滞",
		--[[zhTW]] "停用聊天頻道粘附",
		--[[ruRU]] "Отключить липкий чат",
		--[[koKR]] "채널고정 사용안함",
		x)

		Ln("If checked, sticky chat will be disabled.\n\nNote that this does not apply to temporary chat windows.",
		--[[zhCN]] "勾选后，会禁用聊天频道的粘滞。\n\n此选项不会影响临时对话窗口。",
		--[[zhTW]] "勾選後，會停用聊天頻道的粘附。\n\n此選項不會影響臨時視窗的對話。",
		--[[ruRU]] "Если флажок установлен, липкий чат будет отключен.\n\nОбратите внимание, что это не относится к временным окнам чата или Battle.net разговорам.",
		--[[koKR]] "길드,파티,공격대..대화채널을 고정 되지 않게합니다.",
		x)

		----------------------------------------------------------------------
		-- Use arrow keys in chat
		----------------------------------------------------------------------

		Ln("Use arrow keys in chat",
		--[[zhCN]] "允许使用方向键",
		--[[zhTW]] "允許使用方向鍵",
		--[[ruRU]] "Использовать кнопки в чате",
		--[[koKR]] "화살표 키 사용",
		x)

		Ln("If checked, you can press the arrow keys to move the insertion point left and right in the chat frame.\n\nIf unchecked, the arrow keys will use the default keybind setting.",
		--[[zhCN]] "勾选后，你可以使用方向键移动文本框中的光标。\n\n如果未被勾选，方向键将保持它所绑定的按键功能。",
		--[[zhTW]] "勾選後，你可以使用方向鍵移動聊天框中的輸入點。\n\n如果未被勾選，方向鍵將保持它所綁定的按鍵功能。",
		--[[ruRU]] "Если флажок установлен, Вы сможете нажимать кнопки со стрелками для перемещения курсора влево и вправо в окне чата.\n\nЕсли флажок не установлен, клавиши со стрелками будут использовать настройки назначения клавиш по умолчанию.",
		--[[koKR]] "채팅 프레임에서 삽입 포인터 이동을 화살표 키로 사용 할수있음.",
		x)

		----------------------------------------------------------------------
		-- Disable chat fade
		----------------------------------------------------------------------

		Ln("Disable chat fade",
		--[[zhCN]] "禁用聊天窗口淡出",
		--[[zhTW]] "停用聊天視窗淡出",
		--[[ruRU]] "Откл. затемнение сообщений чата",
		--[[koKR]] "챗 사라짐 비활성",
		x)

		Ln("If checked, chat text will not fade out after a time period.",
		--[[zhCN]] "勾选后，聊天信息不会在一定时间后淡出。",
		--[[zhTW]] "勾選後，聊天訊息不會在一定時間後淡出。",
		--[[ruRU]] "Если флажок установлен, текст чата не будет исчезать после определенного периода времени.",
		--[[koKR]] "채팅글이 일정시간후 사라짐 비활성.",
		x)

		----------------------------------------------------------------------
		-- Universal group color
		----------------------------------------------------------------------

		Ln("Universal group color",
		--[[zhCN]] "统一队伍颜色",
		--[[zhTW]] "通用的隊伍著色",
		--[[ruRU]] "Универсальные цвета групп",
		--[[koKR]] "그룹 색상 통합",
		x)

		Ln("If checked, raid chat and instance chat will both be colored blue (to match the default party chat color).",
		--[[zhCN]] "勾选后，团队和副本聊天信息会改为蓝色（与小队一致）。",
		--[[zhTW]] "勾選後，團隊和副本聊天訊息會改為藍色（與小隊一致）。",
		--[[ruRU]] "Если флажок установлен, чаты рейдов и подземелий будут окрашены в синий цвет (чтобы соответствовать цвету чата группы по умолчанию).",
		--[[koKR]] "파티,공격대 챗색상 모두 같은색(파티)으로",
		x)

		----------------------------------------------------------------------
		-- Use class colors in chat
		----------------------------------------------------------------------

		Ln("Use class colors in chat",
		--[[zhCN]] "聊天职业染色",
		--[[zhTW]] "聊天使用職業顏色",
		--[[ruRU]] "Испл. классовые цвета в чате",
		--[[koKR]] "직업색상 사용",
		x)

		Ln("If checked, class colors will be used in the chat frame.",
		--[[zhCN]] "勾选后，聊天窗口中会使用职业颜色。",
		--[[zhTW]] "勾選後，聊天視窗中會使用職業顏色。",
		--[[ruRU]] "Если флажок установлен, классовые цвета будут использоваться в окне чата.",
		--[[koKR]] "채팅창의 유저네임 직업색상 사용",
		x)

		----------------------------------------------------------------------
		-- Increase chat history
		----------------------------------------------------------------------

		Ln("Increase chat history",
		--[[zhCN]] "增加聊天历史记录",
		--[[zhTW]] "增加聊天歷史記錄",
		--[[ruRU]] "Увеличить историю чата",
		--[[koKR]] "채팅 기록 증가",
		x)

		Ln("If checked, your chat history will increase to 4096 lines.  If unchecked, the default will be used (128 lines).\n\nEnabling this option may prevent some chat text from showing during login.",
		--[[zhCN]] "勾选后，你的聊天历史记录会增涨至4096行。如果未被勾选，会保持在默认的128行。\n\n启用这个设置可能会在登录时会隐藏一些聊天信息。",
		--[[zhTW]] "勾選後，你的聊天歷史記錄會增漲至4096行。如果未被勾選，會保持在預設的128行。\n\n啟用這個設置可能會在登錄時會隱藏一些聊天訊息。",
		--[[ruRU]] "Если флажок установлен, история чата увеличится до 4096 линий. Если флажок не установлен, по умолчанию будет использоваться (128 линий).\n\nВключение этого параметра может помешать отображению некоторого текста во время входа в систему.",
		--[[koKR]] "기본 128행을 4096행으로 증가",
		x)

	----------------------------------------------------------------------
	-- 	LA4: Text
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Text",
		--[[zhCN]] "文本信息",
		--[[zhTW]] "文字訊息",
		--[[ruRU]] "Текст",
		--[[koKR]] "글자",
		x)

		Ln("Visibility",
		--[[zhCN]] "可见性",
		--[[zhTW]] "可見性",
		--[[ruRU]] "Обзор",
		--[[koKR]] "가시성",
		x)

		Ln("Text Size",
		--[[zhCN]] "文本大小",
		--[[zhTW]] "文字大小",
		--[[ruRU]] "Размер текста",
		--[[koKR]] "글자 크기",
		x)

		----------------------------------------------------------------------
		-- Hide error messages
		----------------------------------------------------------------------

		Ln("Hide error messages",
		--[[zhCN]] "隐藏错误信息",
		--[[zhTW]] "隱藏錯誤訊息",
		--[[ruRU]] "Скр. сообщ. об ошибках",
		--[[koKR]] "에러메시지 숨김",
		x)

		Ln("If checked, error messages (such as 'Not enough rage') will not be shown.\n\nIf you have the minimap button enabled, you can hold down CTRL and right-click it to toggle error messages without affecting this setting.",
		--[[zhCN]] "勾选后，错误信息（例如“怒气不足”）不再显示。\n\n如果你启用了小地图按钮，你可以CTRL+右键点击来进行开关。",
		--[[zhTW]] "勾選後，錯誤訊息（例如“怒氣不足”）不再顯示。\n\n如果你啟用了小地圖按鈕，你可以Ctrl+右鍵點擊來進行開關。",
		--[[ruRU]] "Если флажок установлен, сообщения об ошибках (например, 'Недостаточно энергии') будут скрыты.\n\nЕсли кнопка у миникарты включена, Вы можете щелкнуть правой кнопкой мыши по ней, для переключения данного параметра, не входя в настройки.",
		--[[koKR]] "상단에 표시되는 에러메시지를 표시 하지 않습니다.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Error Text",
			--[[zhCN]] "错误文本",
			--[[zhTW]] "錯誤文字",
			--[[ruRU]] "Сообщения об ошибках",
			--[[koKR]] "에러메시지",
			x)

			Ln("Show quest updates",
			--[[zhCN]] "显示任务进度",
			--[[zhTW]] "顯示任務進度",
			--[[ruRU]] "Отображать обновления задания",
			--[[koKR]] "퀘스트 업데이트 표시",
			x)

			Ln("If checked, quest updates will be shown in the error frame.",
			--[[zhCN]] "勾选后，任务进度会被显示在错误信息面板。",
			--[[zhTW]] "勾選後，任務進度會被顯示在錯誤訊息面板。",
			--[[ruRU]] "Если флажок установлен, сообщения об изменении статуса заданий будут отображены в окне ошибок.",
			--[[koKR]] "퀘스트 진행상황 메시지는 표시됩니다.",
			x)

			Ln("Show important error text",
			--[[zhCN]] "显示重要错误文本",
			--[[zhTW]] "顯示重要錯誤文字",
			--[[ruRU]] "Отображать важные сообщения об ошибках",
			--[[koKR]] "중요한 오류 표시",
			x)

			Ln("If checked, the following errors will be shown in the error frame:\n\n- Inventory full\n- Quest log full\n- Votekick alerts",
			--[[zhCN]] "勾选后，如下的错误信息会显示在面板中：\n\n- 背包已满\n\n- 任务列表已满\n\n- 投票踢人通知",
			--[[zhTW]] "勾選後，如下的錯誤訊息會顯示在面板中：\n\n- 背包已滿\n- 任務列表已滿\n- 投票踢人通知",
			--[[ruRU]] "Если флажок установлен, следующие ошибки будут отображены в окне ошибок:\n\n- Инвентарь полон\n- Журнал заданий полон\n- Оповещения об исключении\n- Оповещения банка гильдии",
			--[[koKR]] "가방,퀘스트 가득참. 추방투표 알림 표시.",
			x)

		----------------------------------------------------------------------
		-- Hide portrait numbers
		----------------------------------------------------------------------

		Ln("Hide portrait numbers",
		--[[zhCN]] "隐藏头像数字",
		--[[zhTW]] "隱藏頭像數字",
		--[[ruRU]] "Скрыть числа на портрете",
		--[[koKR]] "초상화 전투수치 숨김",
		x)

		Ln("If checked, damage and healing numbers in the player and pet portrait frames will be hidden.",
		--[[zhCN]] "勾选后，在玩家头像和宠物头像上的伤害及治疗数字不再显示。",
		--[[zhTW]] "勾選後，在玩家頭像和寵物頭像上的傷害及治療數字不再顯示。",
		--[[ruRU]] "Если флажок установлен, значения урона и лечения на рамках игрока и питомца будут скрыты.",
		--[[koKR]] "유닛프레임 초상화에 표시되는 데미지,힐 수치 표시 숨김.",
		x)

		----------------------------------------------------------------------
		-- Hide crafted names
		----------------------------------------------------------------------

		Ln("Hide crafted names",
		--[[zhCN]] "隐藏制造者名字",
		--[[zhTW]] "隱藏製造者名稱",
		--[[ruRU]] "Скрыть имя изготовителя",
		--[[koKR]] "제작자 이름 숨김",
		x)

		Ln("If checked, crafted items will no longer show the name of the crafter.",
		--[[zhCN]] "勾选后，制造物品不再显示制造者的名字。",
		--[[zhTW]] "勾選後，製造物品將不再顯示製造者名稱",
		--[[ruRU]] "Если флажок установлен, имя изготовителя больше не будет отображаться на изготовленной вещи.",
		--[[koKR]] "제작된 아이템의 제작자 이름을 표시 하지 않습니다.",
		x)

		----------------------------------------------------------------------
		-- Hide zone text
		----------------------------------------------------------------------

		Ln("Hide zone text",
		--[[zhCN]] "隐藏区域文本",
		--[[zhTW]] "隱藏區域文字",
		--[[ruRU]] "Скрыть название зоны",
		--[[koKR]] "지역명 숨김",
		x)

		Ln("If checked, zone text will not be shown (eg. 'Ironforge').",
		--[[zhCN]] "勾选后，区域文本不再显示。",
		--[[zhTW]] "勾選後，區域文字不再顯示。",
		--[[ruRU]] "Если флажок установлен, текст названия зоны не будет отображаться (напр., 'Стальгорн').",
		--[[koKR]] "화면 가운데 표시되는 지역명 숨김. (예: 아이언포지)",
		x)

		----------------------------------------------------------------------
		-- Hide subzone text
		----------------------------------------------------------------------

		Ln("Hide subzone text",
		--[[zhCN]] "隐藏次级区域文本",
		--[[zhTW]] "隱藏次級區域文字",
		--[[ruRU]] "Скрыть название территории",
		--[[koKR]] "하위지역명 숨김",
		x)

		Ln("If checked, subzone text will not be shown (eg. 'Mystic Quarter').",
		--[[zhCN]] "勾选后，次级区域文本不再显示。",
		--[[zhTW]] "勾選後，次級區域文字不再顯示。",
		--[[ruRU]] "Если флажок установлен, текст названия территории зоны не будет отображаться (напр., 'Палаты магии').",
		--[[koKR]] "화면 가운데 표시되는 하위지역명 숨김. (예: 신비의 전당).",
		x)

		----------------------------------------------------------------------
		-- Resize mail text
		----------------------------------------------------------------------

		Ln("Resize mail text",
		--[[zhCN]] "重设邮件文本",
		--[[zhTW]] "重設郵件文字",
		--[[ruRU]] "Измн. размер текста сообщ.",
		--[[koKR]] "우편 글자 설정",
		x)

		Ln("If checked, you will be able to change the font size of standard mail text.\n\nThis does not affect mail created using templates (such as auction house invoices).",
		--[[zhCN]] "勾选后，你可以更改邮件文本的字体大小。\n\n这个选项不会影响系统邮件模版（例如拍卖行的收据信息）。",
		--[[zhTW]] "勾選後，你可以更改郵件文字的字體大小。\n\n這個選項不會影響使用系統範本的郵件（例如拍賣行的收據訊息）。",
		--[[ruRU]] "Если флажок установлен, Вы сможете изменить стандартный размер шрифта текста письма.",
		--[[koKR]] "우편글자 크기를 변경할수 있습니다.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Mail Text",
			--[[zhCN]] "邮件文本",
			--[[zhTW]] "郵件文字",
			--[[ruRU]] "Текст сообщения",
			--[[koKR]] "우편 글자",
			x)

			Ln("Text size",
			--[[zhCN]] "字体尺寸",
			--[[zhTW]] "字體尺寸",
			--[[ruRU]] "Размер текста",
			--[[koKR]] "글자 크기",
			x)

		----------------------------------------------------------------------
		-- Resize quest text
		----------------------------------------------------------------------

		Ln("Resize quest text",
		--[[zhCN]] "重设任务文本",
		--[[zhTW]] "重設任務文字",
		--[[ruRU]] "Измн. размер текста задания",
		--[[koKR]] "퀘스트 글자 설정",
		x)

		Ln("If checked, you will be able to change the font size of quest text.\n\nEnabling this option will also change the text size of other frames which inherit the same font (such as the Dungeon Finder frame).",
		--[[zhCN]] "勾选后，你可以更改任务信息文本的字体大小。\n\n启用这个选项也会影响使用同一文本模版的框体（例如地下城查找器）。",
		--[[zhTW]] "勾選後，你可以更改任務訊息文字的字體大小。\n\n啟用這個選項也會影響使用同一文字模版的框架（例如地城搜尋器）。",
		--[[ruRU]] "Если флажок установлен, Вы сможете изменить размер шрифта текста задания.\n\nВключение этого параметра будет влиять на размер текста других окон, наследующих один и тот же шрифт (например, окно поиска подземелий).",
		--[[koKR]] "퀘스트 글자 크기를 변경 할수 있습니다.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Quest Text",
			--[[zhCN]] "任务信息文本",
			--[[zhTW]] "任務訊息文字",
			--[[ruRU]] "Текст задания",
			--[[koKR]] "퀘스트 글자",
			x)

			Ln("Text Size",
			--[[zhCN]] "字体尺寸",
			--[[zhTW]] "字體尺寸",
			--[[ruRU]] "Размер текста",
			--[[koKR]] "글자 크기",
			x)

	----------------------------------------------------------------------
	-- 	LA5: Interface
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Interface",
		--[[zhCN]] "界面设置",
		--[[zhTW]] "界面設置",
		--[[ruRU]] "Интерфейс",
		--[[koKR]] "인터페이스",
		x)

		Ln("Enhancements",
		--[[zhCN]] "增强功能",
		--[[zhTW]] "增強功能",
		--[[ruRU]] "Улучшения",
		--[[koKR]] "기능 향상",
		x)

		Ln("Extras",
		--[[zhCN]] "其他",
		--[[zhTW]] "其他",
		--[[ruRU]] "Дополнения",
		--[[koKR]] "기타",
		x)

		----------------------------------------------------------------------
		-- Enhance world map
		----------------------------------------------------------------------

		Ln("Enhance world map",
		--[[zhCN]] "增强世界地图",
		--[[zhTW]] "增強世界地圖",
		--[[ruRU]] "Улучшить карту мира",
		--[[koKR]] "세계지도 강화",
		x)

		Ln("If checked, you will be able to reveal unexplored areas of the map and show cursor coordinates at the top of the map.",
		--[[zhCN]] "勾选后，你可以显示地图的未探索区域，同时在顶部显示地图坐标。",
		--[[zhTW]] "勾選後，你可以顯示地圖的未探索區域，同時在頂部顯示地圖坐標。",
		--[[ruRU]] "Если флажок установлен, у Вас появиться возможность изучить скрытые области на карте и показать координаты курсора в ее верхней части.",
		--[[koKR]] "미탐험 지역 표시, 좌표 표시 설정",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("World Map",
			--[[zhCN]] "世界地图",
			--[[zhTW]] "世界地圖",
			--[[ruRU]] "Карта мира",
			--[[koKR]] "세계지도",
			x)

			Ln("Reveal unexplored areas of the map",
			--[[zhCN]] "显示地图未探索区域",
			--[[zhTW]] "顯示未探索區域",
			--[[ruRU]] "Показать скрытые области на карте",
			--[[koKR]] "미탐험 지역 밝힘",
			x)

			Ln("If checked, unexplored areas of the map will be revealed.",
			--[[zhCN]] "勾选后，将显示世界地图上的未探索区域。",
			--[[zhTW]] "勾選後，將顯示世界地圖上的未探索區域。",
			--[[ruRU]] "Если флажок установлен, на карте будут отображены неисследованные области.",
			--[[koKR]] "지도의 미탐험 지역을 밝혀줍니다.",
			x)

			Ln("Show reveal checkbox at the top of the map",
			--[[zhCN]] "地图上方显示开关复选框",
			--[[zhTW]] "地圖上方顯示切換復選框",
			--[[ruRU]] "Показать флажок неисследованных областей в верхней части карты",
			--[[koKR]] "지도의 상단 체크박스 표시",
			x)

			Ln("If checked, a checkbox will be shown at the top of the map which will allow you to toggle unexplored areas directly from the map frame.",
			--[[zhCN]] "勾选后，一个复选框会显示在地图上方，让你可以通过它自行开关未探索区域的显示功能。",
			--[[zhTW]] "勾選後，一個復選框會顯示在地圖上方，讓你可以自行切換未探索區域的顯示功能。",
			--[[ruRU]] "Если флажок установлен, в верхней части мировой карты будет отображен флажок, который позволит Вам переключать неисследованные области непосредственно на карте мира.",
			--[[koKR]] "지도의 상단에 미탐험 지역을 표시 전환할수 있는 설정을 표시합니다.",
			x)

			Ln("Show cursor coordinates at the top of the map",
			--[[zhCN]] "显示鼠标浮点坐标。",
			--[[zhTW]] "在地圖上方顯示滑鼠所在坐標。",
			--[[ruRU]] "Показывать координаты курсора в верхней части карты",
			--[[koKR]] "커서 위치의 좌표 표시",
			x)

			Ln("If checked, cursor coordinates will be shown at the top of the map.",
			--[[zhCN]] "勾选后，鼠标浮点坐标会显示在世界地图上方。",
			--[[zhTW]] "勾選後，滑鼠所在坐標會顯示在世界地圖上方。",
			--[[ruRU]] "Если флажок установлен, координаты курсора мыши будут отображены в верхней части мировой карты.",
			--[[koKR]] "상단에 지도상 커서 위치의 좌표를 표시합니다.",
			x)

			Ln("Fade windowed map while moving",
			--[[zhCN]] "移动时淡出区域地图",
			--[[zhTW]] "移動時淡出區域地圖",
			--[[ruRU]] "Делать прозрачной карту мира в оконном режиме при перемещении",
			--[[koKR]] "이동중 지도 반 투명",
			x)

			Ln("If checked, the windowed map will fade while your character is moving and the cursor is not over the map.",
			--[[zhCN]] "勾选后，当你移动时，同时鼠标也并未指向区域地图，则区域地图会淡出。",
			--[[zhTW]] "勾選後，當你移動時，同時鼠標也並未指向區域地圖，則區域地圖會淡出。",
			--[[ruRU]] "Если флажок установлен, карта мира в оконном режиме будет автоматически становиться прозрачной, если Ваш персонаж будет передвигаться и курсор мыши не будет находиться над картой.",
			--[[koKR]] "지도에 커서가 없고 이동중일때 반 투명 해집니다.",
			x)

			----------------------------------------------------------------------
			-- World map reveal checkbox
			----------------------------------------------------------------------

			Ln("Reveal",
			--[[zhCN]] "地图全亮",
			--[[zhTW]] "地圖全亮",
			--[[ruRU]] "Туман войны",
			--[[koKR]] "미탐험 밝힘",
			x)

		----------------------------------------------------------------------
		-- Customise minimap
		----------------------------------------------------------------------

		Ln("Customise minimap",
		--[[zhCN]] "自定义小地图",
		--[[zhTW]] "自定義小地圖",
		--[[ruRU]] "Настроить миникарту",
		--[[koKR]] "미니맵 설정",
		x)

		Ln("If checked, you will be able to customise and rescale the minimap.",
		--[[zhCN]] "勾选后，你可以自定义小地图的大小。",
		--[[zhTW]] "勾選後，你可以自定義小地圖的大小。",
		--[[ruRU]] "Если флажок установлен, Вы сможете настраивать и изменять размеры миникарты.",
		--[[koKR]] "미니맵의 사용자 설정",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Minimap",
			--[[zhCN]] "小地图",
			--[[zhTW]] "小地圖",
			--[[ruRU]] "Миникарта",
			--[[koKR]] "미니맵",
			x)

			Ln("Merge tracking button with calendar button",
			--[[zhCN]] "合并追踪与日历按钮",
			--[[zhTW]] "合併追蹤與日曆按鈕",
			--[[ruRU]] "Объединить кнопки отслеживания и календаря",
			--[[koKR]] "달력을 추적 버튼으로 통합",
			x)

			Ln("If checked, the minimap tracking button will be merged with the calendar button to save space.\n\nThe new tracking button will be moved to the space normally occupied by the calendar button.\n\nYou will be able to left-click the tracking button to show the tracking menu and right-click it to show the calendar.",
			--[[zhCN]] "勾选后，小地图的追踪按钮会和日历按钮合并以便节省空间。\n\n新的追踪按钮会被移动至日历按钮的位置。\n\n你可以左键点击打开追踪，右键点击打开日历。",
			--[[zhTW]] "勾選後，小地圖的追蹤按鈕會和日曆按鈕合並以便節省空間。\n\n新的追蹤按鈕會被移動至日曆按鈕的位置。\n\n你可以左鍵點擊打開追蹤，右鍵點擊打開日曆。",
			--[[ruRU]] "Если флажок установлен, кнопки отслеживания и календаря на миникарте будут объединены в одну, для экономии пространства\n\nНовая кнопка будет перемещена на место занимаемое обычно кнопкой календаря.\n\nВы сможете щелкнуть левой кнопкой мыши по этой кнопке для того, чтобы отобразить меню отслеживания и правой кнопкой мыши, чтобы показать окно календаря.",
			--[[koKR]] "미니맵의 달력이 추적 버튼으로 합쳐집니다. 추적버튼은 달력으로 이동. 오른쪽 클릭으로 달력 표시. ",
			x)

			Ln("Hide zone information above the minimap",
			--[[zhCN]] "隐藏区域信息",
			--[[zhTW]] "隱藏區域訊息",
			--[[ruRU]] "Скрыть информацию о зоне на миникарте",
			--[[koKR]] "미니맵 상단 지역정보 숨김",
			x)

			Ln("If checked, the zone information shown above the minimap, as well as the world map button, will be hidden.\n\nThe tooltip for the tracking button will show zone text information instead.\n\nTo show the world map, press the map bind key (M by default).",
			--[[zhCN]] "勾选后，小地图上方的区域信息和地图按钮会被隐藏。\n\n追踪按钮的鼠标提示窗口会代为显示区域信息。\n\n你可以使用所绑定的按键来打开世界地图（默认M键）",
			--[[zhTW]] "勾選後，小地圖上方的區域訊息和地圖按鈕會被隱藏。\n\n追蹤按鈕的滑鼠提示視窗會代為顯示區域訊息。\n\n你可以使用所綁定的按鍵來打開世界地圖（預設M鍵）",
			--[[ruRU]] "Если флажок установлен, сведения о зоне отображаемые выше миникарты, а также кнопка карта мира, будут скрыты.",
			--[[koKR]] "미니맵 지역정보 숨김. 추적 툴팁에 대신 표시",
			x)

			Ln("Hide the clock below the minimap",
			--[[zhCN]] "隐藏时钟",
			--[[zhTW]] "隱藏時鐘",
			--[[ruRU]] "Скрыть часы под миникартой",
			--[[koKR]] "미니맵 시계 숨김",
			x)

			Ln("If checked, the clock will be hidden.",
			--[[zhCN]] "勾选后，隐藏小地图的时钟",
			--[[zhTW]] "勾選後，隱藏小地圖的時鐘",
			--[[ruRU]] "Если флажок установлен, часы будут скрыты.",
			--[[koKR]] "시계 숨김",
			x)

			Ln("Use the mousewheel to zoom in and out",
			--[[zhCN]] "启用滚轮缩放",
			--[[zhTW]] "啟用滾輪縮放",
			--[[ruRU]] "Использовать колесо мыши для увеличения или уменьшения масштаба",
			--[[koKR]] "확대/축소 마우스휠 사용",
			x)

			Ln("If checked, you will be able to use the mousewheel to zoom in and out of the minimap.  The zoom in/out buttons will be hidden.",
			--[[zhCN]] "勾选后，你可以通过滚轮缩放小地图的区域。相关放大/缩小按钮将被隐藏。",
			--[[zhTW]] "勾選後，你可以通過滾輪縮放小地圖的區域。相關放大/縮小按鈕將被隱藏。",
			--[[ruRU]] "Если флажок установлен, Вы будете иметь возможность использовать колесо мыши для увеличения и уменьшения масштаба миникарты. Кнопки изменения масштаба будут скрыты.",
			--[[koKR]] "마우스휠로 확대,축소 사용가능. 확대/축소 버튼 숨김.",
			x)

			Ln("Minimap scale",
			--[[zhCN]] "小地图尺寸",
			--[[zhTW]] "小地圖尺寸",
			--[[ruRU]] "Масштаб миникарты",
			--[[koKR]] "미니맵 크기",
			x)

			Ln("Scale and style the minimap using the settings on this page.\n\nThis panel will close automatically if you enter combat.",
			--[[zhCN]] "重设小地图的尺寸大小。\n\n这个页面在战斗中会自动隐藏",
			--[[zhTW]] "重設小地圖的尺寸大小。\n\n這個頁面在戰鬥中會自動隱藏",
			--[[ruRU]] "Используйте параметры на этой странице для изменения масштаба и стиля миникарты.\n\nЭто окно будет автоматически закрыто, если Вы вступите в бой.",
			--[[koKR]] "미니맵 크기 설정.",
			x)

		----------------------------------------------------------------------
		-- Manage tooltip
		----------------------------------------------------------------------

		Ln("Manage tooltip",
		--[[zhCN]] "鼠标信息窗口",
		--[[zhTW]] "管理提示訊息",
		--[[ruRU]] "Упр. вспл. подсказками",
		--[[koKR]] "툴팁 설정",
		x)

		Ln("If checked, the tooltip will be color coded and you will be able to modify the tooltip layout and scale.",
		--[[zhCN]] "勾选后，鼠标信息会被着色，你可以设置他的布局和大小尺寸。",
		--[[zhTW]] "勾選後，提示訊息會被著色，你可以設置他的佈局和大小尺寸。",
		--[[ruRU]] "Если флажок установлен, всплывающие подсказки будут выделены цветом, и у Вас появится возможность изменять их расположение и масштаб.",
		--[[koKR]] "툴팁의 크기,위치,배경색 설정",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Tooltip",
			--[[zhCN]] "鼠标信息窗口",
			--[[zhTW]] "提示訊息",
			--[[ruRU]] "Подсказки",
			--[[koKR]] "툴팁",
			x)

			Ln("Show guild ranks for your guild",
			--[[zhCN]] "显示会阶",
			--[[zhTW]] "顯示會階",
			--[[ruRU]] "Отображать ранги для Вашей гильдии",
			--[[koKR]] "나의 길드 등급 표시",
			x)

			Ln("If checked, guild ranks will be shown for players in your guild.",
			--[[zhCN]] "勾选后，显示公会会阶。",
			--[[zhTW]] "勾選後，顯示公會會階。",
			--[[ruRU]] "Если флажок установлен, ранг в гильдии будет отображаться для игроков в Вашей гильдии.",
			--[[koKR]] "나의 길드등급 표시",
			x)

			Ln("Show the unit's target",
			--[[zhCN]] "显示目标的目标",
			--[[zhTW]] "顯示目標的目標",
			--[[ruRU]] "Отображать цель цели",
			--[[koKR]] "대상의대상 표시",
			x)

			Ln("If checked, unit targets will be shown.",
			--[[zhCN]] "勾选后，目标的目标会显示在信息窗口上。",
			--[[zhTW]] "勾選後，目標的目標會顯示在訊息視窗上。",
			--[[ruRU]] "Если флажок установлен, будет отображаться цель цели.",
			--[[koKR]] "대상의 대상 표시",
			x)

			Ln("Color the backdrops based on faction",
			--[[zhCN]] "根据阵营着色边框",
			--[[zhTW]] "根據陣營著色邊框",
			--[[ruRU]] "Цвет фона на основе цвета фракции",
			--[[koKR]] "진영에 따른 배경색상",
			x)

			Ln("If checked, backdrops will be tinted blue (friendly) or red (hostile).",
			--[[zhCN]] "勾选后，信息窗口的边框会更改为蓝色（右方）或者红色（敌方）。",
			--[[zhTW]] "勾選後，訊息視窗的邊框會更改為藍色（友方）或者紅色（敵方）。",
			--[[ruRU]] "Если флажок установлен, фон подсказки будет синим (дружественная цель) или красным (враждебная цель).",
			--[[koKR]] "적대적-붉은색, 우호적-파란색",
			x)

			Ln("Hide tooltips for world units during combat",
			--[[zhCN]] "战斗中隐藏窗口",
			--[[zhTW]] "戰鬥中隱藏視窗",
			--[[ruRU]] "Скрыть подсказки для мировых объектов во время боя",
			--[[koKR]] "전투중 월드유닛 툴팁 숨김",
			x)

			Ln("If checked, tooltips for world units will be hidden during combat.\n\nYou can hold the shift key down to over-ride this setting.",
			--[[zhCN]] "勾选后，目标的信息窗口在战斗中会被隐藏。\n\n你可以按住SHIFT键暂时忽略这个设置。",
			--[[zhTW]] "勾選後，目標的訊息視窗在戰鬥中會被隱藏。\n\n你可以按住SHIFT鍵暫時忽略這個設置。",
			--[[ruRU]] "Если флажок установлен, подсказки для мировых объектов будут скрыты во время боя.\n\nВы можете удерживать клавишу SHIFT для временного игнорирования этой настройки.",
			--[[koKR]] "전투중 월드유닛 툴팁 숨김",
			x)

			Ln("Tooltip scale",
			--[[zhCN]] "信息窗口大小",
			--[[zhTW]] "訊息視窗大小",
			--[[ruRU]] "Масштаб подсказки",
			--[[koKR]] "툴팁 크기",
			x)

			Ln("Drag the tooltip overlay to position it.\n\nScale and style the tooltip using the settings on this page.",
			--[[zhCN]] "拖动鼠标信息的外框来重新定位。\n\n尺寸大小的通过下方选项设置。",
			--[[zhTW]] "拖動鼠標訊息的外框來重新定位。\n\n尺寸大小的通過下方選項設置。",
			--[[ruRU]] "Переместите окно всплывающих подсказок.\n\nИзмените масштаб и стиль подсказок с использованием настроек на этой странице.",
			--[[koKR]] "위치 변경은 툴팁 드레그 이동",
			x)

		----------------------------------------------------------------------
		-- Show volume slider
		----------------------------------------------------------------------

		Ln("Show volume slider",
		--[[zhCN]] "显示音量控制",
		--[[zhTW]] "顯示音量控制",
		--[[ruRU]] "Отобр. ползунок рег. громкости",
		--[[koKR]] "소리 조절 표시",
		x)

		Ln("If checked, a master volume slider will be shown on the character sheet.\n\nThe volume slider can be placed in either of two locations on the character sheet.  To toggle between them, hold the shift key down and right-click the slider.",
		--[[zhCN]] "勾选后，一个全局音量控制滑块会显示在角色信息框体。\n\n这个音量控制可以在两个位置之间切换，你可以按住SHIFT+鼠标右键进行切换。",
		--[[zhTW]] "勾選後，一個全局音量控制桿會顯示在角色訊息視窗。\n\n這個音量控制可以在兩個位置之間切換，你可以按住SHIFT+鼠標右鍵進行切換。",
		--[[ruRU]] "Если флажок установлен, ползунок регулировки основной громкости будет отображен на окне персонажа.\n\nПолзунок может быть размещен в любом из двух местах на окне персонажа. Для переключения между ними, удерживая клавишу SHIFT щелкните правой кнопкой мыши по ползунку.",
		--[[koKR]] "케릭창 하단 소리 조절 표시. 마스터 볼륨.",
		x)

		----------------------------------------------------------------------
		-- Show auction controls
		----------------------------------------------------------------------

		Ln("Show auction controls",
		--[[zhCN]] "显示拍卖行控制",
		--[[zhTW]] "顯示拍賣行控制",
		--[[ruRU]] "Отобр. элементы упрл. аукциона",
		--[[koKR]] "경매 추가 기능",
		x)

		Ln("If checked, additional functionality will be added to the auction house.\n\nBuyout only - create buyout auctions without filling in the starting price.\n\nGold only - set the copper and silver prices at 99 to speed up new auctions.\n\nFind - search the auction house for the item you are selling.\n\nIn addition, the auction duration setting will be saved account-wide.",
		--[[zhCN]] "勾选后，会给拍卖行添加额外的功能：\n\n仅限一口价 - 使用后，你不再需要输入起始价格。\n\n仅输入金币 - 自动在银币和铜币位输入99，以便加快新物品的上架。\n\n搜索按钮 - 在拍卖行搜索你正在出售的物品。\n\n额外的，拍卖物品的持续时间设置将保存为账户通用设置。",
		--[[zhTW]] "勾選後，會給拍賣行添加額外的功能：\n\n僅限直購價 - 使用後，你不再需要輸入起始價格。\n\n僅輸入金幣 - 自動在銀幣和銅幣位輸入99，以便加快新物品的上架。\n\n搜索按鈕 - 在拍賣行搜索你正在出售的物品。\n\n額外的，拍賣物品的持續時間設置將保存為賬戶通用設置。",
		--[[ruRU]] "Если флажок установлен, дополнительные функциональные возможности будут добавлены в аукционный дом.\n\nТолько выкуп - создать аукционы без заполнения стартовой цены.\n\nТолько золото - установить в цене медь и серебро сразу на 99, чтобы ускорить новые аукционы.\n\nПоиск - поиск аукционов для предмета, который Вы продаете.\n\nКроме этого, настройка длительности аукциона будет сохранен на всем аккаунте.",
		--[[koKR]] "경매창 기능  추가 \n\n즉시구입가 만! :시작가격없이 즉구가만 생성.\n\n 골드 만! :은99동99 자동입력.골드만 입력. \n\n아이템찾기: 경매물품 검색.",
		x)

			----------------------------------------------------------------------
			-- Auction house controls
			----------------------------------------------------------------------

			Ln("Find Item",
			--[[zhCN]] "查找物品",
			--[[zhTW]] "搜尋物品",
			--[[ruRU]] "Найти предмет",
			--[[koKR]] "아이템찾기",
			x)

			Ln("Buyout Only",
			--[[zhCN]] "仅限一口价",
			--[[zhTW]] "僅限直購價",
			--[[ruRU]] "Только выкуп",
			--[[koKR]] "즉시구입가 만!",
			x)

			Ln("Gold Only",
			--[[zhCN]] "仅输入金币",
			--[[zhTW]] "僅輸入金幣",
			--[[ruRU]] "Только золото",
			--[[koKR]] "골드 만!",
			x)

			Ln("To use the Find button, you need to deselect the Game Time filter.",
			--[[zhCN]] "使用搜索功能前，你要取消选择游戏时间过滤器。",
			--[[zhTW]] "使用搜索功能前，你要取消選擇游戲時間過濾器。",
			--[[ruRU]] "Чтобы использовать кнопку поиска, Вам нужно отменить выбор фильтра 'Жетон WoW'.",
			--[[koKR]] "찾기 버튼을 사용하려면 게임 시간 필터를 해제해야합니다.",
			x)

		----------------------------------------------------------------------
		-- Show dressup buttons
		----------------------------------------------------------------------

		Ln("Show dressup buttons",
		--[[zhCN]] "显示试衣间按钮",
		--[[zhTW]] "顯示試衣間按鈕",
		--[[ruRU]] "Отобр. кнопки гардероба",
		--[[koKR]] "미리보기 추가 기능",
		x)

		Ln("If checked, two buttons will be added to the dressup frame which will allow you to hide your tabard or appear nude.",
		--[[zhCN]] "勾选后，两个按钮会添加到试衣间框体，用来隐藏战袍或者隐藏着装。",
		--[[zhTW]] "勾選後，兩個按鈕會添加到試衣間框架，用來隱藏戰袍或者脫光。",
		--[[ruRU]] "Если флажок установлен, две кнопки будут добавлены в окно просмотра гардероба, которые позволят Вам скрыть свою накидку или полностью раздеться.",
		--[[koKR]] "미리보기에 옷벗기,휘장숨김 버튼 추가",
		x)

			----------------------------------------------------------------------
			-- Dressup controls
			----------------------------------------------------------------------

			Ln("Nude",
			--[[zhCN]] "隐藏着装",
			--[[zhTW]] "脫光",
			--[[ruRU]] "Раздеться",
			--[[koKR]] "옷벗기",
			x)

			Ln("Tabard",
			--[[zhCN]] "隐藏战袍",
			--[[zhTW]] "隱藏戰袍",
			--[[ruRU]] "Накидка",
			--[[koKR]] "휘장숨김",
			x)

		----------------------------------------------------------------------
		-- Show coordinates
		----------------------------------------------------------------------

		Ln("Show coordinates",
		--[[zhCN]] "显示坐标",
		--[[zhTW]] "顯示坐標",
		--[[ruRU]] "Отобр. координаты",
		--[[koKR]] "좌표 표시",
		x)

		Ln("If checked, coordinates representing your character's location will be shown in a movable, customisable frame.",
		--[[zhCN]] "勾选后，你当前所在地点的坐标会显示在一个可自定义的窗口。",
		--[[zhTW]] "勾選後，你當前所在地點的坐標會顯示在一個可自定義的視窗。",
		--[[ruRU]] "Если флажок установлен, координаты Вашего местоположения будут отображаться в перемещаемом, настраиваемом окне.",
		--[[koKR]] "좌표를 나타내는 프레임 표시.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Coordinates",
			--[[zhCN]] "坐标",
			--[[zhTW]] "坐標",
			--[[ruRU]] "Координаты",
			--[[koKR]] "좌표",
			x)

			Ln("Show the coordinates frame",
			--[[zhCN]] "显示坐标框体",
			--[[zhTW]] "顯示坐標框架",
			--[[ruRU]] "Отображать окно координат",
			--[[koKR]] "좌표 프레임 표시",
			x)

			Ln("If checked, the coordinates frame will be shown.\n\nIf you have the minimap button enabled, you can hold down SHIFT and right-click it to toggle this setting at any time.\n\nIf unchecked, the coordinates frame will be disabled and no CPU power will be allocated to updating it.",
			--[[zhCN]] "勾选后，会显示坐标框体。\n\n如果插件的小地图按钮启用了，你可以按住SHIFT+右键点击来进行设置。\n\n如果未勾选，这个坐标框体会被禁用，同时也不会有任何资源占用。",
			--[[zhTW]] "勾選後，會顯示坐標框架。\n\n如果插件的小地圖按鈕啟用了，你可以按住SHIFT+右鍵點擊來進行設置。\n\n如果未勾選，這個坐標框架會被停用，同時也不會有任何資源占用。",
			--[[ruRU]] "Если флажок установлен, окно координат будет отображаться.\n\Если у Вас включена кнопка на миникарте, Вы можете нажать на нее правой кнопкой мыши, удерживая клавишу SHIFT для переключения этого параметра в любое время.\n\nЕсли флажок не установлен, то окно координат будет отключено, и на его обновление не будет выделено ресурсов процессора.",
			--[[koKR]] "좌표 프레임 표시. \n\n미니맵 버튼 Shift+오른클릭으로 전환 사용가능.",
			x)

			Ln("Darken the frame background",
			--[[zhCN]] "显示深色背景",
			--[[zhTW]] "顯示深色背景",
			--[[ruRU]] "Затемнить фон окна",
			--[[koKR]] "배경 어둡게",
			x)

			Ln("If checked, a dark background will be used for the frame.",
			--[[zhCN]] "勾选后，框体会启用一个深色的背景。",
			--[[zhTW]] "勾選後，框架會啟用一個深色的背景。",
			--[[ruRU]] "Если флажок установлен, для окна будет использоваться темный фон.",
			--[[koKR]] "프레임 배경 어둡게",
			x)

			Ln("Raise the frame strata level",
			--[[zhCN]] "提高框体层级",
			--[[zhTW]] "提高框架層級",
			--[[ruRU]] "Повысить уровень наложения",
			--[[koKR]] "창 계층 높게",
			x)

			Ln("If checked, the frame strata level will be set to HIGH allowing it to show on top of most frames.\n\nIf unchecked, the strata level will be set to MEDIUM.",
			--[[zhCN]] "勾选后，框体的层级会提升至最高，允许它显示在其他框体之上。\n\n如果未勾选，这个框体层级会被设置为中等。",
			--[[zhTW]] "勾選後，框架的層級會提升至最高，允許它顯示在其他框架之上。\n\n如果未勾選，這個框架層級會被設置為中等。",
			--[[ruRU]] "Если флажок установлен, рамка будет размещена на ВЫСОКОМ слое, что позволит ей отображаться над большинством окон.\n\nЕсли флажок не установлен, будет использоваться СРЕДНИЙ уровень наложения.",
			--[[koKR]] "다른창으로 가려지지 않게 계층 설정 사용",
			x)

			Ln("Lock the frame and make it non-interactive",
			--[[zhCN]] "框体禁用交互",
			--[[zhTW]] "鎖定框架防止移動",
			--[[ruRU]] "Зафиксировать окно и сделать его не интерактивным",
			--[[koKR]] "창 잠금",
			x)

			Ln("If checked, the frame will be locked and you will not be able to move it.\n\nEnabling this option will make the frame non-interactive, meaning you will be able to click through it as if it wasn't there.\n\nThis is useful if you are showing the coordinates in a space where you would normally click (such as the game world or minimap).",
			--[[zhCN]] "勾选后，框体会被锁定，你不能再移动它。\n\n启用这个选项后，框体不可交互，意味着你的鼠标不会再被其检测，仿佛框体不存在一般。\n\n这个选项用在当你把其放置于你经常需要点击的地方（比如游戏中央或者小地图）。",
			--[[zhTW]] "勾選後，框架會被鎖定，你不能再移動它。\n\n啟用這個選項後，框架不可互動，意味著你的鼠標不會再被其檢測，仿佛框架不存在一般。\n\n這個選項用在當你把其放置於你經常需要點擊的地方（比如游戲中央或者小地圖）。",
			--[[ruRU]] "Если флажок установлен, окно будет заблокировано, и Вы не сможете переместить его.\n\nВключение этого параметра сделает окно не интерактивным, то есть Вы сможете щелкнуть через него, как если бы его вообще не было.\n\nЭто полезно, если Вы показываете координаты в пространстве, где обычно необходимо куда-либо нажимать (например, игровой мир или миникарта).",
			--[[koKR]] "프레임 이동 고정",
			x)

			Ln("Scale",
			--[[zhCN]] "尺寸",
			--[[zhTW]] "尺寸",
			--[[ruRU]] "Масштаб",
			--[[koKR]] "크기",
			x)

			Ln("Drag the coordinates frame to position it.\n\nScale and style the frame using the settings on this page.",
			--[[zhCN]] "拖动坐标框体来自定义尺寸。\n\n在这个框体上有尺寸大小的设置选项。",
			--[[zhTW]] "拖動坐標框架來自定義尺寸。\n\n在這個框架上有尺寸大小的設置選項。",
			--[[ruRU]] "Переместите окно координат.\n\nИзмените масштаб и стиль окна с использованием настроек на этой странице.",
			--[[koKR]] "죄표 프레임 위치,크기 변경",
			x)

		----------------------------------------------------------------------
		-- Show cooldowns
		----------------------------------------------------------------------

		Ln("Show cooldowns",
		--[[zhCN]] "显示冷却计时",
		--[[zhTW]] "顯示冷卻",
		--[[ruRU]] "",
		--[[koKR]] "쿨다운 아이콘 표시",
		x)

		Ln("If checked, you will be able to place up to five beneficial cooldown icons above the target or player frame.",
		--[[zhCN]] "勾选后，你可以最多放置5个你所需的冷却计时图标在目标或者玩家头像上方。",
		--[[zhTW]] "勾選後，你將能放置五個有益的冷卻圖標在目標或玩家框架之上。",
		--[[ruRU]] "",
		--[[koKR]] "플레이어 또는 대상 프레임(블리자드 유닛 프레임) 위에 5개 쿨다운 아이콘을 설정 표시 할수 있습니다.(전문화별 저장)",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Cooldowns",
			--[[zhCN]] "冷却计时",
			--[[zhTW]] "冷卻",
			--[[ruRU]] "",
			--[[koKR]] "쿨다운 아이콘",
			x)

			Ln("Show tooltips for the cooldown icons",
			--[[zhCN]] "冷却计时提示框",
			--[[zhTW]] "冷卻圖標顯示提示",
			--[[ruRU]] "",
			--[[koKR]] "쿨다운 아이콘 툴팁 표시",
			x)

			Ln("If checked, cooldown icon tooltips will be shown.",
			--[[zhCN]] "勾选后，冷却计时图标支持显示鼠标提示信息。",
			--[[zhTW]] "勾選後，冷卻圖標的提示將會顯示。",
			--[[ruRU]] "",
			--[[koKR]] "쿨다운 아이콘 툴팁 표시",
			x)

			Ln("Show the spell ID in buff icon tooltips",
			--[[zhCN]] "显示法术ID",
			--[[zhTW]] "在增益圖標提示顯示法術ID",
			--[[ruRU]] "",
			--[[koKR]] "툴팁 주문ID 표시",
			x)

			Ln("If checked, spell IDs will be shown in buff icon tooltips located in the buff frame and under the target frame.",
			--[[zhCN]] "勾选后，在Buff框体和目标头像下方的相关法术图标的鼠标提示框中，会显示它们的法术ID。",
			--[[zhTW]] "勾選後，位於增益框架與目標框架之下的增益圖標提示會顯示法術ID。",
			--[[ruRU]] "",
			--[[koKR]] "버프,디버프 툴팁에 주문id 표시",
			x)

			Ln("Hide cooldown duration numbers (if enabled)",
			--[[zhCN]] "隐藏冷却计时（若启用）",
			--[[zhTW]] "隱藏冷卻持續時間數字(如果啟用)",
			--[[ruRU]] "",
			--[[koKR]] "주문 지속시간 숨김",
			x)

			Ln("If checked, cooldown duration numbers will not be shown over the cooldowns.\n\nIf unchecked, cooldown duration numbers will be shown over the cooldowns if they are enabled in the game options panel ('ActionBars' menu).",
			--[[zhCN]] "勾选后，冷却计时数字不再显示。\n\n如果未勾选，在界面-动作条中启用冷却计时后，在相关的冷却中的法术图标会显示计时数字。",
			--[[zhTW]] "勾選後，冷卻持續時間數字將不顯示在冷卻上。\n\n取消勾選後，冷卻持續時間數字將會顯示在冷卻上如果已在遊戲選項面板中啟用('動作條'選單)。",
			--[[ruRU]] "",
			--[[koKR]] "주문 지속시간 숨김",
			x)

			Ln("Anchor the cooldown icons to the player frame",
			--[[zhCN]] "冷却图标锚点至玩家头像",
			--[[zhTW]] "固定冷卻圖標到玩家框架",
			--[[ruRU]] "",
			--[[koKR]] "플레이어 프레임 쿨다운아이콘 표시",
			x)

			Ln("If checked, cooldown icons will be shown above the player frame instead of the target frame.\n\nIf unchecked, cooldown icons will be shown above the target frame.",
			--[[zhCN]] "勾选后，冷却图标会在玩家头像上方，不再在目标头像上方。\n\n如果未勾选，则显示在目标头像上方。",
			--[[zhTW]] "勾選後，冷卻圖標將顯示在玩家框架之上而非目標框架。\n\n取消勾選後，冷卻圖標將顯示在目標框架之上。",
			--[[ruRU]] "",
			--[[koKR]] "쿨다운 아이콘이 플레이어 프레임에 표시. 선택안하면 대상프레임",
			x)

			Ln("Enter the spell IDs for the cooldown icons that you want to see.\n\nIf you want a cooldown icon to show only when it is stacked, enter the minimum stack size (otherwise leave it blank).\n\nIf a cooldown icon normally appears under the pet frame, check the pet checkbox.\n\nCooldown icons are saved to your class and specialisation.",
			--[[zhCN]] "输入你想要监视技能的法术ID。\n\n如果你想要同时监视法术层数，需输入最小的层数（否则留空）。\n\n如果这个法术通常显示在宠物框体，请检查宠物框体上的法术信息。\n\n冷却监视的图标是根据你的职业及专精保存的。",
			--[[zhTW]] "輸入你想見到冷卻圖標的法術ID。\n\n如果你想要冷卻圖標只有在堆疊時顯示，輸入最小堆疊大小(否則保持空白)。\n\n如果冷卻圖標通常出現在寵物框架之下，請勾選寵物複選框。\n\n冷卻圖標會根據你的職業與專精儲存。",
			--[[ruRU]] "",
			--[[koKR]] "표시하고 싶은 주문 ID를 입력합니다. 중첩 표시 경우 최소 중첩수. 소환수 경우 소환수 선택(예:야수치료). 직업 전문화 별로 저장됩니다. ",
			x)

			----------------------------------------------------------------------
			-- Editbox headings and spell ID tooltip
			----------------------------------------------------------------------

			Ln("Spell ID",
			--[[zhCN]] "法术ID",
			--[[zhTW]] "法術ID",
			--[[ruRU]] "ID закл.",
			--[[koKR]] "주문 ID",
			x)

			Ln("Stack",
			--[[zhCN]] "层数",
			--[[zhTW]] "層數",
			--[[ruRU]] "Стек",
			--[[koKR]] "중첩",
			x)

			Ln("Pet",
			--[[zhCN]] "宠物",
			--[[zhTW]] "寵物",
			--[[ruRU]] "Питомец",
			--[[koKR]] "소환수",
			x)

		----------------------------------------------------------------------
		-- Show durability status
		----------------------------------------------------------------------

		Ln("Show durability status",
		--[[zhCN]] "显示耐久度",
		--[[zhTW]] "顯示耐久度",
		--[[ruRU]] "Отобр. прочность экипировки",
		--[[koKR]] "내구도 표시",
		x)

		Ln("If checked, a button will be added to the character sheet which will show your equipped item durability when you hover the pointer over it.\n\nIn addition, an overall percentage will be shown in the chat frame when you die.",
		--[[zhCN]] "勾选后，一个按钮会显示在角色框体，其鼠标提示信息会显示身上的装备耐久度。\n\n当你死后，你的整体耐久度也会显示在聊天框体。",
		--[[zhTW]] "勾選後，一個按鈕會顯示在角色框架，其鼠標提示訊息會顯示身上的裝備耐久度。\n\n當你死後，你的整體耐久度也會顯示在聊天框架。",
		--[[ruRU]] "Если флажок установлен, в окне персонажа будет добавлена кнопка, которая покажет прочность экипировки при наведении указателя мыши на нее.\n\nКроме этого, общий процент будет показан в окне чата, если Вы умрете.",
		--[[koKR]] "케릭창에 내구도 정보 추가",
		x)

			----------------------------------------------------------------------
			-- Chat message
			----------------------------------------------------------------------

			Ln("You have",
			--[[zhCN]] "你有",
			--[[zhTW]] "你有",
			--[[ruRU]] "У Вас",
			--[[koKR]] "장비 내구도",
			x)

			Ln("durability",
			--[[zhCN]] "耐久度",
			--[[zhTW]] "耐久度",
			--[[ruRU]] "прочности",
			--[[koKR]] "당신의",
			x)

			----------------------------------------------------------------------
			-- Character sheet tooltip
			----------------------------------------------------------------------

			Ln("Durability",
			--[[zhCN]] "耐久度",
			--[[zhTW]] "耐久度",
			--[[ruRU]] "Прочность",
			--[[koKR]] "내구도",
			x)

			Ln("Overall",
			--[[zhCN]] "总计",
			--[[zhTW]] "整體",
			--[[ruRU]] "Всего",
			--[[koKR]] "전체",
			x)

		----------------------------------------------------------------------
		-- Show pet save button
		----------------------------------------------------------------------

		Ln("Show pet save button",
		--[[zhCN]] "保存宠物按钮",
		--[[zhTW]] "顯示寵物儲存按鈕",
		--[[ruRU]] "Показать кнопку сохрн. питомцев",
		--[[koKR]] "애완동물 저장 버튼",
		x)

		Ln("If checked, you will be able to save your current battle pet team (including abilities) to a single command.\n\nA button will be added to the Pet Journal.  Clicking the button will toggle showing the assignment command for your current team.  Pressing CTRL/C will copy the command to memory.\n\nYou can then paste the command (with CTRL/V) into the chat window or a macro to instantly assign your team.",
		--[[zhCN]] "勾选后，你可以通过一个单独的指令来保存你当前宠物对战的队伍配置信息（包括技能）。\n\n一个保存的按钮会添加到宠物面板。点击该按钮会给你当前的队伍显示相关的工作指令。按下<CTRL+C>会复制并缓存你的指令。\n\n你可以通过<CTRL+V>粘贴你的指令到聊天窗口或者宏页面，以实现快速配置队伍。",
		--[[zhTW]] "勾選後，你可以利用一個單獨的指令儲存你當前戰寵的隊伍(包含技能)。\n\n寵物日誌將會加入新的按鈕。點擊該按鈕將切換顯示您當前隊伍的分配指令。按下Ctrl+C就會複製此指令到記憶體中。\n\n你可以貼上此指令(用Ctrl+V)到聊天視窗或巨集中以立即指派你的隊伍。",
		--[[ruRU]] "Если флажок установлен, Вы сможете сохранить текущий состав питомцев (включкая способности) в одну команду.\n\nКнопка будет добавлена в журнал питомцев. Щелчек по кнопке покажет дополнительные операции для Вашей текущей команды. При нажатии CTRL/C команда будет скопирована в память.\n\nВы можете вставить команду (с помощью CTRL/V) в окно чата или макроса для мгновенного выбора команды.",
		--[[koKR]] "현재의 애완동물 그룹을 저장. 애완동물 도감의 생성된 버튼 클릭으로 코드를 crtl+c , 매크로 만들기 ctrl+v.",
		x)

			----------------------------------------------------------------------
			-- Chat messages
			----------------------------------------------------------------------

			Ln("All 3 battle pet slots need to be unlocked.",
			--[[zhCN]] "所有3个宠物栏位需要预先解锁。",
			--[[zhTW]] "所有的三個戰寵欄位需要解鎖。",
			--[[ruRU]] "Все 3 слота питомцев должны быть разблокированы.",
			--[[koKR]] "3개의 애완동물 슬롯을 잠금 해제하여야 합니다.",
			x)

			Ln("You need a battle pet team.",
			--[[zhCN]] "你需要一个宠物对战队伍。",
			--[[zhTW]] "你需要一個戰寵隊伍。",
			--[[ruRU]] "Вам нужна команда боевых питомцев.",
			--[[koKR]] "애완동물대전 팀이 필요합니다.",
			x)

			Ln("Invalid battle pet team parameter.",
			--[[zhCN]] "无效的宠物对战队伍参数。",
			--[[zhTW]] "無效的戰寵隊伍參數。",
			--[[ruRU]] "Недопустимый параметр для команды боевых питомцев.",
			--[[koKR]] "잘못된 매개변수",
			x)

			----------------------------------------------------------------------
			-- Pet journal editbox tooltip
			----------------------------------------------------------------------

			Ln("This command will assign your current pet team and selected abilities.\n\nPress CTRL/C to copy the command then paste it into a macro or chat window with CTRL/V.",
			--[[zhCN]] "这个命令会指派你的当前宠物对战队伍并保存技能选择信息。\n\n按下<CTRL+C>来复制指令，然后通过<CTRL+V>来粘贴指令到聊天窗口或者宏页面中。",
			--[[zhTW]] "此指令會指派你當前的戰寵隊伍並選擇技能。\n\n按下Ctrl+C來複製，然後用Ctrl+V貼上到聊天視窗或是巨集中。",
			--[[ruRU]] "Эта операция назначит текущую команду боевых питомцев и их способности.\n\nНажмите CTRL/C чтобы скопировать команду. После этого Вы сможете ее вставить в окно чата или макроса с помощью CTRL/V.",
			--[[koKR]] "현재 팻과 선택된 능력을 그룹으로 저장합니다. 생성된 코드를 복사 crtl+c , 매크로에 붙어넣기 ctrl+v 저장",
			x)

	----------------------------------------------------------------------
	-- 	LA6: Frames
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Frames",
		--[[zhCN]] "框体相关",
		--[[zhTW]] "框架相關",
		--[[ruRU]] "Рамки",
		--[[koKR]] "프레임",
		x)

		Ln("Features",
		--[[zhCN]] "功能",
		--[[zhTW]] "功能",
		--[[ruRU]] "Особенности",
		--[[koKR]] "특징",
		x)

		Ln("Visibility",
		--[[zhCN]] "可见性",
		--[[zhTW]] "可見性",
		--[[ruRU]] "Видимость",
		--[[koKR]] "가시성",
		x)

		----------------------------------------------------------------------
		-- Manage frames
		----------------------------------------------------------------------

		Ln("Manage frames",
		--[[zhCN]] "管理框体面板",
		--[[zhTW]] "管理框架面板",
		--[[ruRU]] "Управление рамками",
		--[[koKR]] "프레임 설정",
		x)

		Ln("If checked, you will be able to change the position and scale of the player frame, target frame, world state, ghost frame and timer bar.  Your layout will be saved account-wide.",
		--[[zhCN]] "勾选后，你可以改动玩家/目标框体、灵魂状态等框体的位置和尺寸。你的布局设置会保存为帐号通用。",
		--[[zhTW]] "勾選後，你可以改動玩家/目標框架、靈魂狀態等框架的位置和尺寸。你的佈局設置會保存為帳號通用。",
		--[[ruRU]] "Если флажок установлен, Вы сможете изменять положение и масштаб рамок игрока, цели, мирового состояния, призрака и таймера. Макет изменений будет сохранен на уровне всего аккаунта.",
		--[[koKR]] "유닛,월드,유령,미러바 프레임 위치,크기 설정",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Scale",
			--[[zhCN]] "缩放",
			--[[zhTW]] "尺寸",
			--[[ruRU]] "Масштаб",
			--[[koKR]] "크기",
			x)

			Ln("Player",
			--[[zhCN]] "玩家框体",
			--[[zhTW]] "玩家框架",
			--[[ruRU]] "Игрок",
			--[[koKR]] "플레이어",
			x)

			Ln("Target",
			--[[zhCN]] "目标框体",
			--[[zhTW]] "目標框架",
			--[[ruRU]] "Цель",
			--[[koKR]] "대상",
			x)

			Ln("World State",
			--[[zhCN]] "世界信息框体",
			--[[zhTW]] "世界訊息框架",
			--[[ruRU]] "Состояние мира",
			--[[koKR]] "월드 상태",
			x)

			Ln("Ghost",
			--[[zhCN]] "灵魂状态框体",
			--[[zhTW]] "靈魂狀態框架",
			--[[ruRU]] "Призрак",
			--[[koKR]] "유령",
			x)

			Ln("Timer",
			--[[zhCN]] "计时框体",
			--[[zhTW]] "計時框架",
			--[[ruRU]] "Таймер",
			--[[koKR]] "미러바",
			x)

			Ln("Drag the frame overlays to position the frames.\n\nTo change the scale of a frame, click it to select it then adjust the scale slider.\n\nThis panel will close automatically if you enter combat.",
			--[[zhCN]] "移动面板来定位框体。\n\n如果想要改变框体尺寸，你需选定面板，然后移动滑块来选择。\n\n你一旦进入战斗，这个框体会自动关闭。",
			--[[zhTW]] "移動面板來定位框架。\n\n如果想要改變框架尺寸，你需選定面板，然後移動滑塊來選擇。\n\n你一旦進入戰鬥，這個框架會自動關閉。",
			--[[ruRU]] "Переместите рамки для изменения позиции окон.\n\nЧтобы изменить масштаб окна, щелкните по его рамке, чтобы его выбрать, а затем отрегулируйте масштаб ползунком на странице настроек.\n\nЭта панель закроется автоматически, если Вы входите в бой.",
			--[[koKR]] "위치는 드레그 이동, 크기는 슬라이더 조정 설정.",
			x)

			----------------------------------------------------------------------
			-- Chat messages
			----------------------------------------------------------------------

			Ln("Use Leatrix Plus to reset that frame.",
			--[[zhCN]] "使用Leatrix Plues来重置框体",
			--[[zhTW]] "使用Leatrix Plues來重置框架",
			--[[ruRU]] "Используйте Leatrix Plus, чтобы сбросить положение этой рамки.",
			--[[koKR]] "프레임 재설정 사용",
			x)

			Ln("Use Leatrix Plus to move that frame.",
			--[[zhCN]] "使用Leatrix Plues来移动框体",
			--[[zhTW]] "使用Leatrix Plues來移動框架",
			--[[ruRU]] "Используйте Leatrix Plus, чтобы переместить эту рамку.",
			--[[koKR]] "프레임 이동 사용",
			x)

		----------------------------------------------------------------------
		-- Manage buff frame
		----------------------------------------------------------------------

		Ln("Manage buff frame",
		--[[zhCN]] "Buff框体管理",
		--[[zhTW]] "管理增益框架",
		--[[ruRU]] "Управление окном эффектов",
		--[[koKR]] "버프 프레임 설정",
		x)

		Ln("If checked, you will be able to change the position and scale of the buff frame.",
		--[[zhCN]] "勾选后，你可以改变Buff框体的位置以及缩放大小。",
		--[[zhTW]] "勾選後，你將可以改變增益框架的位置與大小。",
		--[[ruRU]] "Если флажок установлен, Вы сможете изменить позацию или масштаб окна эффектов.",
		--[[koKR]] "버프,디버프 프레임 위치,크기 설정 ",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Buff Frame",
			--[[zhCN]] "Buff框体",
			--[[zhTW]] "增益框架",
			--[[ruRU]] "Окно эффектов",
			--[[koKR]] "버프 프레임",
			x)

			Ln("Scale",
			--[[zhCN]] "缩放",
			--[[zhTW]] "尺寸",
			--[[ruRU]] "Масштаб",
			--[[koKR]] "크기",
			x)

			Ln("Drag the frame overlay to position the frame.",
			--[[zhCN]] "拖动框体边框来移动。",
			--[[zhTW]] "拖曳框架的遮罩以定位此框架。",
			--[[ruRU]] "Переместите рамки для изменения позиции окон.",
			--[[koKR]] "위치 변경은 프레임 드레그 이동하세요.",
			x)

			Ln("Buffs",
			--[[zhCN]] "Buffs",
			--[[zhTW]] "增益",
			--[[ruRU]] "Эффекты",
			--[[koKR]] "버프",
			x)

		----------------------------------------------------------------------
		-- Class colored frames
		----------------------------------------------------------------------

		Ln("Class colored frames",
		--[[zhCN]] "框体职业染色",
		--[[zhTW]] "框架職業染色",
		--[[ruRU]] "Рамки по цвету класса",
		--[[koKR]] "유닛프레임 직업색상",
		x)

		Ln("If checked, you will be able to show class coloring in the player frame, target frame and focus frame backgrounds.",
		--[[zhCN]] "勾选后，你会在玩家、目标及焦点框体的背景显示职业颜色。",
		--[[zhTW]] "勾選後，你會在玩家、目標及焦點框架的背景顯示職業顏色。",
		--[[ruRU]] "Если флажок установлен, Вы сможете включить отображение окраски фона рамок игрока, цели и фокуса по цвету класса.",
		--[[koKR]] "플레이어,대상 프레임 배경 직업색상 표시.",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Class Colored Frames",
			--[[zhCN]] "框体职业染色",
			--[[zhTW]] "框架職業染色",
			--[[ruRU]] "Рамки по цвету класса",
			--[[koKR]] "프레임 직업 색상",
			x)

			Ln("Show player frame in class color",
			--[[zhCN]] "玩家框体",
			--[[zhTW]] "玩家框架",
			--[[ruRU]] "Отображать фон рамки игрока по цвету класса",
			--[[koKR]] "플레이어 프레임 직업색상 표시",
			x)

			Ln("If checked, the player frame background will be shown in class color.",
			--[[zhCN]] "勾选后，玩家框体的背景会显示职业颜色。",
			--[[zhTW]] "勾選後，玩家框架的背景會顯示職業顏色。",
			--[[ruRU]] "Если флажок установлен, фон рамки игрока будет отображаться по цвету класса.",
			--[[koKR]] "플레이어 프레임 직업색상 표시",
			x)

			Ln("Show target frame and focus frame in class color",
			--[[zhCN]] "目标及焦点框体",
			--[[zhTW]] "目標及焦點框架",
			--[[ruRU]] "Отображать фон рамок цели и фокуса по цвету класса",
			--[[koKR]] "주시,대상 프레임 직업색상 표시",
			x)

			Ln("If checked, the target frame background and focus frame background will be shown in class color.",
			--[[zhCN]] "勾选后，目标及焦点框体的背景会显示职业颜色。",
			--[[zhTW]] "勾選後，目標及焦點框架的背景會顯示職業顏色。",
			--[[ruRU]] "Если флажок установлен, фон рамок цели и фокуса будет отображаться по цвету класса.",
			--[[koKR]] "주시,대상 프레임 직업색상 표시",
			x)

		----------------------------------------------------------------------
		-- Show player chain
		----------------------------------------------------------------------

		Ln("Show player chain",
		--[[zhCN]] "显示玩家边框",
		--[[zhTW]] "顯示玩家邊框",
		--[[ruRU]] "Отобр. контур игрока",
		--[[koKR]] "플레이어 테두리 표시",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Player Chain",
			--[[zhCN]] "玩家边框",
			--[[zhTW]] "玩家邊框",
			--[[ruRU]] "Контур рамки игрока",
			--[[koKR]] "플레이어 테두리",
			x)

			Ln("Chain style",
			--[[zhCN]] "边框样式",
			--[[zhTW]] "邊框樣式",
			--[[ruRU]] "Стиль контура",
			--[[koKR]] "테두리 스타일",
			x)

			Ln("RARE",
			--[[zhCN]] "稀有",
			--[[zhTW]] "稀有",
			--[[ruRU]] "Редкий",
			--[[koKR]] "희귀",
			x)

			Ln("ELITE",
			--[[zhCN]] "精英",
			--[[zhTW]] "精英",
			--[[ruRU]] "Элитный",
			--[[koKR]] "정예",
			x)

			Ln("RARE ELITE",
			--[[zhCN]] "稀有精英",
			--[[zhTW]] "稀有精英",
			--[[ruRU]] "Редкий элитный",
			--[[koKR]] "희귀 정예",
			x)

			Ln("If checked, you will be able to show a rare, elite or rare elite chain around the player frame.",
			--[[zhCN]] "勾选后，会在玩家框体显示稀有、精英或者稀有精英的边框。",
			--[[zhTW]] "勾選後，會在玩家框架顯示稀有、精英或者稀有精英的邊框。",
			--[[ruRU]] "Если флажок установлен, Вы сможете отобразить редкий, элитный или редкий элитный контур вокруг рамки игрока.",
			--[[koKR]] "플레이어 프레임에 희귀,정예 문양 표시",
			x)

			Ln("Choose a chain style for the player frame from the dropdown menu.",
			--[[zhCN]] "在选项菜单中为玩家框体选择一个边框样式。",
			--[[zhTW]] "從下拉選單中為玩家框架選擇一個邊框樣式。",
			--[[ruRU]] "Выберите стиль контура для рамки игрока из выпадающего меню.",
			--[[koKR]] "테두리 문양을 선택합니다.",
			x)

		----------------------------------------------------------------------
		-- Raid frame toggle
		----------------------------------------------------------------------

		Ln("Raid frame toggle",
		--[[zhCN]] "切换团队框体",
		--[[zhTW]] "切換團隊框架",
		--[[ruRU]] "Переключатель рейд. рамки",
		--[[koKR]] "레이드 프레임 전환",
		x)

		Ln("If checked, the button to toggle the raid container frame will be shown just above the raid management frame (left side of the screen) instead of in the raid management frame itself.\n\nThis allows you to toggle the raid container frame without needing to open the raid management frame.",
		--[[zhCN]] "勾选后，打开团队信息的按钮会显示在左侧团队管理框体的上方，而不是在其内部。\n\n此选项让你无需打开团队管理框体，就可以切换团队框体。",
		--[[zhTW]] "勾選後，打開團隊訊息的按鈕會顯示在左側團隊管理框架的上方，而不是在其內部。\n\n此選項讓你無需打開團隊管理框架，就可以切換團隊框架。",
		--[[ruRU]] "Если флажок установлен, кнопка для переключения контейнера рейд будет отображена над его окном управления (на левой стороне экрана), а не на самом окне управления.\n\nЭто позволит переключать рамку контейнера рейда без необходимости открывать окно его управления.",
		--[[koKR]] "레이드 컨테이너 프레임을 전환할수 있는 버튼이 공격대 관리자 프레임에? 표시.",
		x)

		----------------------------------------------------------------------
		-- Combat plates
		----------------------------------------------------------------------

		Ln("Combat plates",
		--[[zhCN]] "自动开关姓名板",
		--[[zhTW]] "自動開關姓名板",
		--[[ruRU]] "Индикаторы",
		--[[koKR]] "전투시 이름표 표시",
		x)

		Ln("If checked, enemy nameplates will be shown during combat and hidden when combat ends.",
		--[[zhCN]] "勾选后，敌对姓名板会在战斗中自动开启，离开战斗后关闭。",
		--[[zhTW]] "勾選後，敵對姓名板會在戰鬥中自動開啟，離開戰鬥後關閉。",
		--[[ruRU]] "Если флажок установлен, индикаторы здоровья будут отображены только во время боя и скрыты после его завершения.",
		--[[koKR]] "적 이름표 비전투 숨김.",
		x)

		----------------------------------------------------------------------
		-- Hide alerts
		----------------------------------------------------------------------

		Ln("Hide alerts",
		--[[zhCN]] "隐藏信息提示",
		--[[zhTW]] "隱藏訊息提示",
		--[[ruRU]] "Скрыть оповещения",
		--[[koKR]] "경보,알림 숨김",
		x)

		Ln("If checked, you will be able to hide alert frames.",
		--[[zhCN]] "勾选后，你可以隐藏信息提示框体。",
		--[[zhTW]] "勾選後，你可以隱藏訊息提示框架。",
		--[[ruRU]] "Если флажок установлен, у Вас появиться возможность скрыть рамки оповещений.",
		--[[koKR]] "업적,교전,주둔지,전리품,전문기술 알림 숨김",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Alerts",
			--[[zhCN]] "隐藏通知提示",
			--[[zhTW]] "隱藏通知提示",
			--[[ruRU]] "Оповещения",
			--[[koKR]] "경보",
			x)

			Ln("Hide achievement alerts",
			--[[zhCN]] "隐藏成就通知",
			--[[zhTW]] "隱藏成就通知",
			--[[ruRU]] "Скрыть оповещения о достижениях",
			--[[koKR]] "업적 알림 숨김",
			x)

			Ln("If checked, achievement alerts will not be shown.",
			--[[zhCN]] "勾选后，获得成就的提示不再显示。",
			--[[zhTW]] "勾選後，獲得成就的提示不再顯示。",
			--[[ruRU]] "Если флажок установлен, оповещения о достижениях не будут отображены.",
			--[[koKR]] "업적 알림 숨김",
			x)

			Ln("Hide encounter alerts",
			--[[zhCN]] "隐藏地城通知",
			--[[zhTW]] "隱藏地城通知",
			--[[ruRU]] "Скрыть оповещения подземелий",
			--[[koKR]] "교전 알림 숨김",
			x)

			Ln("If checked, encounter alerts will not be shown.\n\nThis includes dungeons, raids, scenarios, invasions, guild challenges and world quests.",
			--[[zhCN]] "勾选后，地城的提示不再显示。\n\n包括地下城、团队、场景战役、要塞入侵、公会挑战和世界任务。",
			--[[zhTW]] "勾選後，地城的提示不再顯示。\n\n包括地下城、團隊、場景戰役、要塞入侵、公會挑戰和世界任務。",
			--[[ruRU]] "Если флажок установлен, оповещения в подземельях не будут отображены.\n\nК подземельям, в данном случае, относятся подземелья, рейды, сценарии, вторжения, гильдейские вызовы и мировые задания.",
			--[[koKR]] "교전 알림 숨김. \n\n던전,공격대,시나리오,침략,전역퀘스트 포함",
			x)

			Ln("Hide garrison alerts",
			--[[zhCN]] "隐藏要塞通知",
			--[[zhTW]] "隱藏要塞通知",
			--[[ruRU]] "Скрыть оповещения гарнизона",
			--[[koKR]] "주둔지 경보 숨김",
			x)

			Ln("If checked, garrison alerts will not be shown.\n\nThis includes buildings, followers, missions and talents.",
			--[[zhCN]] "勾选后，要塞的提示信息不再显示。\n\n这包括了要塞建筑、追随者、任务及天赋的通知。",
			--[[zhTW]] "勾選後，要塞的提示訊息不再顯示。\n\n這包含了建築、追隨者、任務與天賦。",
			--[[ruRU]] "Если флажок установлен, оповещения из гарнизона не будут отображены.",
			--[[koKR]] "주둔지 경보 숨김. 건물,추종자,임무 포함",
			x)

			Ln("Hide loot alerts",
			--[[zhCN]] "隐藏拾取通知",
			--[[zhTW]] "隱藏拾取通知",
			--[[ruRU]] "Скрыть оповещения о добыче",
			--[[koKR]] "전리품 경고 숨김",
			x)

			Ln("If checked, loot alerts will not be shown.\n\nThis includes items, money, honor, resources and store purchases.",
			--[[zhCN]] "勾选后，拾取通知将不再显示。\n\n这包括了物品、金钱、荣誉、资源以及商城付款。",
			--[[zhTW]] "勾選後，拾取提醒將不會顯示。\n\n這包含了物品、金錢、榮譽、資源與商店採購。",
			--[[ruRU]] "",
			--[[koKR]] "선택시, 전리품 경고를 표시하지 않습니다. \n\n 아이템, 골드, 명예, 자원 및 상점구매를 포함합니다.",
			x)

			Ln("Hide profession alerts",
			--[[zhCN]] "隐藏专业通知",
			--[[zhTW]] "隱藏專業通知",
			--[[ruRU]] "Скрыть оповещения профессий",
			--[[koKR]] "전문기술 알림 숨김",
			x)

			Ln("If checked, profession alerts will not be shown.\n\nThis includes recipes and digsites.",
			--[[zhCN]] "勾选后，专业技能的相关提示不再显示。\n\n这包括图纸和考古的提示。",
			--[[zhTW]] "勾選後，專業技能的相關提示不再顯示。\n\n這包含了圖紙與挖掘地點。",
			--[[ruRU]] "Если флажок установлен, оповещения профессий не будут отображены.",
			--[[koKR]] "조리법, 발굴 현장",
			x)

		----------------------------------------------------------------------
		-- Hide character controls
		----------------------------------------------------------------------

		Ln("Hide character controls",
		--[[zhCN]] "隐藏角色控制按钮",
		--[[zhTW]] "隱藏角色控制按鈕",
		--[[ruRU]] "Скрыть управление персонажем",
		--[[koKR]] "케릭터 제어 숨김",
		x)

		Ln("If checked, model control buttons (such as zoom) will not be shown in the character frame, inspect frame, dressup frame and transmogrification frame.",
		--[[zhCN]] "勾选后，处于玩家、目标、试衣间和幻化框体的模型上方的控制按钮不再显示。",
		--[[zhTW]] "勾選後，處於玩家、目標、試衣間和幻化框架的模型上方的控制按鈕不再顯示。",
		--[[ruRU]] "Если флажок установлен, кнопки управления моделью (например, изменения масштаба) не будут отображены в окнах персонажа, гардероба, инспектирования и трансмогрификации.",
		--[[koKR]] "케릭터창 모델 버튼 프레임 숨김",
		x)

		----------------------------------------------------------------------
		-- Hide bodyguard gossip
		----------------------------------------------------------------------

		Ln("Hide bodyguard gossip",
		--[[zhCN]] "隐藏保镖对话",
		--[[zhTW]] "隱藏保鏢對話",
		--[[ruRU]] "Скрыть разговоры телохранителя",
		--[[koKR]] "경비병 잡담 숨김",
		x)

		Ln("If checked, the gossip window will not be shown when you talk to an active garrison bodyguard.\n\nYou can hold the shift key down when you talk to a bodyguard to over-ride this setting.",
		--[[zhCN]] "勾选后，你的保镖对话时不再出现选项。\n\n对话时按住Shift键，可以暂时忽略该项设置。",
		--[[zhTW]] "勾選後，你的保鏢對話時不再出現選項。\n\n對話時按住Shift鍵，可以暫時忽略該項設置。",
		--[[ruRU]] "Если флажок установлен, окно разговоров не будет отображаться, когда Вы будете говорить с активным гарнизонным телохранителем.\n\nВы можете удерживать клавишу SHIFT во время общения для временного игнорирования этой настройки.",
		--[[koKR]] "주둔지 경비 잡담 숨김",
		x)

		----------------------------------------------------------------------
		-- Hide talking frame
		----------------------------------------------------------------------

		Ln("Hide talking frame",
		--[[zhCN]] "隐藏对话框体",
		--[[zhTW]] "隱藏對話框架",
		--[[ruRU]] "Скрыть окно разговоров",
		--[[koKR]] "대화 프레임 숨김",
		x)

		Ln("If checked, the talking frame will not be shown.\n\nThe talking frame normally appears in the lower portion of the screen when certain NPCs communicate with you.",
		--[[zhCN]] "勾选后，对话面板不再显示。\n\n当NPC与你交流时，该框体通常出现在界面下方。",
		--[[zhTW]] "勾選後，對話面板不再顯示。\n\n當NPC與你交流時，該框架通常出現在界面下方。",
		--[[ruRU]] "Если флажок установлен, окно разговоров не будет отображено.\n\nОкно разговоров появляется обычно в нижней части экрана, в процессе общения с некоторыми НПС.",
		--[[koKR]] "화면 하단의 NPC 대화 프레임 숨김",
		x)

		----------------------------------------------------------------------
		-- Hide clean-up buttons
		----------------------------------------------------------------------

		Ln("Hide clean-up buttons",
		--[[zhCN]] "隐藏背包整理按钮",
		--[[zhTW]] "隱藏背包整理按鈕",
		--[[ruRU]] "Скрыть кнопку сортировки",
		--[[koKR]] "가방정리 버튼 숨김",
		x)

		Ln("If checked, the backpack clean-up button and the bank frame clean-up button will not be shown.",
		--[[zhCN]] "勾选后，背包及银行的整理按钮不再显示。",
		--[[zhTW]] "勾選後，背包及銀行的整理按鈕不再顯示。",
		--[[ruRU]] "Если флажок установлен, кнопка сортировки вещей в сумках и в банке отображаться не будет.",
		--[[koKR]] "소지품,은행 정리버튼 숨김",
		x)

		----------------------------------------------------------------------
		-- Hide boss banner
		----------------------------------------------------------------------

		Ln("Hide boss banner",
		--[[zhCN]] "隐藏BOSS横幅",
		--[[zhTW]] "隱藏BOSS橫幅",
		--[[ruRU]] "Скрыть баннер босса",
		--[[koKR]] "보스 배너 숨김",
		x)

		Ln("If checked, the boss banner will not be shown.\n\nThe boss banner appears when a boss is defeated.  It shows the name of the boss and the loot that was distributed.",
		--[[zhCN]] "勾选后，BOSS的横幅信息不再显示。\n\n该信息通常在BOSS被击败后显示。它显示BOSS的名字以及掉落。",
		--[[zhTW]] "勾選後，BOSS的橫幅訊息不再顯示。\n\n該訊息通常在BOSS被擊敗後顯示。它顯示BOSS的名字以及掉落。",
		--[[ruRU]] "Если флажок установлен, баннер босса отображаться не будет.\n\nЭтот баннер обычно появляется после победы над боссом.  Он показывает имя босса и полученную с него добычу.",
		--[[koKR]] "보스를 물리칠때 표시되는 전리품 이름을 숨깁니다.",
		x)

		----------------------------------------------------------------------
		-- Hide level-up display
		----------------------------------------------------------------------

		Ln("Hide level-up display",
		--[[zhCN]] "隐藏升级提示",
		--[[zhTW]] "隱藏升級提示",
		--[[ruRU]] "Скрыть окно увл. уровня",
		--[[koKR]] "레벨 업 표시 숨김",
		x)

		Ln("If checked, the level-up display will not be shown.\n\nThe level-up display shows encounter objectives, level-ups, pet battle rewards, etc.",
		--[[zhCN]] "勾选后，升级提示不再显示。\n\n升级提示功能包括副本目标、升级、小宠物奖励等等。",
		--[[zhTW]] "勾選後，升級提示不再顯示。\n\n升級提示功能包括副本目標、升級、小寵物獎勵等等。",
		--[[ruRU]] "Если флажок установлен, окно увеличения уровня не будет отображено.\n\nЭто окно обычно отображает цели подземелья, повышение уровня, награды за битву питомцев и др.",
		--[[koKR]] "레벨 업,교전의 목표,팻대결 보상 표시 숨김",
		x)

		----------------------------------------------------------------------
		-- Hide gryphons
		----------------------------------------------------------------------

		Ln("Hide gryphons",
		--[[zhCN]] "隐藏动作条狮鹫",
		--[[zhTW]] "隱藏動作條獅鷲",
		--[[ruRU]] "Скрыть грифонов",
		--[[koKR]] "그리핀 문양 숨김",
		x)

		Ln("If checked, the main bar gryphons will not be shown.",
		--[[zhCN]] "勾选后，动作条两边的狮鹫不再显示。",
		--[[zhTW]] "勾選後，動作條兩邊的獅鷲不再顯示。",
		--[[ruRU]] "Если флажок установлен, грифона на главном окне отображаться не будут.",
		--[[koKR]] "스킬바의 그리핀 문양 제거",
		x)

		----------------------------------------------------------------------
		-- Hide stance bar
		----------------------------------------------------------------------

		Ln("Hide stance bar",
		--[[zhCN]] "隐藏姿态条",
		--[[zhTW]] "隱藏姿態條",
		--[[ruRU]] "Скрыть окно стоек",
		--[[koKR]] "태세바 숨김",
		x)

		Ln("If checked, the stance bar will not be shown.",
		--[[zhCN]] "勾选后，姿态条不再显示。",
		--[[zhTW]] "勾選後，姿態條不再顯示。",
		--[[ruRU]] "Если флажок установлен, окно стоек отображаться не будет.",
		--[[koKR]] "태세바 숨김.(드루이드...)",
		x)

		----------------------------------------------------------------------
		-- Hide order hall bar
		----------------------------------------------------------------------

		Ln("Hide order hall bar",
		--[[zhCN]] "隐藏职业大厅信息",
		--[[zhTW]] "隱藏職業大廳條",
		--[[ruRU]] "",
		--[[koKR]] "전당 바 숨김",
		x)

		Ln("If checked, the order hall command bar will not be shown.",
		--[[zhCN]] "勾选后，当你处于职业大厅时，顶部的信息条不再显示。",
		--[[zhTW]] "勾選後，職業大廳控制條將不顯示。",
		--[[ruRU]] "",
		--[[koKR]] "직업 전당에서의 상단 전당 바 숨김",
		x)

	----------------------------------------------------------------------
	-- 	LA7: System
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("System",
		--[[zhCN]] "系统设置",
		--[[zhTW]] "系統設置",
		--[[ruRU]] "Система",
		--[[koKR]] "시스템",
		x)

		Ln("Graphics and Sound",
		--[[zhCN]] "界面和音效",
		--[[zhTW]] "圖形和音效",
		--[[ruRU]] "Графика и звук",
		--[[koKR]] "그래픽,소리",
		x)

		Ln("Game Options",
		--[[zhCN]] "游戏设置",
		--[[zhTW]] "游戲設置",
		--[[ruRU]] "Настройки игры",
		--[[koKR]] "게임 설정",
		x)

		----------------------------------------------------------------------
		-- Disable screen glow
		----------------------------------------------------------------------

		Ln("Disable screen glow",
		--[[zhCN]] "禁用画面晕眩",
		--[[zhTW]] "停用畫面光暈效果",
		--[[ruRU]] "Отключить свечение экрана",
		--[[koKR]] "빛 효과 비활성",
		x)

		Ln("If checked, the screen glow effect will be disabled.\n\nEnabling this option may increase your overall graphics performance and reduce nausea.",
		--[[zhCN]] "勾选后，画面的景深会被禁用。\n\n启用这个选项可能会提高你的画面表现，减少晕眩效果。",
		--[[zhTW]] "勾選後，畫面的光暈效果會被停用。\n\n啟用這個選項可能會提高你的畫面表現，減少暈眩效果。",
		--[[ruRU]] "Если флажок установлен, эффекты свечения экрана будут отключены.\n\nВключение этого параметра может увеличить общую производительность игры и уменьшить тошноту.",
		--[[koKR]] "화면의 울릉거림 감소, 성능 증가.",
		x)

		----------------------------------------------------------------------
		-- Max camera zoom
		----------------------------------------------------------------------

		Ln("Max camera zoom",
		--[[zhCN]] "最大镜头距离",
		--[[zhTW]] "最大鏡頭縮放",
		--[[ruRU]] "Макс. масштаб. камеры",
		--[[koKR]] "최대시야거리 사용",
		x)

		Ln("If checked, you will be able to zoom out to a greater distance.\n\nEnabling this option will prevent you from changing the camera distance setting in the game options panel ('Camera' menu).",
		--[[zhCN]] "勾选后，你可以加大镜头的缩放距离。",
		--[[zhTW]] "勾選後，你可以將鏡頭拉遠到更遠的距離。",
		--[[ruRU]] "Если флажок установлен, Вы сможете максимально отдалять камеру.",
		--[[koKR]] "사용시 게임설정-시점-최대시야거리: Max 고정.",
		x)

		----------------------------------------------------------------------
		-- Enable viewport
		----------------------------------------------------------------------

		Ln("Enable viewport",
		--[[zhCN]] "画面视口",
		--[[zhTW]] "啟用視窗背景",
		--[[ruRU]] "Включить полосы",
		--[[koKR]] "뷰포트 사용",
		x)

		Ln("If checked, you will be able to create a viewport.  A viewport adds adjustable black borders around the game world.\n\nThe borders are placed on top of the game world but under the UI so you can place UI elements over them.",
		--[[zhCN]] "勾选后，你会生成一个画面视口，这个可以在游戏界面周围增加黑色的边框背景。\n\n边框的层级是处于游戏界面和插件之间，所以你仍可以放置插件元素在上面。",
		--[[zhTW]] "勾選後，你會生成一個視窗背景，這個可以在游戲界面周圍增加黑色的邊框背景。\n\n邊框的層級是處於游戲界面和插件之間，所以你仍可以放置插件元素在上面。",
		--[[ruRU]] "Если флажок установлен, Вы сможете создать темные полосы. Они накладываются на игровой мир.\n\nПолосы располагаются над игровым миром, но под интерфейсом, так что Вы сможете поместить элементы пользовательского интерфейса над темными полосами.",
		--[[koKR]] "UI배치를 위한 상.하 검은색 배경 생성",
		x)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			Ln("Viewport",
			--[[zhCN]] "视口",
			--[[zhTW]] "視窗背景",
			--[[ruRU]] "Полосы",
			--[[koKR]] "뷰포트",
			x)

			Ln("Top",
			--[[zhCN]] "顶部",
			--[[zhTW]] "頂部",
			--[[ruRU]] "Верхняя",
			--[[koKR]] "상단",
			x)

			Ln("Bottom",
			--[[zhCN]] "底部",
			--[[zhTW]] "底部",
			--[[ruRU]] "Нижняя",
			--[[koKR]] "하단",
			x)

			Ln("Left",
			--[[zhCN]] "左边",
			--[[zhTW]] "左側",
			--[[ruRU]] "Левая",
			--[[koKR]] "왼쪽",
			x)

			Ln("Right",
			--[[zhCN]] "右边",
			--[[zhTW]] "右側",
			--[[ruRU]] "Правая",
			--[[koKR]] "오른쪽",
			x)

			Ln("Transparency",
			--[[zhCN]] "透明度",
			--[[zhTW]] "透明度",
			--[[ruRU]] "Прозрачность",
			--[[koKR]] "투명도",
			x)

			Ln("Resize the game world",
			--[[zhCN]] "修改界面大小",
			--[[zhTW]] "遊戲介面縮放",
			--[[ruRU]] "",
			--[[koKR]] "게임화면크기 재설정",
			x)

			Ln("If checked, the game world will be resized to fit between the top and bottom borders.\n\nNote that if you enable this setting, the transparency slider will no longer affect the top and bottom borders.",
			--[[zhCN]] "勾选后，游戏界面的大小会修改适应顶部和底部的边框。\n\n当你启用这个选项时，透明度的调节不再影响这两个边框。",
			--[[zhTW]] "勾選後，游戲介面的大小會修改以適應頂部和底部的邊框。\n\n當你啟用這個選項時，透明度的調節不再影響這兩個邊框。",
			--[[ruRU]] "",
			--[[koKR]] "상단과 하단 변경 사이즈 맞게 조정됨.",
			x)

			Ln("Configure the viewport using the controls on this page.\n\nThis panel will close automatically if you enter combat.",
			--[[zhCN]] "你可以在本页设置视口。\n\n当你进入战斗时，这个面板会自动关闭。",
			--[[zhTW]] "你可以在本頁設置視窗背景。\n\n當你進入戰鬥時，這個面板會自動關閉。",
			--[[ruRU]] "",
			--[[koKR]] "뷰포트 구성을 설정합니다.",
			x)

		----------------------------------------------------------------------
		-- Silence rested emotes
		----------------------------------------------------------------------

		Ln("Silence rested emotes",
		--[[zhCN]] "表情禁音",
		--[[zhTW]] "表情靜音",
		--[[ruRU]] "Заглушать звуки эмоций",
		--[[koKR]] "감정표현 음소거",
		x)

		Ln("If checked, emote sounds will be silenced while your character is:\n\n- resting\n- in a pet battle\n- at the Hathill Market\n- at the Grim Guzzler\n\nEmote sounds will be enabled when none of the above apply.",
		--[[zhCN]] "选后，当你处于下列情况时表情音效会被禁音：\n\n休息时\n\n处于宠物对战中\n\n在半山集市\n\n在黑铁酒吧\n\n当你不处于上述位置时表情音效恢复。",
		--[[zhTW]] "勾選後，當你處於下列情況時表情音效會被靜音：\n\n- 休息時\n- 寵物戰鬥中\n- 在半丘市集\n- 在黑鐵酒吧\n\n當你不處於上述位置時表情音效恢復。",
		--[[ruRU]] "",
		--[[koKR]] "휴식,팻대결, Hathill Market, Grim Guzzler 경우 감정표현 음소거",
		x)

		----------------------------------------------------------------------
		-- Disable bag automation
		----------------------------------------------------------------------

		Ln("Disable bag automation",
		--[[zhCN]] "禁用自动背包",
		--[[zhTW]] "停用背包自動開啟",
		--[[ruRU]] "Отключить автоматизацию сумок",
		--[[koKR]] "가방 자동열림 비활성",
		x)

		Ln("If checked, your bags will not be opened or closed automatically when you interact with a merchant, bank or mailbox.",
		--[[zhCN]] "勾选后，当你打开商贩、银行或者邮箱时，背包不会自动开启或者关闭。",
		--[[zhTW]] "勾選後，當你打開商店、銀行或者郵箱時，背包不會自動開啟或者關閉。",
		--[[ruRU]] "Если флажок установлен, Ваши сумки не будут открываться или закрываться автоматически, когда Вы взаимодействуете с торговцами, банком или почтовым ящиком.",
		--[[koKR]] "상인,은행 NPC 대화 할때",
		x)

		----------------------------------------------------------------------
		-- Disable pet automation
		----------------------------------------------------------------------

		Ln("Disable pet automation",
		--[[zhCN]] "禁用自动换宠",
		--[[zhTW]] "停用寵物自動化",
		--[[ruRU]] "",
		--[[koKR]] "애완동물 자동 비활성",
		x)

		Ln("If checked, battle pets which are automatically summoned will be dismissed within a few seconds.\n\nThis includes dragging a pet onto the first team slot in the pet journal and entering a battle pet team save command.\n\nNote that pets which are automatically summoned during combat will be dismissed when combat ends.",
		--[[zhCN]] "勾选后，被自动召唤的战斗宠物会在若干秒后被自动召回。\n\n这包括将宠物拖动到对战队伍栏位和进入宠物对战的指令。\n\n需要注意的是，战斗中自动召唤的宠物会在战斗结束后再解散。",
		--[[zhTW]] "勾選後，自動召喚的戰寵將在幾秒內被解散。\n\n這包含了拖曳寵物到寵物日誌第一個隊伍空格以及輸入一個戰寵隊伍儲存指令。\n\n注意在戰鬥中自動召喚的寵物會在戰鬥結束後被解散。",
		--[[ruRU]] "",
		--[[koKR]] "자동소환된 애완동물 해제",
		x)

		----------------------------------------------------------------------
		-- Show character addons
		----------------------------------------------------------------------

		Ln("Show character addons",
		--[[zhCN]] "显示角色插件",
		--[[zhTW]] "顯示角色插件",
		--[[ruRU]] "Модификации для игрока",
		--[[koKR]] "케릭터 애드온 표시",
		x)

		Ln("If checked, the addon list (accessible from the game menu) will show character based addons by default.",
		--[[zhCN]] "勾选后，插件列表（游戏菜单处）会显示默认的对角色生效的插件。",
		--[[zhTW]] "勾選後，插件列表（游戲選單處）會顯示預設的對角色生效的插件。",
		--[[ruRU]] "Если флажок установлен, список модификаций (доступный из меню игры) будет по умолчанию отображаться для Вашего текущего персонажа.",
		--[[koKR]] "게임옵션의 애드온 열때 해당 케릭터의 목록 표시(기본-전체)",
		x)

		----------------------------------------------------------------------
		-- Remove raid restrictions
		----------------------------------------------------------------------

		Ln("Remove raid restrictions",
		--[[zhCN]] "移除团队等级限制",
		--[[zhTW]] "移除團隊等級限制",
		--[[ruRU]] "Снять ограничения рейда",
		--[[koKR]] "공격대 제한 제거",
		x)

		Ln("If checked, your low level characters will be allowed to join raid groups.\n\nNote that you cannot join a raid group directly with a low level character.  You have to join a party group first then the party leader should convert the party group to a raid group.\n\nReload your UI if the group leader is unable to convert the party group to a raid group.",
		--[[zhCN]] "勾选后，你的低等级角色会被允许加入到团队中。\n\n你的低等级角色无法直接加入团队。你必须先加入到队伍中再切换成团队才可以。\n\n当队伍的队长无法把队伍转换成团队，请重载你的插件",
		--[[zhTW]] "勾選後，你的低等級角色會被允許加入到團隊中。\n\n你的低等級角色無法直接加入團隊。你必須先加入到隊伍中再切換成團隊才可以。\n\n當隊伍的隊長無法把隊伍轉換成團隊，請重載你的插件",
		--[[ruRU]] "Если флажок установлен, Вашим персонажам низкого уровня будет разрешено присоединяться к рейдовым группам.\n\nОбратите внимание, что Вы не можете присоединиться непосредственно к рейдовой группе персонажем низкого уровня. Вы должны присоединиться сначала к группе и только после этого её лидер должен преобразовать группу в рейд.\n\nПерезагрузите UI пользователя лидера группы, если он не может конвертировать группу в рейд.",
		--[[koKR]] "저레벨 케릭의 공격대 초대 허용됨..?",
		x)

		----------------------------------------------------------------------
		-- Disable loot warnings
		----------------------------------------------------------------------

		Ln("Disable loot warnings",
		--[[zhCN]] "禁用拾取通报",
		--[[zhTW]] "停用拾取通報",
		--[[ruRU]] "Откл. предупреждения о добыче",
		--[[koKR]] "전리품 경고 비활성",
		x)

		Ln("If checked, confirmations will no longer appear when you choose a loot roll option or attempt to sell or mail a tradable item.",
		--[[zhCN]] "勾选后，当你选择Roll点或者想要出售/邮寄一个可交易物品时，不再显示确认信息。",
		--[[zhTW]] "勾選後，當你選擇一個擲骰選項或是試圖出售或郵寄可交易物品將不再確認。",
		--[[ruRU]] "",
		--[[koKR]] "전리품 판매,우편발송 시 확인경고 표시안함.",
		x)

		----------------------------------------------------------------------
		-- Disable map emote
		----------------------------------------------------------------------

		Ln("Disable map emote",
		--[[zhCN]] "禁用地图查看动作",
		--[[zhTW]] "停用地圖查看動作",
		--[[ruRU]] "Отключить эмоцию карты",
		--[[koKR]] "지도열때 행동표현 안함.",
		x)

		Ln("If checked, your character will not perform the reading emote when you open the map.",
		--[[zhCN]] "勾选后，当你在查看地图时，你的角色不再有一个阅读的动作。",
		--[[zhTW]] "勾選後，當你在查看地圖時，你的角色不再有一個閱讀的動作。",
		--[[ruRU]] "Если флажок установлен, Ваш персонаж не будет выполнять эмоцию чтения, когда Вы открываете карту.",
		--[[koKR]] "지도 볼때 행동 변화 없음.",
		x)

		----------------------------------------------------------------------
		-- Skip cinematics
		----------------------------------------------------------------------

		Ln("Skip cinematics",
		--[[zhCN]] "跳过过场动画",
		--[[zhTW]] "跳過過場動畫",
		--[[ruRU]] "Пропустить ролики",
		--[[koKR]] "동영상 건너띄기",
		x)

		Ln("If checked, in-game cinematics will be skipped if at all possible.\n\nYou can hold the shift key down when a cinematic is about to start to over-ride this setting.\n\nNote that some cinematics cannot be skipped.",
		--[[zhCN]] "勾选后，游戏内可以跳过的过程动画会自动跳过。\n\n当一个过场动画开始前，你可以按住Shift键来忽略该项设置。\n\n注意，部分过场动画无法跳过。",
		--[[zhTW]] "勾選後，游戲內可以跳過的過程動畫會自動跳過。\n\n當一個過場動畫開始前，你可以按住Shift鍵來忽略該項設置。\n\n注意，部分過場動畫無法跳過。",
		--[[ruRU]] "Если флажок установлен, внутриигравые ролики будут пропущены, если это возможно.\n\nВы можете удерживать клавишу SHIFT перед запуском ролика, чтобы временно переопределить этот параметр.\n\nОбратите внимание, что не все ролики могут быть пропущены.",
		--[[koKR]] "게임 내 시네마틱 가능하면 건너뜁니다.\n\n시작할때 shift키 사용으로 수동가능.\n\n일부는 생략 할수 없습니다.",
		x)

		Ln("A cinematic skip was attempted.",
		--[[zhCN]] "一个过场动画成功跳过。",
		--[[zhTW]] "一個過場動畫成功跳過。",
		--[[ruRU]] "Была сделана попытка пропустить этот ролик.",
		--[[koKR]] "시네마틱 건너띄기가 시도되었습니다.",
		x)

		Ln("A movie skip was attempted.",
		--[[zhCN]] "一个电影片段成功跳过。",
		--[[zhTW]] "一個電影片段成功跳過。",
		--[[ruRU]] "Была сделана попытка пропустить это видео.",
		--[[koKR]] "동영상 건너띄기가 시도되었습니다.",
		x)

		----------------------------------------------------------------------
		-- Faster auto loot
		----------------------------------------------------------------------

		Ln("Faster auto loot",
		--[[zhCN]] "加速自动拾取",
		--[[zhTW]] "加速自動拾取",
		--[[ruRU]] "Быстрый сбор добычи",
		--[[koKR]] "빠른 전리품 획득",
		x)

		Ln("If checked, the amount of time it takes to auto loot creatures will be significantly reduced.",
		--[[zhCN]] "勾选后，自动拾取所耗的时间将大幅缩短。",
		--[[zhTW]] "勾選後，自動拾取所耗的時間將大幅縮短。",
		--[[ruRU]] "Если флажок установлен, количество времени, необходимое для автоматического сбора добычи будут значительно сокращено.",
		--[[koKR]] "전리품 창을 표시안함",
		x)

		----------------------------------------------------------------------
		-- Lockout sharing
		----------------------------------------------------------------------

		Ln("Lockout sharing",
		--[[zhCN]] "成就共享锁定",
		--[[zhTW]] "成就共享鎖定",
		--[[ruRU]] "Совмесная блокировка",
		--[[koKR]] "업적공유 잠금",
		x)

		Ln("If checked, the 'Display only character achievements to others' setting in the game options panel ('Social' menu) will be permanently checked and locked.",
		--[[zhCN]] "勾选后，“对他人只显示角色成就”的选项（界面-社交）会被永久勾选并锁定。",
		--[[zhTW]] "勾選後，“對他人只顯示角色成就”的選項（介面-社交）會被永久勾選並鎖定。",
		--[[ruRU]] "Если флажок установлен, то параметр 'Позволить другим просматривать только достижения персонажа' в панели настроек игрового меню ('Общение') будет выбран и заблокирован.",
		--[[koKR]] "게임설정-소셜의 '해당 케릭터의 업적만 표시' 를 사용하고 설정 잠금.",
		x)

	----------------------------------------------------------------------
	-- 	LA8: Settings
	----------------------------------------------------------------------

		----------------------------------------------------------------------
		-- Panel
		----------------------------------------------------------------------

		Ln("Settings",
		--[[zhCN]] "设置",
		--[[zhTW]] "設置",
		--[[ruRU]] "Параметры",
		--[[koKR]] "설정",
		x)

		Ln("Addon",
		--[[zhCN]] "插件",
		--[[zhTW]] "插件",
		--[[ruRU]] "Модификация",
		--[[koKR]] "애드온",
		x)

		Ln("Scale",
		--[[zhCN]] "尺寸",
		--[[zhTW]] "尺寸",
		--[[ruRU]] "Масштаб",
		--[[koKR]] "크기",
		x)

		Ln("Transparency",
		--[[zhCN]] "透明度",
		--[[zhTW]] "透明度",
		--[[ruRU]] "Прозрачность",
		--[[koKR]] "투명도",
		x)

		Ln("Memory Usage",
		--[[zhCN]] "内存占用",
		--[[zhTW]] "記憶體占用",
		--[[ruRU]] "Использовано памяти",
		--[[koKR]] "메모리 사용",
		x)

		----------------------------------------------------------------------
		-- Show minimap button
		----------------------------------------------------------------------

		Ln("Show minimap button",
		--[[zhCN]] "显示小地图按钮",
		--[[zhTW]] "顯示小地圖按鈕",
		--[[ruRU]] "Отобр. иконку у миникарты",
		--[[koKR]] "미니맵 버튼 표시",
		x)

		Ln("If checked, a minimap button will be available.\n\nLeft-click - Toggle options panel.\n\nRight-click - Toggle music player.\n\nSHIFT/Left-click - Toggle music.\n\nSHIFT/Right-click - Toggle coordinates (if enabled).\n\nCTRL/Left-click - Toggle minimap target tracking.\n\nCTRL/Right-click - Toggle errors (if enabled).\n\nCTRL/SHIFT/Left-click - Toggle Zygor (if installed).\n\nCTRL/SHIFT/Right-click - Toggle windowed mode.",
		--[[zhCN]] "勾选后，小地图上将出现一个快捷按钮。\n\n左键：开关设置面板。\n\n右键：开关音乐播放器。\n\nSHIFT+左键：开关音乐。\n\nSHIFT+右键：开关坐标（需启用）。\n\nCTRL+左键：开关小地图目标追踪。\n\nCTRL+右键：开关错误信息（需启用）。\n\nCTRL+SHIFT+左键：开关Zygor插件（需安装）。\n\nCTRL+SHIFT+右键：开关窗口模式。",
		--[[zhTW]] "勾選後，小地圖按鈕將可使用。\n\n左鍵點擊 – 開關選項面板。\n\n右鍵點擊 – 開關音樂播放器。\n\nSHIFT/左鍵點擊 – 開關音樂。\n\nSHIFT/右鍵點擊 – 開關座標(如果啟用)。\n\nCTRL/左鍵點擊 – 開關小地圖目標追蹤。\n\nCTRL/右鍵點擊 – 開關錯誤顯示(如果啟用)。\n\nCTRL/SHIFT/左鍵點擊 – 開關Zygor(如果安裝)。\n\nCTRL/SHIFT/右鍵點擊 – 切換視窗模式。",
		--[[ruRU]] "",
		--[[koKR]] "이 옵션을 선택하면 미니맵 버튼을 사용할수 있습니다.\n\n왼쪽 클릭-설정창 전환.\n\n오른쪽 클릭-음악 플레이어 전환.\n\nShift/왼쪽 클릭-음악 전환.\n\nShift/오른쪽 클릭-좌표 전환(활성된 경우).\n\nCtrl/왼쪽 클릭-미니맵 대상 추적 전환.\n\nCtrl/오른쪽 클릭-오류메시지 전환(활성된 경우).\n\nCtrl/Shift/왼쪽 클릭-Zygor 전환(설치된 경우).\n\nCrtl/Shift/오른쪽 클릭-원도우 모드 전환.",
		x)

			----------------------------------------------------------------------
			-- Minimap button click alerts
			----------------------------------------------------------------------

			Ln("Target Tracking Enabled",
			--[[zhCN]] "启用目标追踪",
			--[[zhTW]] "啟用目標追蹤",
			--[[ruRU]] "Отслеживание цели включено",
			--[[koKR]] "대상 추적 사용",
			x)

			Ln("Target Tracking Disabled",
			--[[zhCN]] "禁用目标追踪",
			--[[zhTW]] "停用目標追蹤",
			--[[ruRU]] "Отслеживание цели отключено",
			--[[koKR]] "대상 추적 사용안함",
			x)

			Ln("Coordinates Enabled",
			--[[zhCN]] "启用坐标显示",
			--[[zhTW]] "啟用坐標顯示",
			--[[ruRU]] "Координаты включены",
			--[[koKR]] "좌표 사용",
			x)

			Ln("Coordinates Disabled",
			--[[zhCN]] "禁用坐标显示",
			--[[zhTW]] "停用坐標顯示",
			--[[ruRU]] "Координаты отключены",
			--[[koKR]] "좌표 사용안함",
			x)

			Ln("Error frame text will be shown",
			--[[zhCN]] "显示错误信息",
			--[[zhTW]] "顯示錯誤訊息",
			--[[ruRU]] "Сообщения об ошибках включены",
			--[[koKR]] "오류프레임 표시",
			x)

			Ln("Error frame text will be hidden",
			--[[zhCN]] "隐藏错误信息",
			--[[zhTW]] "隱藏錯誤訊息",
			--[[ruRU]] "Сообщения об ошибках отключены",
			--[[koKR]] "오류프레임 숨김",
			x)

			----------------------------------------------------------------------
			-- Chat message
			----------------------------------------------------------------------

			Ln("Zygor addon not found.",
			--[[zhCN]] "你尚未安装Zygor插件。",
			--[[zhTW]] "你尚未安裝Zygor插件。",
			--[[ruRU]] "Модификация Zygor не найдена.",
			--[[koKR]] "Zygor 애드온 찾을수 없음.",
			x)

			----------------------------------------------------------------------
			-- Tooltip
			----------------------------------------------------------------------

			Ln("Left: Options panel",
			--[[zhCN]] "左键：设置面板",
			--[[zhTW]] "左：選項面板",
			--[[ruRU]] "",
			--[[koKR]] "왼쪽: 설정창",
			x)

			Ln("Right: Music player",
			--[[zhCN]] "右键：音乐播放器",
			--[[zhTW]] "右：音樂播放器",
			--[[ruRU]] "",
			--[[koKR]] "오른쪽: 음악 플레이어",
			x)

		----------------------------------------------------------------------
		-- Enable hotkey
		----------------------------------------------------------------------

		Ln("Enable hotkey",
		--[[zhCN]] "启用热键",
		--[[zhTW]] "啟用熱鍵",
		--[[ruRU]] "Вкл. горячую клавишу",
		--[[koKR]] "단축키 사용",
		x)

		Ln("If checked, you will be able to open Leatrix Plus or the music player by pressing a designated hotkey.",
		--[[zhCN]] "勾选后，你可以通过预设的快捷键来打开Leatrix Plus或者其音乐播放器。",
		--[[zhTW]] "勾選後，你可以透過指定熱鍵開啟Leatrix Plus或音樂播放器。",
		--[[ruRU]] "",
		--[[koKR]] "지정된 단축키로 Leatrix Plus 또는 음악 플레이어를 열수 있습니다.",
		x)

		Ln("Hotkey",
		--[[zhCN]] "热键",
		--[[zhTW]] "熱鍵",
		--[[ruRU]] "Горячая клавиша",
		--[[koKR]] "단축키",
		x)

		Ln("Select the hotkeys that you want to use.\n\nThis panel will close automatically if you enter combat.",
		--[[zhCN]] "请选择你想设置的快捷键。\n\n此面板在你进入战斗后自动关闭。",
		--[[zhTW]] "選擇你想使用的熱鍵。\n\n此面板將在你進入戰鬥後自動關閉。",
		--[[ruRU]] "",
		--[[koKR]] "사용할 단축키를 선택하십시오.\n\n전투시 자동으로 닫힙니다.",
		x)

		Ln("Music player",
		--[[zhCN]] "音乐播放器",
		--[[zhTW]] "音樂播放器",
		--[[ruRU]] "",
		--[[koKR]] "음악 플레이어",
		x)

	----------------------------------------------------------------------
	-- 	LA9: Miscellaneous
	----------------------------------------------------------------------

		Ln("TranslatedBy",
		--[[zhCN]] "Siweia",
		--[[zhTW]] "BNS",
		--[[ruRU]] "Felixod",
		--[[koKR]] "ZinY05",
		x)

		Ln("Click to configure the settings for this option.",
		--[[zhCN]] "点击进行额外的选项设置",
		--[[zhTW]] "點擊進行額外的選項設置",
		--[[ruRU]] "Нажмите, чтобы настроить параметры на этой вкладке.",
		--[[koKR]] "설정을 구성하려면 클릭합니다.",
		x)

		Ln("Configuration Panel",
		--[[zhCN]] "设置面板",
		--[[zhTW]] "設置面板",
		--[[ruRU]] "Панель настройки",
		--[[koKR]] "설정창",
		x)

		-- Help button
		Ln("Help",
		--[[zhCN]] "帮助",
		--[[zhTW]] "幫助",
		--[[ruRU]] "Справка",
		--[[koKR]] "도움말",
		x)

		Ln("Select the settings that you want to use.",
		--[[zhCN]] "选择你想启用的设置。",
		--[[zhTW]] "選擇你想啟用的設置。",
		--[[ruRU]] "Выберите параметры, которые вы хотите использовать.",
		--[[koKR]] "사용하려는 설정을 선택합니다.",
		x)

		Ln("No help is available for this page.",
		--[[zhCN]] "此页面没有帮助信息。",
		--[[zhTW]] "此頁面沒有幫助訊息。",
		--[[ruRU]] "Справка недоступна для этой страницы.",
		--[[koKR]] "도움말을 사용할수 없습니다.",
		x)

		-- Reset button
		Ln("Reset",
		--[[zhCN]] "重置",
		--[[zhTW]] "重置",
		--[[ruRU]] "Сбросить",
		--[[koKR]] "재설정",
		x)

		Ln("Click to reset the settings on this page.",
		--[[zhCN]] "点击重置此页面的设置。",
		--[[zhTW]] "點擊重置此頁面的設置。",
		--[[ruRU]] "Нажмите, чтобы сбросить настройки на этой странице.",
		--[[koKR]] "이 페이지를 재설정 하려면 클릭합니다.",
		x)

		-- Main menu button
		Ln("Back to Main Menu",
		--[[zhCN]] "返回",
		--[[zhTW]] "返回",
		--[[ruRU]] "Назад в главное меню",
		--[[koKR]] "주 메뉴로 돌아가기",
		x)

		Ln("Click to return to the main menu.",
		--[[zhCN]] "点击返回到主菜单",
		--[[zhTW]] "點擊返回到主選單",
		--[[ruRU]] "Нажмите, чтобы вернуться в главное меню.",
		--[[koKR]] "주 메뉴 돌아가기 클릭",
		x)

		-- Reload button
		Ln("Reload",
		--[[zhCN]] "重载插件",
		--[[zhTW]] "重載插件",
		--[[ruRU]] "Перезагрузить",
		--[[koKR]] "리로드",
		x)

		Ln("Your UI needs to be reloaded for some of the changes to take effect.\n\nYou don't have to click the reload button immediately but you do need to click it when you are done making changes and you want the changes to take effect.",
		--[[zhCN]] "你需要进行重载插件后才能使部分设置生效。\n\n你无需立即点击重载插件按钮，但是你完成设置并希望其生效时，必须点击它。",
		--[[zhTW]] "你需要進行重載插件後才能使部分設置生效。\n\n你無需立即點擊重載插件按鈕，但是你完成設置並希望其生效時，必須點擊它。",
		--[[ruRU]] "Ваш UI нуждается в перезагрузке для вступления в силу ряда изменений.\n\nВы недолжны немедленно нажимать на кнопку перезагрузки, но после завершения редактирования параметров Вам необходимо будет это сделать, для вступления в силу ряда изменений.",
		--[[koKR]] "일부 변경사항을 적용하려면 UI를 다시 로드 하여야 합니다. 요구시 리로드 버튼 활성화.",
		x)

		Ln("Your UI needs to be reloaded.",
		--[[zhCN]] "你的插件需要重新载入。",
		--[[zhTW]] "你的插件需要重新載入。",
		--[[ruRU]] "Ваш UI нуждается в перезагрузке.",
		--[[koKR]] "당신의 UI는 다시 로드 해야 합니다.",
		x)

		-- Chat messages
		Ln("You cannot do that in combat.",
		--[[zhCN]] "你无法在战斗中进行该项操作。",
		--[[zhTW]] "你無法在戰鬥中進行該項操作。",
		--[[ruRU]] "Вы не можете сделать это в бою.",
		--[[koKR]] "전투중으로 할수 없습니다.",
		x)

		Ln("Requires UI reload.",
		--[[zhCN]] "需要重载插件",
		--[[zhTW]] "需要重載插件",
		--[[ruRU]] "Требуется перезагрузка UI.",
		--[[koKR]] "UI 리로드 필요.",
		x)

		Ln("Settings",
		--[[zhCN]] "设置",
		--[[zhTW]] "設置",
		--[[ruRU]] "Параметры",
		--[[koKR]] "설정",
		x)

		Ln("Managed by Leatrix Plus",
		--[[zhCN]] "LeatrixPlus托管",
		--[[zhTW]] "由Leatrix Plus管理",
		--[[ruRU]] "Управляется Leatrix Plus",
		--[[koKR]] "Leatrix Plus 에서 설정",
		x)

		-- Music player
		Ln("Music player for Leatrix Plus",
		--[[zhCN]] "Leatrix Plus音乐播放器",
		--[[zhTW]] "Leatrix Plus的音樂播放器",
		--[[ruRU]] "",
		--[[koKR]] "Leatrix Plus 음악 플레이어",
		x)

		-- Music player
		Ln("Right-click anywhere to return to the zone list.",
		--[[zhCN]] "右键点击任意区域返回区域列表",
		--[[zhTW]] "任何地方點擊右鍵回到區域列表。",
		--[[ruRU]] "",
		--[[koKR]] "목록으로 돌아가려면 마우스 오른쪽 버튼 클릭합니다.",
		x)

		-- Music player
		Ln("Stop player",
		--[[zhCN]] "停止播放器",
		--[[zhTW]] "停止播放器",
		--[[ruRU]] "",
		--[[koKR]] "플레이어 멈춤",
		x)

		----------------------------------------------------------------------
		-- 	Commands
		----------------------------------------------------------------------

		Ln("Invalid console variable.",
		--[[zhCN]] "无效控制台缓存。",
		--[[zhTW]] "無效控制台變量。",
		--[[ruRU]] "",
		--[[koKR]] "잘못된 콘솔 변수.",
		x)

		Ln("Missing console variable.",
		--[[zhCN]] "丢失控制台缓存。",
		--[[zhTW]] "缺少控制台變量。",
		--[[ruRU]] "",
		--[[koKR]] "누락된 콘솔 변수.",
		x)

		Ln("Leatrix Plus will not overwrite LeaPlusDB at next logout.",
		--[[zhCN]] "下次登出时不会清空LeatrixPlus的插件缓存。",
		--[[zhTW]] "Leatrix Plus將會在下次登出時覆寫LeaPlus數據庫。",
		--[[ruRU]] "",
		--[[koKR]] "Leatrix Plus는 다음 로그 아웃시 LeaPlusDB를 덮어 쓰지 않습니다.",
		x)

		Ln("Tracing started.",
		--[[zhCN]] "追踪开始。",
		--[[zhTW]] "追蹤已開始。",
		--[[ruRU]] "",
		--[[koKR]] "추적 시작.",
		x)

		Ln("Tracing stopped.",
		--[[zhCN]] "追踪停止。",
		--[[zhTW]] "追蹤已停止。",
		--[[ruRU]] "",
		--[[koKR]] "추적 중지.",
		x)

		Ln("Rested bubbles",
		--[[zhCN]] "休息气泡信息",
		--[[zhTW]] "休息氣泡訊息",
		--[[ruRU]] "Бонус отдыха",
		--[[koKR]] "휴식 버블",
		x)

		Ln("Dark Soil scanning activated.  Reload UI to exit.",
		--[[zhCN]] "黑色泥土扫描启用，取消需重载插件。",
		--[[zhTW]] "深色土壤掃描啟用，取消需重載插件。",
		--[[ruRU]] "Сканирование темной земли активировано. Перезагрузите UI для выхода.",
		--[[koKR]] "어두운 토양 검사 활성화. 리로드-종료.",
		x)

		Ln("Dark Soil scanning is already activated.  You only need to run this once.  Reload UI to exit.",
		--[[zhCN]] "黑色泥土扫描已经启用，你只需要进行一次操作。取消需重载插件。",
		--[[zhTW]] "深色土壤掃描已經啟用，你只需要進行一次操作。取消需重載插件。",
		--[[ruRU]] "Сканирование темной земли уже активировано. Вы должны запустить его только один раз. Перезагрузите UI для выхода.",
		--[[koKR]] "어두운 토양 검사가 이미 활성화됨.",
		x)

		Ln("Achievement UI is not loaded yet.  Open Achievements frame then try again.",
		--[[zhCN]] "成就插件尚未载入，请打开成就面板后重试。",
		--[[zhTW]] "成就插件尚未載入，請打開成就面板後重試。",
		--[[ruRU]] "UI достижений не загружен. Откройте окно достижений и попробуйте снова.",
		--[[koKR]] "업적창이 로드되지 않습니다. 다시 시도 하세요.",
		x)

		Ln("Camera distance",
		--[[zhCN]] "镜头距离",
		--[[zhTW]] "鏡頭距離",
		--[[ruRU]] "Дистанция камеры",
		--[[koKR]] "카메라 거리",
		x)

		Ln("Shaders",
		--[[zhCN]] "阴影",
		--[[zhTW]] "陰影",
		--[[ruRU]] "Тени",
		--[[koKR]] "쉐이더",
		x)

		Ln("Particle density",
		--[[zhCN]] "粒子密度",
		--[[zhTW]] "粒子密度",
		--[[ruRU]] "Плотность частиц",
		--[[koKR]] "입자 밀도",
		x)

		Ln("Weather density",
		--[[zhCN]] "天气密度",
		--[[zhTW]] "天氣密度",
		--[[ruRU]] "Плотность погоды",
		--[[koKR]] "기상 밀도",
		x)

		Ln("Account achievements are hidden.",
		--[[zhCN]] "账号成就已隐藏。",
		--[[zhTW]] "帳號成就已隱藏。",
		--[[ruRU]] "Достижения на учетную запись скрыты.",
		--[[koKR]] "계정 업적을 숨깁니다.",
		x)

		Ln("Account achievements are being shared.",
		--[[zhCN]] "帐号成就已经共享。",
		--[[zhTW]] "帳號成就已經共享。",
		--[[ruRU]] "Достижения на учетную запись могут быть доступны другим персонажам.",
		--[[koKR]] "계정 업적을 공유하고 있습니다.",
		x)

		Ln("Tooltip title color",
		--[[zhCN]] "鼠标提示信息颜色",
		--[[zhTW]] "鼠標提示訊息顏色。",
		--[[ruRU]] "Цвет заголовка всплывающей подсказки",
		--[[koKR]] "툴팁 제목 색상",
		x)

		Ln("No tooltip showing.",
		--[[zhCN]] "目前没有任何提示信息。",
		--[[zhTW]] "目前沒有任何提示訊息。",
		--[[ruRU]] "Нет всплывающих подсказок для отображения.",
		--[[koKR]] "툴팁이 없습니다.",
		x)

		Ln("Lifetime honorable kills",
		--[[zhCN]] "荣誉击杀总数",
		--[[zhTW]] "榮譽擊殺總數",
		--[[ruRU]] "Всего почетных побед",
		--[[koKR]] "",
		x)

		Ln("Checkbox labels are Ok.",
		--[[zhCN]] "复选框信息检查通过",
		--[[zhTW]] "複選框標籤是OK的。",
		--[[ruRU]] "Сокращать описания.",
		--[[koKR]] "체크박스를 확인합니다.",
		x)

		Ln("Missing sound file parameter.",
		--[[zhCN]] "缺失音频文件参数",
		--[[zhTW]] "缺少聲音檔案參數。",
		--[[ruRU]] "",
		--[[koKR]] "소리 파일 매개변수 에러",
		x)

		Ln("Invalid parameter.",
		--[[zhCN]] "无效参数",
		--[[zhTW]] "無效參數",
		--[[ruRU]] "Неверный параметр.",
		--[[koKR]] "잘못된 매개변수",
		x)

		Ln("Invalid taint level.",
		--[[zhCN]] "无效的污染等级。",
		--[[zhTW]] "無效的汙染等級。",
		--[[ruRU]] "",
		--[[koKR]] "",
		x)

		Ln("Taint level: Disabled (0).",
		--[[zhCN]] "污染等级：禁用(0)。",
		--[[zhTW]] "汙染等級：停用(0)",
		--[[ruRU]] "",
		--[[koKR]] "",
		x)

		Ln("Taint level: Basic (1).",
		--[[zhCN]] "污染等级：基本(1)。",
		--[[zhTW]] "汙染等級：基本(1)",
		--[[ruRU]] "",
		--[[koKR]] "",
		x)

		Ln("Taint level: Full (2).",
		--[[zhCN]] "污染等级：全面(2)。",
		--[[zhTW]] "汙染等級：完整(2)",
		--[[ruRU]] "",
		--[[koKR]] "",
		x)

		Ln("Quest completed.",
		--[[zhCN]] "任务已完成。",
		--[[zhTW]] "任務完成。",
		--[[ruRU]] "",
		--[[koKR]] "퀘스트 완료",
		x)

		Ln("Quest not completed.",
		--[[zhCN]] "任务未完成。",
		--[[zhTW]] "任務未完成。",
		--[[ruRU]] "",
		--[[koKR]] "퀘스트 미완료",
		x)

		Ln("Invalid quest ID.",
		--[[zhCN]] "无效的任务ID。",
		--[[zhTW]] "無效任務ID。",
		--[[ruRU]] "",
		--[[koKR]] "잘못된 퀘스트ID",
		x)

		Ln("Missing quest ID.",
		--[[zhCN]] "缺少任务ID。",
		--[[zhTW]] "缺少任務ID。",
		--[[ruRU]] "",
		--[[koKR]] "퀘스트ID 없음",
		x)

		Ln("Requires you to be interacting with Larana Drome.  She can be found at Scribes' Sacellum, Dalaran, Northrend.",
		--[[zhCN]] "需要你与拉兰娜·德罗姆交流。她可以在达拉然（诺森德）的铭文店里找到。",
		--[[zhTW]] "需要你與拉蕾娜．德羅姆互動，她可以在北裂境的達拉然的雕銘師禮拜堂中找到。",
		--[[ruRU]] "",
		--[[koKR]] "라라나 드롬과 상호 작용해야합니다. 그녀는 노스렌드,달라란,각인사의 성소 에서 찾을 수 있습니다.",
		x)

----------------------------------------------------------------------
--	L00: Leatrix Plus
----------------------------------------------------------------------

--	Initialise variables
	LeaPlusLC["ShowErrorsFlag"] = 1
	LeaPlusLC["NumberOfPages"] = 8
	LeaPlusLC["RaidColors"] = RAID_CLASS_COLORS

--	Create event frame
	local LpEvt = CreateFrame("FRAME")
	LpEvt:RegisterEvent("ADDON_LOADED")
	LpEvt:RegisterEvent("VARIABLES_LOADED")
	LpEvt:RegisterEvent("PLAYER_ENTERING_WORLD")

----------------------------------------------------------------------
--	L01: Functions
----------------------------------------------------------------------

	-- Translate string
	function LeaPlusLC:Translate(phrase)
		-- Phrase is empty
		if phrase == "" then
			-- Return empty prase
			return ""
		end
		-- Language pack exists
		if L and L[phrase] and L[phrase] ~= "" then
			-- Return localised phrase
			return L[phrase]
		else
			-- Return original phrase
			return phrase
		end
	end

	-- Print text
	function LeaPlusLC:Print(text)
		DEFAULT_CHAT_FRAME:AddMessage(LeaPlusLC:Translate(text), 1.0, 0.85, 0.0)
	end

	-- Lock and unlock an item
	function LeaPlusLC:LockItem(item, lock)
		if lock then
			item:Disable()
			item:SetAlpha(0.3)
		else
			item:Enable()
			item:SetAlpha(1.0)
		end
	end

	-- Hide configuration panels
	function LeaPlusLC:HideConfigPanels()
		for k, v in pairs(LeaConfigList) do
			v:Hide()
		end
	end

	-- Load a string variable or set it to default if it's not set to "On" or "Off"
	function LeaPlusLC:LoadVarChk(var, def)
		if LeaPlusDB[var] and type(LeaPlusDB[var]) == "string" and LeaPlusDB[var] == "On" or LeaPlusDB[var] == "Off" then
			LeaPlusLC[var] = LeaPlusDB[var]
		else
			LeaPlusLC[var] = def
			LeaPlusDB[var] = def
		end
	end

	-- Load a numeric variable and set it to default if it's not within a given range
	function LeaPlusLC:LoadVarNum(var, def, valmin, valmax)
		if LeaPlusDB[var] and type(LeaPlusDB[var]) == "number" and LeaPlusDB[var] >= valmin and LeaPlusDB[var] <= valmax then
			LeaPlusLC[var] = LeaPlusDB[var]
		else
			LeaPlusLC[var] = def
			LeaPlusDB[var] = def
		end
	end

	-- Load an anchor point variable and set it to default if the anchor point is invalid
	function LeaPlusLC:LoadVarAnc(var, def)
		if LeaPlusDB[var] and type(LeaPlusDB[var]) == "string" and LeaPlusDB[var] == "CENTER" or LeaPlusDB[var] == "TOP" or LeaPlusDB[var] == "BOTTOM" or LeaPlusDB[var] == "LEFT" or LeaPlusDB[var] == "RIGHT" or LeaPlusDB[var] == "TOPLEFT" or LeaPlusDB[var] == "TOPRIGHT" or LeaPlusDB[var] == "BOTTOMLEFT" or LeaPlusDB[var] == "BOTTOMRIGHT" then
			LeaPlusLC[var] = LeaPlusDB[var]
		else
			LeaPlusLC[var] = def
			LeaPlusDB[var] = def
		end
	end

	-- Show tooltips for checkboxes
	function LeaPlusLC:TipSee()
		GameTooltip:SetOwner(self, "ANCHOR_NONE")
		local parent = self:GetParent()
		local pscale = parent:GetEffectiveScale()
		local gscale = UIParent:GetEffectiveScale()
		local tscale = GameTooltip:GetEffectiveScale()
		local gap = ((UIParent:GetRight() * gscale) - (parent:GetRight() * pscale))
		if gap < (250 * tscale) then
			GameTooltip:SetPoint("TOPRIGHT", parent, "TOPLEFT", 0, 0)
		else
			GameTooltip:SetPoint("TOPLEFT", parent, "TOPRIGHT", 0, 0)
		end
		GameTooltip:SetText(self.tiptext, nil, nil, nil, nil, true)
	end

	-- Show tooltips for configuration buttons and dropdown menus
	function LeaPlusLC:ShowTooltip()
		GameTooltip:SetOwner(self, "ANCHOR_NONE")
		local parent = LeaPlusLC["PageF"]
		local pscale = parent:GetEffectiveScale()
		local gscale = UIParent:GetEffectiveScale()
		local tscale = GameTooltip:GetEffectiveScale()
		local gap = ((UIParent:GetRight() * gscale) - (LeaPlusLC["PageF"]:GetRight() * pscale))
		if gap < (250 * tscale) then
			GameTooltip:SetPoint("TOPRIGHT", parent, "TOPLEFT", 0, 0)
		else
			GameTooltip:SetPoint("TOPLEFT", parent, "TOPRIGHT", 0, 0)
		end
		GameTooltip:SetText(self.tiptext, nil, nil, nil, nil, true)
	end

	-- Show tooltips for interface settings (not currently used)
	function LeaPlusLC:ShowFacetip()
		GameTooltip:SetOwner(self, "ANCHOR_TOP")
		GameTooltip:SetText(self.tiptext, nil, nil, nil, nil, true)
	end

	-- Create configuration button
	function LeaPlusLC:CfgBtn(name, parent, tip)
		local CfgBtn = CreateFrame("BUTTON", nil, parent)
		LeaPlusCB[name] = CfgBtn
		CfgBtn:SetWidth(20)
		CfgBtn:SetHeight(20)
		CfgBtn:SetPoint("LEFT", parent.f, "RIGHT", 0, 0)

		CfgBtn.t = CfgBtn:CreateTexture(nil, "BORDER")
		CfgBtn.t:SetAllPoints()
		CfgBtn.t:SetTexture("Interface\\WorldMap\\Gear_64.png")
		CfgBtn.t:SetTexCoord(0, 0.50, 0, 0.50);
		CfgBtn.t:SetVertexColor(1.0, 0.82, 0, 1.0)

		CfgBtn:SetHighlightTexture("Interface\\WorldMap\\Gear_64.png")
		CfgBtn:GetHighlightTexture():SetTexCoord(0, 0.50, 0, 0.50);

		CfgBtn.tiptext = LeaPlusLC:Translate("Click to configure the settings for this option.")
		CfgBtn:SetScript("OnEnter", LeaPlusLC.ShowTooltip)
		CfgBtn:SetScript("OnLeave", GameTooltip_Hide)
	end

	-- Capitalise first character in a string
	function LeaPlusLC:CapFirst(str)
		return gsub(string.lower(str), "^%l", strupper)
	end

	-- Toggle Zygor addon
	function LeaPlusLC:ZygorToggle()
		if select(2, GetAddOnInfo("ZygorGuidesViewer")) then
			if not IsAddOnLoaded("ZygorGuidesViewer") then
				if LeaPlusLC:PlayerInCombat() then
					return
				else
					EnableAddOn("ZygorGuidesViewer")
					ReloadUI();
				end
			else
				DisableAddOn("ZygorGuidesViewer")
				ReloadUI();
			end
		else
			-- Zygor cannot be found
			LeaPlusLC:Print("Zygor addon not found.");
		end
		return
	end

	-- Show memory usage stat
	function LeaPlusLC:ShowMemoryUsage(frame, anchor, x, y)

		-- Create frame
		local memframe = CreateFrame("FRAME", nil, frame)
		memframe:ClearAllPoints()
		memframe:SetPoint(anchor, x, y)
		memframe:SetWidth(100)
		memframe:SetHeight(20)

		-- Create labels
		local pretext = memframe:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
		pretext:SetPoint("TOPLEFT", 0, 0)
		pretext:SetText(LeaPlusLC:Translate("Memory Usage"))

		local memtext = memframe:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
		memtext:SetPoint("TOPLEFT", 0, 0 - 30)

		-- Create stat
		local memstat = memframe:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
		memstat:SetPoint("BOTTOMLEFT", memtext, "BOTTOMRIGHT")
		memstat:SetText("(calculating...)")

		-- Create update script
		local memtime = -1
		memframe:SetScript("OnUpdate", function(self, elapsed)
			if memtime > 2 or memtime == -1 then
				UpdateAddOnMemoryUsage();
				memtext = GetAddOnMemoryUsage("Leatrix_Plus")
				memtext = math.floor(memtext + .5) .. " KB"
				memstat:SetText(memtext);
				memtime = 0;
			end
			memtime = memtime + elapsed;
		end)

		-- Release memory
		LeaPlusLC.ShowMemoryUsage = nil

	end

	-- Check if player is in LFG queue
	function LeaPlusLC:IsInLFGQueue()
 		if 	GetLFGMode(LE_LFG_CATEGORY_LFD) or
			GetLFGMode(LE_LFG_CATEGORY_LFR) or
			GetLFGMode(LE_LFG_CATEGORY_RF) or
			GetLFGMode(LE_LFG_CATEGORY_SCENARIO) or
			GetLFGMode(LE_LFG_CATEGORY_FLEXRAID) then
			return true
		end
	end

	-- Check if player is in combat
	function LeaPlusLC:PlayerInCombat()
		if (UnitAffectingCombat("player")) then
			LeaPlusLC:Print("You cannot do that in combat.")
			return true
		end
	end

	--  Hide panel and pages
	function LeaPlusLC:HideFrames()

		-- Hide option pages
		for i = 0, LeaPlusLC["NumberOfPages"] do
			if LeaPlusLC["Page"..i] then
				LeaPlusLC["Page"..i]:Hide();
			end;
		end

		-- Hide options panel
		LeaPlusLC["PageF"]:Hide();

	end

	-- Find out if Leatrix Plus is showing (main panel or config panel)
	function LeaPlusLC:IsPlusShowing()
		if LeaPlusLC["PageF"]:IsShown() then return true end
		for k, v in pairs(LeaConfigList) do
			if v:IsShown() then
				return true
			end
		end
	end

	-- Check if a name is in your friends list or guild
	function LeaPlusLC:FriendCheck(name)

		-- Update friends list
		ShowFriends()

		-- Check character friends
		for i = 1, GetNumFriends() do
			-- Return true if name matches without or without realm
			if name == GetFriendInfo(i) or name == strsplit("-", GetFriendInfo(i), 2) then
				return true
			end
		end

		-- Get realm name or set to player's own realm (same realm does not return realm)
		local void, myRealm = UnitFullName(name)
		if not myRealm or myRealm == "" then void, myRealm = UnitFullName("player") end

		-- Add realm name to character name
		if not string.find(name, "-") then
			name = name .. "-" .. myRealm
		end

		-- Check Battle.net friends
		local numfriends = BNGetNumFriends()
		for i = 1, numfriends do
			local numtoons = BNGetNumFriendGameAccounts(i)
			for j = 1, numtoons do
				local void, toon, client, realm = BNGetFriendGameAccountInfo(i, j)
				local toonname = toon .. "-" ..realm
				if client == "WoW" and toonname == name then
					return true
				end
			end
		end

		-- Check guild roster (new members may need to press J to refresh roster)
		local gCount = GetNumGuildMembers()
		for i = 1, gCount do
			local gName, void, void, void, void, void, void, void, gOnline, void, void, void, void, gMobile = GetGuildRosterInfo(i)
			if gOnline and not gMobile then
				local gCompare = gName
				if not string.find(gName, "-") then
					gCompare = gName .. "-" .. myRealm
				end
				if gCompare == name then
					return true
				end
			end
		end

	end

	-- Convert color code (from RGB or RGB Percent to Hex or Hex Percent and vice versa)
	function LeaPlusLC:ConvertColor(r, g, b)
		if r and g and b then
			LeaPlusLC:Print("Source: |cffffffff" .. r .. " " .. g .. " " .. b .. " ")
			-- Source is RGB or RGB Percent
			local r = r <= 255 and r >= 0 and r or 0
			local g = g <= 255 and g >= 0 and g or 0
			local b = b <= 255 and b >= 0 and b or 0
			-- RGB Percent to Hex
			LeaPlusLC:Print("RGB Percent to Hex: |cffffffff" .. strupper(string.format("%02x%02x%02x", r * 255, g * 255, b * 255)))
			-- RGB to Hex
			LeaPlusLC:Print("RGB to Hex: |cffffffff" .. strupper(string.format("%02x%02x%02x", r, g, b)))
		else
			LeaPlusLC:Print("Source: |cffffffff" .. r)
			-- Source is Hex
			local rhex, ghex, bhex = string.sub(r, 1, 2), string.sub(r, 3, 4), string.sub(r, 5, 6)
			-- Hex to RGB Percent
			LeaPlusLC:Print("Hex to RGB Percent: |cffffffff" .. string.format("%.2f", tonumber(rhex, 16) / 255) ..  "  " .. string.format("%.2f", tonumber(ghex, 16) / 255) .. "  " .. string.format("%.2f", tonumber(bhex, 16) / 255))
			-- Hex to RGB
			LeaPlusLC:Print("Hex to RGB: |cffffffff" .. tonumber(rhex, 16) .. "  " .. tonumber(ghex, 16) .. "  " .. tonumber(bhex, 16))
		end
	end

----------------------------------------------------------------------
--	L02: Locks
----------------------------------------------------------------------

	-- Function to set lock state for configuration buttons
	function LeaPlusLC:LockOption(option, item, reloadreq)
		if reloadreq then
			-- Option change requires UI reload
			if LeaPlusLC[option] ~= LeaPlusDB[option] or LeaPlusLC[option] == "Off" then
				LeaPlusLC:LockItem(LeaPlusCB[item], true)
			else
				LeaPlusLC:LockItem(LeaPlusCB[item], false)
			end
		else
			-- Option change does not require UI reload
			if LeaPlusLC[option] == "Off" then
				LeaPlusLC:LockItem(LeaPlusCB[item], true)
			else
				LeaPlusLC:LockItem(LeaPlusCB[item], false)
			end
		end
	end

--	Set lock state for configuration buttons
	function LeaPlusLC:SetDim()

		LeaPlusLC:LockOption("AutomateGossip", "AutoGossipBtn", true)			-- Automate gossip
		LeaPlusLC:LockOption("AutoAcceptRes", "AutoResBtn", false)				-- Accept resurrection
		LeaPlusLC:LockOption("AutoReleasePvP", "AutoReleaseBtn", false)			-- Release in PvP
		LeaPlusLC:LockOption("AutoSellJunk", "SellJunkBtn", true)				-- Sell junk automatically
		LeaPlusLC:LockOption("AutoRepairOwnFunds", "RepairBtn", true)			-- Repair automatically
		LeaPlusLC:LockOption("InviteFromWhisper", "InvWhisperBtn", false)		-- Invite from whispers
		LeaPlusLC:LockOption("HideErrorFrameText", "HideErrorsBtn", true)		-- Hide error messages
		LeaPlusLC:LockOption("MailFontChange", "MailTextBtn", true)				-- Resize mail text
		LeaPlusLC:LockOption("QuestFontChange", "QuestTextBtn", true)			-- Resize quest text
		LeaPlusLC:LockOption("ShowMapMod", "EnhanceMapButton", true)			-- Enhance world map
		LeaPlusLC:LockOption("MinimapMod", "ModMinimapBtn", true)				-- Customise minimap
		LeaPlusLC:LockOption("TipModEnable", "MoveTooltipButton", true)			-- Manage tooltip
		LeaPlusLC:LockOption("StaticCoordsEn", "ModStaticCoordsBtn", true)		-- Show coordinates
		LeaPlusLC:LockOption("ShowCooldowns", "CooldownsButton", true)			-- Show cooldowns
		LeaPlusLC:LockOption("FrmEnabled", "MoveFramesButton", true)			-- Manage frames
		LeaPlusLC:LockOption("ManageBuffFrame", "ManageBuffBtn", true)			-- Manage buff frame
		LeaPlusLC:LockOption("ClassColFrames", "ClassFramesBtn", true)			-- Class colored frames
		LeaPlusLC:LockOption("ShowPlayerChain", "ModPlayerChain", true)			-- Show player chain
		LeaPlusLC:LockOption("NoAlerts", "NoAlertsBtn", true)					-- Hide alerts
		LeaPlusLC:LockOption("ViewPortEnable", "ModViewportBtn", true)			-- Enable viewport
		LeaPlusLC:LockOption("EnableHotkey", "HotkeyBtn", true)					-- Enable hotkey

	end

----------------------------------------------------------------------
--	L03: Restarts
----------------------------------------------------------------------

	-- Set the reload button state
	function LeaPlusLC:ReloadCheck()

		-- Automation
		if	(LeaPlusLC["AutomateQuests"]		~= LeaPlusDB["AutomateQuests"])			-- Automate quests
		or	(LeaPlusLC["AutomateGossip"]		~= LeaPlusDB["AutomateGossip"])			-- Automate gossip
		or	(LeaPlusLC["AutoSellJunk"]			~= LeaPlusDB["AutoSellJunk"])			-- Sell junk automatically
		or	(LeaPlusLC["AutoRepairOwnFunds"]	~= LeaPlusDB["AutoRepairOwnFunds"])		-- Repair automatically

		-- Chat
		or	(LeaPlusLC["UseEasyChatResizing"]	~= LeaPlusDB["UseEasyChatResizing"])	-- Use easy resizing
		or	(LeaPlusLC["NoCombatLogTab"]		~= LeaPlusDB["NoCombatLogTab"])			-- Hide the combat log
		or	(LeaPlusLC["NoChatButtons"]			~= LeaPlusDB["NoChatButtons"])			-- Hide chat buttons
		or	(LeaPlusLC["NoSocialButton"]		~= LeaPlusDB["NoSocialButton"])			-- Hide social button
		or	(LeaPlusLC["UnclampChat"]			~= LeaPlusDB["UnclampChat"])			-- Unclamp chat frame
		or	(LeaPlusLC["MoveChatEditBoxToTop"]	~= LeaPlusDB["MoveChatEditBoxToTop"])	-- Move editbox to top
		or	(LeaPlusLC["NoStickyChat"]			~= LeaPlusDB["NoStickyChat"])			-- Disable sticky chat
		or	(LeaPlusLC["UseArrowKeysInChat"]	~= LeaPlusDB["UseArrowKeysInChat"])		-- Use arrow keys in chat
		or	(LeaPlusLC["NoChatFade"]			~= LeaPlusDB["NoChatFade"])				-- Disable chat fade
		or	(LeaPlusLC["UnivGroupColor"]		~= LeaPlusDB["UnivGroupColor"])			-- Universal group color
		or	(LeaPlusLC["Manageclasscolors"]		~= LeaPlusDB["Manageclasscolors"])		-- Use class colors in chat
		or	(LeaPlusLC["MaxChatHstory"]			~= LeaPlusDB["MaxChatHstory"])			-- Increase chat history

		-- Text
		or	(LeaPlusLC["HideErrorFrameText"]	~= LeaPlusDB["HideErrorFrameText"])		-- Hide error text
		or	(LeaPlusLC["NoHitIndicators"]		~= LeaPlusDB["NoHitIndicators"])		-- Hide portrait text
		or	(LeaPlusLC["HideCraftedNames"]		~= LeaPlusDB["HideCraftedNames"])		-- Hide crafted names
		or	(LeaPlusLC["HideZoneText"]			~= LeaPlusDB["HideZoneText"])			-- Hide zone text
		or	(LeaPlusLC["HideSubzoneText"]		~= LeaPlusDB["HideSubzoneText"])		-- Hide subzone text
		or	(LeaPlusLC["MailFontChange"]		~= LeaPlusDB["MailFontChange"])			-- Resize mail text
		or	(LeaPlusLC["QuestFontChange"]		~= LeaPlusDB["QuestFontChange"])		-- Resize quest text

		-- Interface
		or	(LeaPlusLC["ShowMapMod"]			~= LeaPlusDB["ShowMapMod"])				-- Enhance world map
		or	(LeaPlusLC["MinimapMod"]			~= LeaPlusDB["MinimapMod"])				-- Customise minimap
		or	(LeaPlusLC["TipModEnable"]			~= LeaPlusDB["TipModEnable"])			-- Manage tooltip
		or	(LeaPlusLC["ShowVolume"]			~= LeaPlusDB["ShowVolume"])				-- Show volume slider
		or	(LeaPlusLC["AhExtras"]				~= LeaPlusDB["AhExtras"])				-- Show auction controls
		or	(LeaPlusLC["ShowDressTab"]			~= LeaPlusDB["ShowDressTab"])			-- Show dressup buttons
		or	(LeaPlusLC["StaticCoordsEn"]		~= LeaPlusDB["StaticCoordsEn"])			-- Show coordinates
		or	(LeaPlusLC["ShowCooldowns"]			~= LeaPlusDB["ShowCooldowns"])			-- Show cooldowns
		or	(LeaPlusLC["DurabilityStatus"]		~= LeaPlusDB["DurabilityStatus"])		-- Show durability status
		or	(LeaPlusLC["ShowPetSaveBtn"]		~= LeaPlusDB["ShowPetSaveBtn"])			-- Show pet save button

		-- Frames
		or	(LeaPlusLC["FrmEnabled"]			~= LeaPlusDB["FrmEnabled"])				-- Manage frames
		or	(LeaPlusLC["ManageBuffFrame"]		~= LeaPlusDB["ManageBuffFrame"])		-- Manage buff frame
		or	(LeaPlusLC["ClassColFrames"]		~= LeaPlusDB["ClassColFrames"])			-- Class colored frames
		or	(LeaPlusLC["ShowPlayerChain"]		~= LeaPlusDB["ShowPlayerChain"])		-- Show player chain
		or	(LeaPlusLC["ShowRaidToggle"]		~= LeaPlusDB["ShowRaidToggle"])			-- Show raid toggle button
		or	(LeaPlusLC["CombatPlates"]			~= LeaPlusDB["CombatPlates"])			-- Combat plates
		or	(LeaPlusLC["NoAlerts"]				~= LeaPlusDB["NoAlerts"])				-- Hide alerts
		or	(LeaPlusLC["NoCharControls"]		~= LeaPlusDB["NoCharControls"])			-- Hide character controls
		or	(LeaPlusLC["HideBodyguard"]			~= LeaPlusDB["HideBodyguard"])			-- Hide bodyguard gossip
		or	(LeaPlusLC["HideTalkingFrame"]		~= LeaPlusDB["HideTalkingFrame"])		-- Hide talking frame
		or	(LeaPlusLC["HideCleanupBtns"]		~= LeaPlusDB["HideCleanupBtns"])		-- Hide clean-up buttons
		or	(LeaPlusLC["HideBossBanner"]		~= LeaPlusDB["HideBossBanner"])			-- Hide boss banner
		or	(LeaPlusLC["HideLevelUpDisplay"]	~= LeaPlusDB["HideLevelUpDisplay"])		-- Hide level-up display
		or	(LeaPlusLC["NoGryphons"]			~= LeaPlusDB["NoGryphons"])				-- Hide gryphons
		or	(LeaPlusLC["NoClassBar"]			~= LeaPlusDB["NoClassBar"])				-- Hide stance bar
		or	(LeaPlusLC["NoCommandBar"]			~= LeaPlusDB["NoCommandBar"])			-- Hide order hall bar

		-- System
		or	(LeaPlusLC["NoShaders"]				~= LeaPlusDB["NoShaders"])				-- Disable screen glow
		or	(LeaPlusLC["MaxCameraZoom"]			~= LeaPlusDB["MaxCameraZoom"])			-- Max camera zoom
		or	(LeaPlusLC["ViewPortEnable"]		~= LeaPlusDB["ViewPortEnable"])			-- Enable viewport
		or	(LeaPlusLC["NoRestedEmotes"]		~= LeaPlusDB["NoRestedEmotes"])			-- Silence rested emotes
		or	(LeaPlusLC["NoBagAutomation"]		~= LeaPlusDB["NoBagAutomation"])		-- Disable bag automation
		or	(LeaPlusLC["NoPetAutomation"]		~= LeaPlusDB["NoPetAutomation"])		-- Disable pet automation
		or	(LeaPlusLC["CharAddonList"]			~= LeaPlusDB["CharAddonList"])			-- Show character addons
		or	(LeaPlusLC["NoRaidRestrictions"]	~= LeaPlusDB["NoRaidRestrictions"])		-- Remove raid restrictions
		or	(LeaPlusLC["NoMapEmote"]			~= LeaPlusDB["NoMapEmote"])				-- Disable map emote
		or	(LeaPlusLC["SkipCinematics"]		~= LeaPlusDB["SkipCinematics"])			-- Skip cinematics
		or	(LeaPlusLC["FasterLooting"]			~= LeaPlusDB["FasterLooting"])			-- Faster auto loot
		or	(LeaPlusLC["LockoutSharing"]		~= LeaPlusDB["LockoutSharing"])			-- Lockout sharing

		-- Settings
		or	(LeaPlusLC["ShowMinimapIcon"]		~= LeaPlusDB["ShowMinimapIcon"])		-- Show minimap button
		or	(LeaPlusLC["EnableHotkey"]			~= LeaPlusDB["EnableHotkey"])			-- Enable hotkey

		then
			-- Enable the reload button
			LeaPlusLC:LockItem(LeaPlusCB["ReloadUIButton"], false)
			LeaPlusCB["ReloadUIButton"].f:Show()
		else
			-- Disable the reload button
			LeaPlusLC:LockItem(LeaPlusCB["ReloadUIButton"], true)
			LeaPlusCB["ReloadUIButton"].f:Hide()
		end

	end

----------------------------------------------------------------------
--	L20: Live
----------------------------------------------------------------------

	function LeaPlusLC:Live()

		----------------------------------------------------------------------
		--	Automatically accept Dungeon Finder queue requests
		----------------------------------------------------------------------

		if LeaPlusLC["AutoConfirmRole"] == "On" then
			LFDRoleCheckPopupAcceptButton:SetScript("OnShow", function()
				local leader = ""
				for i=1, GetNumSubgroupMembers() do 
					if (UnitIsGroupLeader("party"..i)) then 
						leader = UnitName("party"..i);
						break;
					end
				end
				if (LeaPlusLC:FriendCheck(leader)) then
					LFDRoleCheckPopupAcceptButton:Click();
				end
			end)
		else
			LFDRoleCheckPopupAcceptButton:SetScript("OnShow", nil)
		end

		----------------------------------------------------------------------
		--	Invite from whispers
		----------------------------------------------------------------------

		if LeaPlusLC["InviteFromWhisper"] == "On" then
			LpEvt:RegisterEvent("CHAT_MSG_WHISPER");
			LpEvt:RegisterEvent("CHAT_MSG_BN_WHISPER");
		else
			LpEvt:UnregisterEvent("CHAT_MSG_WHISPER");
			LpEvt:UnregisterEvent("CHAT_MSG_BN_WHISPER");
		end

		----------------------------------------------------------------------
		--	Block duels
		----------------------------------------------------------------------

		if LeaPlusLC["NoDuelRequests"] == "On" then
			LpEvt:RegisterEvent("DUEL_REQUESTED");
		else
			LpEvt:UnregisterEvent("DUEL_REQUESTED");
		end

		----------------------------------------------------------------------
		--	Block pet battle duels
		----------------------------------------------------------------------

		if LeaPlusLC["NoPetDuels"] == "On" then
			LpEvt:RegisterEvent("PET_BATTLE_PVP_DUEL_REQUESTED");
		else
			LpEvt:UnregisterEvent("PET_BATTLE_PVP_DUEL_REQUESTED");
		end

		----------------------------------------------------------------------
		--	Block party invites
		----------------------------------------------------------------------

		if LeaPlusLC["NoPartyInvites"] == "On" or LeaPlusLC["AcceptPartyFriends"] == "On" then
			LpEvt:RegisterEvent("PARTY_INVITE_REQUEST");
		else
			LpEvt:UnregisterEvent("PARTY_INVITE_REQUEST");
		end

		----------------------------------------------------------------------
		--	Release in PvP
		----------------------------------------------------------------------

		if LeaPlusLC["AutoReleasePvP"] == "On" then
			LpEvt:RegisterEvent("PLAYER_DEAD");
		else
			LpEvt:UnregisterEvent("PLAYER_DEAD");
		end

		----------------------------------------------------------------------
		--	Accept resurrection
		----------------------------------------------------------------------

		if LeaPlusLC["AutoAcceptRes"] == "On" then
			LpEvt:RegisterEvent("RESURRECT_REQUEST");
		else
			LpEvt:UnregisterEvent("RESURRECT_REQUEST");
		end

		----------------------------------------------------------------------
		--	Automatic summon
		----------------------------------------------------------------------

		if LeaPlusLC["AutoAcceptSummon"] == "On" then
			LpEvt:RegisterEvent("CONFIRM_SUMMON");
		else
			LpEvt:UnregisterEvent("CONFIRM_SUMMON");
		end

		----------------------------------------------------------------------
		--	Disable loot warnings
		----------------------------------------------------------------------

		if LeaPlusLC["NoConfirmLoot"] == "On" then
			LpEvt:RegisterEvent("CONFIRM_LOOT_ROLL")
			LpEvt:RegisterEvent("CONFIRM_DISENCHANT_ROLL")
			LpEvt:RegisterEvent("LOOT_BIND_CONFIRM")
			LpEvt:RegisterEvent("MERCHANT_CONFIRM_TRADE_TIMER_REMOVAL")
			LpEvt:RegisterEvent("MAIL_LOCK_SEND_ITEMS")
		else
			LpEvt:UnregisterEvent("CONFIRM_LOOT_ROLL")
			LpEvt:UnregisterEvent("CONFIRM_DISENCHANT_ROLL")
			LpEvt:UnregisterEvent("LOOT_BIND_CONFIRM")
			LpEvt:UnregisterEvent("MERCHANT_CONFIRM_TRADE_TIMER_REMOVAL")
			LpEvt:UnregisterEvent("MAIL_LOCK_SEND_ITEMS")
		end

	end

----------------------------------------------------------------------
--	L30: Isolated
----------------------------------------------------------------------

	function LeaPlusLC:Isolated()

		----------------------------------------------------------------------
		-- Automate gossip
		----------------------------------------------------------------------

		if LeaPlusLC["AutomateGossip"] == "On" then

			-- Create configuration panel
			local GossipPanel = LeaPlusLC:CreatePanel("Automate Gossip", "GossipPanel")

			-- Add dropdown menu
			LeaPlusLC:CreateDropDown("AutoGossipMenu", "Modifier key", GossipPanel, 146, "TOPLEFT", 16, -112, {"ALT", "CTRL", LeaPlusLC:Translate("NONE")}, "")

			-- Help button tooltip
			GossipPanel.h.tiptext = LeaPlusLC:Translate("Choose a modifier key for use with this option.\n\nIf set to NONE, you can hold the shift key down to temporarily prevent automation.")

			-- Back button handler
			GossipPanel.b:SetScript("OnClick", function() 
				LeaPlusCB["ListFrameAutoGossipMenu"]:Hide(); -- Hide the dropdown list
				GossipPanel:Hide();
				LeaPlusLC["PageF"]:Show()
				LeaPlusLC["Page1"]:Show()
				return
			end) 

			-- Reset button handler
			GossipPanel.r:SetScript("OnClick", function()
				LeaPlusCB["ListFrameAutoGossipMenu"]:Hide(); -- Hide the dropdown list
				LeaPlusLC["AutoGossipMenu"] = 1
				GossipPanel:Hide(); GossipPanel:Show()
			end)

			-- Show the panel when the configuration button is clicked
			LeaPlusCB["AutoGossipBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					LeaPlusLC["AutoGossipMenu"] = 1
				else
					LeaPlusLC:HideFrames();
					GossipPanel:Show();
				end
			end)

			-- Create gossip watch frame and process gossip events
			local gossipFrame = CreateFrame("FRAME")
			gossipFrame:RegisterEvent("GOSSIP_SHOW")
			gossipFrame:SetScript("OnEvent", function()
				if GetNumGossipOptions() == 1 and GetNumGossipAvailableQuests() == 0 and GetNumGossipActiveQuests() == 0 then
					if LeaPlusLC["AutoGossipMenu"] == 1 and not IsAltKeyDown() then return end
					if LeaPlusLC["AutoGossipMenu"] == 2 and not IsControlKeyDown() then return end
					if LeaPlusLC["AutoGossipMenu"] == 3 and IsShiftKeyDown() then return end
					local void, gossipType = GetGossipOptions()
					if gossipType and gossipType == "gossip" then
						SelectGossipOption(1)
					end
				end
			end)

		end

		----------------------------------------------------------------------
		--	Hide order hall bar
		----------------------------------------------------------------------

		if LeaPlusLC["NoCommandBar"] == "On" then

			-- Function to hide the order hall bar
			local function HideCommandBar()
				OrderHallCommandBar:HookScript("OnShow", function()
					OrderHallCommandBar:Hide()
				end)
			end

			-- Run function when Blizzard addon has loaded
			if IsAddOnLoaded("Blizzard_OrderHallUI") then
				HideCommandBar()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_OrderHallUI" then
						HideCommandBar()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

		end

		----------------------------------------------------------------------
		--	Disable pet automation
		----------------------------------------------------------------------

		if LeaPlusLC["NoPetAutomation"] == "On" then

			-- Create frame to watch for combat
			local petCombat = CreateFrame("FRAME")
			local petTicker

			-- Function to dismiss pet
			local function DismissPetTimerFunc()
				if UnitAffectingCombat("player") then
					-- Player is in combat so cancel ticker and schedule it for when combat ends
					if petTicker then petTicker:Cancel() end
					petCombat:RegisterEvent("PLAYER_REGEN_ENABLED")
				else
					-- Player is not in combat so attempt to dismiss pet
					local summonedPet = C_PetJournal.GetSummonedPetGUID()
					if summonedPet then
						C_PetJournal.SummonPetByGUID(summonedPet)
					end
				end
			end

			hooksecurefunc(C_PetJournal, "SetPetLoadOutInfo", function()
				-- Cancel existing ticker if one already exists
				if petTicker then petTicker:Cancel() end
				-- Check for combat
				if UnitAffectingCombat("player") then
					-- Player is in combat so schedule ticker for when combat ends
					petCombat:RegisterEvent("PLAYER_REGEN_ENABLED")
				else
					-- Player is not in combat so run ticker now
					petTicker = C_Timer.NewTicker(0.5, DismissPetTimerFunc, 15)
				end
			end)

			-- Script for when combat ends
			petCombat:SetScript("OnEvent", function()
				-- Combat has ended so run ticker now
				petTicker = C_Timer.NewTicker(0.5, DismissPetTimerFunc, 15)
				petCombat:UnregisterEvent("PLAYER_REGEN_ENABLED")
			end)

		end

		----------------------------------------------------------------------
		--	Show pet save button
		----------------------------------------------------------------------

		if LeaPlusLC["ShowPetSaveBtn"] == "On" then

			local function MakePetSystem()

				-- Create panel
				local pFrame = CreateFrame("Frame", nil, PetJournal)
				pFrame:ClearAllPoints()
				pFrame:SetPoint("TOPLEFT", PetJournalLoadoutBorder, "TOPLEFT", 0, 40)
				pFrame:SetSize(PetJournalLoadoutBorder:GetWidth(), 24)
				pFrame:Hide()
				pFrame:SetFrameLevel(5000)

				-- Create editbox
				local petEB = CreateFrame("EditBox", nil, pFrame, "InputBoxTemplate")
				petEB:SetPoint("TOPLEFT", 4, 4)
				petEB:SetSize(PetJournalLoadoutBorder:GetWidth() - 4, 24)
				petEB:SetFontObject("GameFontNormal")
				petEB:SetTextColor(1.0, 1.0, 1.0, 1)
				petEB:SetBlinkSpeed(0)
				petEB:SetAltArrowKeyMode(true)

				-- Prevent changes
				petEB:SetScript("OnEscapePressed", function() pFrame:Hide() end)
				petEB:SetScript("OnEnterPressed", petEB.HighlightText)
				petEB:SetScript("OnMouseDown", petEB.ClearFocus)
				petEB:SetScript("OnMouseUp", petEB.HighlightText)

				-- Create tooltip
				petEB.tiptext = LeaPlusLC:Translate("This command will assign your current pet team and selected abilities.\n\nPress CTRL/C to copy the command then paste it into a macro or chat window with CTRL/V.")
				petEB:HookScript("OnEnter", function()
					GameTooltip:SetOwner(petEB, "ANCHOR_TOP")
					GameTooltip:SetText(petEB.tiptext, nil, nil, nil, nil, true)
				end)
				petEB:HookScript("OnLeave", GameTooltip_Hide)

				-- Function to get pet data and build macro
				local function RefreshPets()
					-- Get pet data
					local p1, p1a, p1b, p1c = C_PetJournal.GetPetLoadOutInfo(1)
					local p2, p2a, p2b, p2c = C_PetJournal.GetPetLoadOutInfo(2)
					local p3, p3a, p3b, p3c = C_PetJournal.GetPetLoadOutInfo(3)
					if p1 and p1a and p1b and p1c and p2 and p2a and p2b and p2c and p3 and p3a and p3b and p3c then
						-- Build macro string and show it in editbox
						local comTeam = "/ltp team "
						comTeam = comTeam .. p1 .. ',' .. p1a .. ',' .. p1b .. ',' .. p1c .. ","
						comTeam = comTeam .. p2 .. ',' .. p2a .. ',' .. p2b .. ',' .. p2c .. ","
						comTeam = comTeam .. p3 .. ',' .. p3a .. ',' .. p3b .. ',' .. p3c
						petEB:SetText(comTeam)
						petEB:HighlightText()
						petEB:SetFocus()
					end
				end

				-- Prevent changes to editbox value
				petEB:SetScript("OnChar", RefreshPets)
				petEB:SetScript("OnKeyUp", RefreshPets)

				-- Refresh pet data when slots are changed
				hooksecurefunc(C_PetJournal, "SetPetLoadOutInfo", RefreshPets)

				-- Add macro button
				local macroBtn = LeaPlusLC:CreateButton("PetMacroBtn", _G["PetJournalLoadoutPet1"], "", "TOPRIGHT", 0, 0, 32, 32, false, "")
				macroBtn:SetFrameLevel(5000)
				macroBtn:SetNormalTexture("Interface\\BUTTONS\\AdventureGuideMicrobuttonAlert")
				macroBtn:SetScript("OnClick", function()
					if C_PetJournal.GetPetLoadOutInfo(1) and C_PetJournal.GetPetLoadOutInfo(2) and C_PetJournal.GetPetLoadOutInfo(3) then
						if pFrame:IsShown() then
							-- Frame is already showing so hide it
							pFrame:Hide() 
						else
							-- Show macro panel
							pFrame:Show()
							RefreshPets()
						end
					else
						LeaPlusLC:Print("You need a battle pet team.")
					end
				end)
				macroBtn:HookScript("OnHide", function() pFrame:Hide() end)

			end

			-- Run system function when pet journal loads
			if IsAddOnLoaded("Blizzard_Collections") then
				MakePetSystem()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_Collections" then
						MakePetSystem()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

		end

		----------------------------------------------------------------------
		--	Hide crafted names
		----------------------------------------------------------------------

		if LeaPlusLC["HideCraftedNames"] == "On" then
			_G.ITEM_CREATED_BY = ""
		end

		----------------------------------------------------------------------
		--	Enable hotkey
		----------------------------------------------------------------------

		if LeaPlusLC["EnableHotkey"] == "On" then

			-- Create configuration panel
			local HotkeyPanel = LeaPlusLC:CreatePanel("Hotkey", "HotkeyPanel")

			-- Add dropdown menu (item names must match binding parameter names)
			LeaPlusLC:CreateDropDown("HotkeyMenu", "Leatrix Plus", HotkeyPanel, 146, "TOPLEFT", 16, -112, {"CTRL-SHIFT-L", "CTRL-Z", "F7", "F12"}, "")
			LeaPlusLC:CreateDropDown("MusicKeyMenu", "Music player", HotkeyPanel, 146, "TOPLEFT", 16, -172, {"CTRL-SHIFT-M", "CTRL-X", "F8", "F11"}, "")

			-- Hide panel during combat
			HotkeyPanel:RegisterEvent("PLAYER_REGEN_DISABLED")
			HotkeyPanel:SetScript("OnEvent", function() 
				LeaPlusCB["ListFrameHotkeyMenu"]:Hide()
				LeaPlusCB["ListFrameMusicKeyMenu"]:Hide()
				HotkeyPanel:Hide()
			end)

			-- Create global binding function
			local BindBtn = CreateFrame("Button", "LeaPlusGlobalBinding", LeaPlusGlobalPanel)
			BindBtn:SetScript("OnClick", function() LeaPlusLC:SlashFunc() end)

			local BindMusicBtn = CreateFrame("Button", "LeaPlusGlobalBindingMusicPlayer", LeaPlusGlobalPanel)
			BindMusicBtn:SetScript("OnClick", function()
				if LeaPlusLC["MusicPlayer"]:IsShown() then
					LeaPlusLC["MusicPlayer"]:Hide()
				else
					LeaPlusLC["MusicPlayer"]:Show()
				end
			end)

			-- Function to set hotkeys
			local function SetHotkeys()
				-- Clear all bindings bound to panel
				ClearOverrideBindings(LeaPlusGlobalPanel)
				-- Set hotkey according to dropdown choice
				local key = LeaPlusLC["HotkeyMenu"]
				SetOverrideBindingClick(LeaPlusGlobalPanel, true, LeaPlusLC["HotkeyMenuTable"][key], "LeaPlusGlobalBinding")
				local key = LeaPlusLC["MusicKeyMenu"]
				SetOverrideBindingClick(LeaPlusGlobalPanel, true, LeaPlusLC["MusicKeyMenuTable"][key], "LeaPlusGlobalBindingMusicPlayer")
			end

			-- Help button tooltip
			HotkeyPanel.h.tiptext = LeaPlusLC:Translate("Select the hotkeys that you want to use.\n\nThis panel will close automatically if you enter combat.")

			-- Back button handler
			HotkeyPanel.b:SetScript("OnClick", function()
				LeaPlusCB["ListFrameHotkeyMenu"]:Hide(); -- Hide the dropdown list
				LeaPlusCB["ListFrameMusicKeyMenu"]:Hide(); -- Hide the dropdown list
				HotkeyPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page8"]:Show()
				return
			end)

			-- Reset button handler
			HotkeyPanel.r:SetScript("OnClick", function()

				-- Reset dropdown
				LeaPlusCB["ListFrameHotkeyMenu"]:Hide(); -- Hide the dropdown list
				LeaPlusCB["ListFrameMusicKeyMenu"]:Hide(); -- Hide the dropdown list
				LeaPlusLC["HotkeyMenu"] = 1
				LeaPlusLC["MusicKeyMenu"] = 1
				SetHotkeys()

				-- Refresh configuration panel
				HotkeyPanel:Hide(); HotkeyPanel:Show()

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["HotkeyBtn"]:SetScript("OnClick", function()
				if LeaPlusLC:PlayerInCombat() then
					return
				else
					if IsShiftKeyDown() and IsControlKeyDown() then
						-- Preset profile
						LeaPlusLC["HotkeyMenu"] = 2
						LeaPlusLC["MusicKeyMenu"] = 2
						SetHotkeys()
					else
						HotkeyPanel:Show()
						LeaPlusLC:HideFrames()
					end
				end
			end)

			-- Set hotkey when dropdown menu is closed and on startup
			LeaPlusCB["ListFrameHotkeyMenu"]:HookScript("OnHide", SetHotkeys)
			LeaPlusCB["ListFrameMusicKeyMenu"]:HookScript("OnHide", SetHotkeys)
			SetHotkeys()

		end

		----------------------------------------------------------------------
		--	Faster looting
		----------------------------------------------------------------------

		if LeaPlusLC["FasterLooting"] == "On" then

			-- Time delay
			local tDelay = 0

			-- Fast loot function
			local function FastLoot()
				if GetTime() - tDelay >= 0.3 then
					tDelay = GetTime()
 					if GetCVarBool("autoLootDefault") ~= IsModifiedClick("AUTOLOOTTOGGLE") then
						for i = GetNumLootItems(), 1, -1 do
							LootSlot(i)
						end
						tDelay = GetTime()
					end
				end
			end

			-- Event frame
			local faster = CreateFrame("Frame")
			faster:RegisterEvent("LOOT_READY")
			faster:SetScript("OnEvent", FastLoot)

		end

		----------------------------------------------------------------------
		--	Disable bag automation
		----------------------------------------------------------------------

		if LeaPlusLC["NoBagAutomation"] == "On" then
			RunScript("hooksecurefunc('OpenAllBags', CloseAllBags)")
		end

		----------------------------------------------------------------------
		--	Hide level-up display
		----------------------------------------------------------------------

		if LeaPlusLC["HideLevelUpDisplay"] == "On" then
			hooksecurefunc(LevelUpDisplay, "Show", LevelUpDisplay.Hide)
		end

		----------------------------------------------------------------------
		--	Hide alerts
		----------------------------------------------------------------------

		if LeaPlusLC["NoAlerts"] == "On" then

			-- Create configuration panel
			local AlertPanel = LeaPlusLC:CreatePanel("Alerts", "AlertPanel")

			LeaPlusLC:MakeTx(AlertPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(AlertPanel, "NoAchieveAlerts", "Hide achievement alerts", 16, -92, false, "If checked, achievement alerts will not be shown.")
			LeaPlusLC:MakeCB(AlertPanel, "NoEncounterAlerts", "Hide encounter alerts", 16, -112, false, "If checked, encounter alerts will not be shown.\n\nThis includes dungeons, raids, scenarios, invasions, guild challenges and world quests.")
			LeaPlusLC:MakeCB(AlertPanel, "NoGarrisonAlerts", "Hide garrison alerts", 16, -132, false, "If checked, garrison alerts will not be shown.\n\nThis includes buildings, followers, missions and talents.")
			LeaPlusLC:MakeCB(AlertPanel, "NoLootAlerts", "Hide loot alerts", 16, -152, false, "If checked, loot alerts will not be shown.\n\nThis includes items, money, honor, resources and store purchases.")
			LeaPlusLC:MakeCB(AlertPanel, "NoProfessionAlerts", "Hide profession alerts", 16, -172, false, "If checked, profession alerts will not be shown.\n\nThis includes recipes and digsites.")

			-- Help button tooltip
			AlertPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			AlertPanel.b:SetScript("OnClick", function() 
				AlertPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page6"]:Show()
				return
			end)

			-- Reset button handler
			AlertPanel.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["NoAchieveAlerts"] = "On"
				LeaPlusLC["NoEncounterAlerts"] = "On"
				LeaPlusLC["NoGarrisonAlerts"] = "On"
				LeaPlusLC["NoLootAlerts"] = "On"
				LeaPlusLC["NoProfessionAlerts"] = "On"

				-- Refresh side panel
				AlertPanel:Hide(); AlertPanel:Show()

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["NoAlertsBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["NoAchieveAlerts"] = "On"
					LeaPlusLC["NoEncounterAlerts"] = "On"
					LeaPlusLC["NoGarrisonAlerts"] = "On"
					LeaPlusLC["NoLootAlerts"] = "On"
					LeaPlusLC["NoProfessionAlerts"] = "On"
				else
					AlertPanel:Show()
					LeaPlusLC:HideFrames()
				end
			end)

			-- Function to hide alerts
			local function HideAlert(self)
				for alertFrame in self.alertFramePool:EnumerateActive() do
					alertFrame:Hide()
				end
			end

			-- Achievements
			hooksecurefunc(AchievementAlertSystem, 				"AddAlert", function(self) if LeaPlusLC["NoAchieveAlerts"] == "On" then HideAlert(self) end end) -- AchievementAlertSystem:AddAlert(5192)
			hooksecurefunc(CriteriaAlertSystem, 				"AddAlert", function(self) if LeaPlusLC["NoAchieveAlerts"] == "On" then HideAlert(self) end end) -- CriteriaAlertSystem:AddAlert(9023, "Doing great!")

			-- Encounters
			hooksecurefunc(DungeonCompletionAlertSystem, 		"AddAlert", function(self) if LeaPlusLC["NoEncounterAlerts"] == "On" then HideAlert(self) end end) -- DungeonCompletionAlertSystem
			hooksecurefunc(GuildChallengeAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoEncounterAlerts"] == "On" then HideAlert(self) end end) -- GuildChallengeAlertSystem:AddAlert(3, 2, 5)
			hooksecurefunc(InvasionAlertSystem, 				"AddAlert", function(self) if LeaPlusLC["NoEncounterAlerts"] == "On" then HideAlert(self) end end) -- InvasionAlertSystem:AddAlert(1)
			hooksecurefunc(ScenarioAlertSystem, 				"AddAlert", function(self) if LeaPlusLC["NoEncounterAlerts"] == "On" then HideAlert(self) end end) -- ScenarioAlertSystem
			hooksecurefunc(WorldQuestCompleteAlertSystem, 		"AddAlert", function(self) if LeaPlusLC["NoEncounterAlerts"] == "On" then HideAlert(self) end end) -- WorldQuestCompleteAlertSystem:AddAlert(112)

			-- Garrisons
			hooksecurefunc(GarrisonBuildingAlertSystem, 		"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonBuildingAlertSystem:AddAlert("Barracks")
			hooksecurefunc(GarrisonFollowerAlertSystem, 		"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonFollowerAlertSystem:AddAlert(204, "Ben Stone", 90, 3, false) (C_Garrison.GetFollowerInfo)
			hooksecurefunc(GarrisonMissionAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonMissionAlertSystem:AddAlert(681) (C_Garrison.GetBasicMissionInfo)
			hooksecurefunc(GarrisonRandomMissionAlertSystem, 	"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonRandomMissionAlertSystem
			hooksecurefunc(GarrisonShipFollowerAlertSystem, 	"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonShipFollowerAlertSystem:AddAlert(592, "Test", "Transport", "GarrBuilding_Barracks_1_H", 3, 2, 1)
			hooksecurefunc(GarrisonTalentAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonTalentAlertSystem
			hooksecurefunc(GarrisonShipMissionAlertSystem, 		"AddAlert", function(self) if LeaPlusLC["NoGarrisonAlerts"] == "On" then HideAlert(self) end end) -- GarrisonShipMissionAlertSystem

			-- Loot
			hooksecurefunc(LegendaryItemAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoLootAlerts"] == "On" then HideAlert(self) end end) -- LegendaryItemAlertSystem:AddAlert("\\124cffa335ee\\124Hitem:18832:0:0:0:0:0:0:0:0:0:0\\124h[Brutality Blade]\\124h\\124r")
			hooksecurefunc(LootAlertSystem, 					"AddAlert", function(self) if LeaPlusLC["NoLootAlerts"] == "On" then HideAlert(self) end end) -- LootAlertSystem:AddAlert("\\124cffa335ee\\124Hitem:18832:0:0:0:0:0:0:0:0:0:0\\124h[Brutality Blade]\\124h\\124r", 1, 1, 1, 1, false, false, 0, false, false)
			hooksecurefunc(LootUpgradeAlertSystem, 				"AddAlert", function(self) if LeaPlusLC["NoLootAlerts"] == "On" then HideAlert(self) end end) -- LootUpgradeAlertSystem:AddAlert("\\124cffa335ee\\124Hitem:18832:0:0:0:0:0:0:0:0:0:0\\124h[Brutality Blade]\\124h\\124r", 1, 1, 1, nil, nil, false)
			hooksecurefunc(HonorAwardedAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoLootAlerts"] == "On" then HideAlert(self) end end) -- HonorAwardedAlertSystem:AddAlert(204)
			hooksecurefunc(MoneyWonAlertSystem, 				"AddAlert", function(self) if LeaPlusLC["NoLootAlerts"] == "On" then HideAlert(self) end end) -- MoneyWonAlertSystem:AddAlert(815)
			hooksecurefunc(StorePurchaseAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoLootAlerts"] == "On" then HideAlert(self) end end) -- StorePurchaseAlertSystem:AddAlert("\\124cffa335ee\\124Hitem:180545:0:0:0:0:0:0:0:0:0:0\\124h[Mystic Runesaber]\\124h\\124r", "", "", 214)

			-- Professions
			hooksecurefunc(DigsiteCompleteAlertSystem, 			"AddAlert", function(self) if LeaPlusLC["NoProfessionAlerts"] == "On" then HideAlert(self) end end) -- DigsiteCompleteAlertSystem:AddAlert(1)
			hooksecurefunc(NewRecipeLearnedAlertSystem, 		"AddAlert", function(self) if LeaPlusLC["NoProfessionAlerts"] == "On" then HideAlert(self) end end) -- NewRecipeLearnedAlertSystem:AddAlert(204)

		end

		----------------------------------------------------------------------
		--	Hide boss banner
		----------------------------------------------------------------------

		if LeaPlusLC["HideBossBanner"] == "On" then
			BossBanner:UnregisterEvent("ENCOUNTER_LOOT_RECEIVED")
			BossBanner:UnregisterEvent("BOSS_KILL")
		end

		----------------------------------------------------------------------
		--	Hide clean-up buttons
		----------------------------------------------------------------------

		if LeaPlusLC["HideCleanupBtns"] == "On" then
			-- Hide backpack clean-up button and make item search box longer
			BagItemAutoSortButton:HookScript("OnShow", BagItemAutoSortButton.Hide)
			BagItemSearchBox:SetWidth(120)

			-- Hide bank frame clean-up button and make item search box longer
			BankItemAutoSortButton:HookScript("OnShow", BankItemAutoSortButton.Hide)
			BankItemSearchBox:ClearAllPoints()
			BankItemSearchBox:SetPoint("TOPRIGHT", BankFrame, "TOPRIGHT", -27, -33)
			BankItemSearchBox:SetWidth(120)
		end

		----------------------------------------------------------------------
		--	Hide talking frame
		----------------------------------------------------------------------

		if LeaPlusLC["HideTalkingFrame"] == "On" then

			-- Function to hide the talking frame
			local function NoTalkingHeads()
				hooksecurefunc(TalkingHeadFrame, "Show", function(self)
					self:Hide()
				end)
			end

			-- Run function when Blizzard addon is loaded
			if IsAddOnLoaded("Blizzard_TalkingHeadUI") then
				NoTalkingHeads()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_TalkingHeadUI" then
						NoTalkingHeads()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

		end

		----------------------------------------------------------------------
		--	Automate quests
		----------------------------------------------------------------------

		if LeaPlusLC["AutomateQuests"] == "On" then

			-- Function to show quest dialog for popup quests in the objective tracker
			local function PopupQuestComplete()
				if GetNumAutoQuestPopUps() > 0 then
					local questId, questType = GetAutoQuestPopUp(1)
					if questType == "COMPLETE" then
						local index = GetQuestLogIndexByID(questId)
						ShowQuestComplete(index)
					end
					LeaPlusLC.PopupQuestTicker:Cancel()
				end
			end

			-- Funcion to ignore specific NPCs
			local function isNpcBlocked(actionType)
				local npcGuid = UnitGUID("target") or nil
				if npcGuid then
					local void, void, void, void, void, npcID = strsplit("-", npcGuid)
					if npcID then
						-- Ignore specific NPCs for selecting, accepting and turning-in quests (required if automation has consequences)
						if npcID == "45400" 	-- Fiona's Caravan (Eastern Plaguelands)
						or npcID == "18166" 	-- Khadgar (Allegiance to Aldor/Scryer, Shattrath)
						or npcID == "99183" 	-- Renegade Ironworker (Tanaan Jungle, repeatable quest)
						or npcID == "87391" 	-- Fate-Twister Seress (Seal quest, Stormshield)
						or npcID == "88570"		-- Fate-Twister Tiklal (Seal quest, Horde)
						or npcID == "111243" 	-- Archmage Lan'dalock (Seal quest, Dalaran)
						then
							return true
						end
						-- Ignore specific NPCs for selecting quests only (required if incomplete quest turn-ins are selected automatically)
						if actionType == "Select" then
							if npcID == "87706" 	-- Gazmolf Futzwangler (Reputation quests, Nagrand, Draenor)
							or npcID == "87393" 	-- Sallee Silverclamp (Reputation quests, Nagrand, Draenor)
							or npcID == "55402" 	-- Korgol Crushskull (Darkmoon Faire, Pit Master)
							or npcID == "15192" 	-- Anachronos (Caverns of Time)
							or npcID == "109227" 	-- Meliah Grayfeather (Tradewind Roost, Highmountain)
							then
								return true
							end
						end
					end
				end
			end

			-- Register events
			local qFrame = CreateFrame("FRAME")
			qFrame:RegisterEvent("QUEST_DETAIL")
			qFrame:RegisterEvent("QUEST_ACCEPT_CONFIRM")
			qFrame:RegisterEvent("QUEST_PROGRESS")
			qFrame:RegisterEvent("QUEST_COMPLETE")
			qFrame:RegisterEvent("QUEST_GREETING")
			qFrame:RegisterEvent("QUEST_AUTOCOMPLETE")
			qFrame:RegisterEvent("GOSSIP_SHOW")
			qFrame:SetScript("OnEvent", function(self, event)

				-- Do nothing if SHIFT key is being held
				if IsShiftKeyDown() then return end

				----------------------------------------------------------------------
				-- Accept quests automatically
				----------------------------------------------------------------------

				-- Accept quests with a quest detail window
				if event == "QUEST_DETAIL" then
					-- Don't accept blocked quests
					if isNpcBlocked("Accept") then return end
					-- Accept quest
					if QuestGetAutoAccept() then
						-- Quest has already been accepted by Wow so close the quest detail window
						CloseQuest()
					else
						-- Quest has not been accepted by Wow so accept it
						AcceptQuest()
						HideUIPanel(QuestFrame)
					end
				end

				-- Accept quests which require confirmation (such as sharing escort quests)
				if event == "QUEST_ACCEPT_CONFIRM" then
					ConfirmAcceptQuest() 
					StaticPopup_Hide("QUEST_ACCEPT")
				end

				----------------------------------------------------------------------
				-- Turn-in quests automatically
				----------------------------------------------------------------------

				-- Turn-in progression quests
				if event == "QUEST_PROGRESS" and IsQuestCompletable() then
					-- Don't complete quests for blocked NPCs
					if isNpcBlocked("Complete") then return end
					-- Complete quest
					CompleteQuest()
				end

				-- Turn in completed quests if only one reward item is being offered
				if event == "QUEST_COMPLETE" then
					-- Don't complete quests for blocked NPCs
					if isNpcBlocked("Complete") then return end
					-- Complete quest
					if GetNumQuestChoices() <= 1 then
						GetQuestReward(GetNumQuestChoices())
					end
				end

				-- Show quest dialog for quests that use the objective tracker (it will be completed automatically)
				if event == "QUEST_AUTOCOMPLETE" then
					LeaPlusLC.PopupQuestTicker = C_Timer.NewTicker(0.25, PopupQuestComplete, 20)
				end

				----------------------------------------------------------------------
				-- Select quests automatically
				----------------------------------------------------------------------

				if event == "GOSSIP_SHOW" or event == "QUEST_GREETING" then

					-- Select quests
					if UnitExists("npc") or QuestFrameGreetingPanel:IsShown() or GossipFrameGreetingPanel:IsShown() then

						-- Don't select quests for blocked NPCs
						if isNpcBlocked("Select") then return end

						-- Select quests
						if event == "QUEST_GREETING" then
							-- Quest greeting
							local availableCount = GetNumAvailableQuests() + GetNumActiveQuests()
							if availableCount >= 1 then
								for i = 1, availableCount do
									if _G["QuestTitleButton" .. i].isActive == 0 then
										-- Select available quests
										SelectAvailableQuest(_G["QuestTitleButton" .. i]:GetID())
									else
										-- Select completed quests
										local void, isComplete = GetActiveTitle(i)
										if isComplete then
											SelectActiveQuest(_G["QuestTitleButton" .. i]:GetID())
										end
									end
								end
							end
						else
							-- Gossip frame
							local availableCount = GetNumGossipAvailableQuests() + GetNumGossipActiveQuests()
							if availableCount >= 1 then
								for i = 1, availableCount do
									if _G["GossipTitleButton" .. i].type == "Available" then
										-- Select available quests
										SelectGossipAvailableQuest(i)
									else
										-- Select completed quests
										local isComplete = select(i * 6 - 5 + 3, GetGossipActiveQuests()) -- 4th argument of 6 argument line
										if isComplete then
											if _G["GossipTitleButton" .. i].type == "Active" then
												SelectGossipActiveQuest(_G["GossipTitleButton" .. i]:GetID())
											end
										end
									end
								end
							end
						end
					end
				end

			end)

		end

		----------------------------------------------------------------------
		-- Hide bogyguard gossip
		----------------------------------------------------------------------

		if LeaPlusLC["HideBodyguard"] == "On" then
			local gFrame = CreateFrame("FRAME")
			gFrame:RegisterEvent("GOSSIP_SHOW")
			gFrame:SetScript("OnEvent", function()
				-- Do nothing if shift is being held
				if IsShiftKeyDown() then return end
				-- Traverse faction IDs for known bodyguards (http://www.wowhead.com/factions/warlords-of-draenor/barracks-bodyguards)
				local id = GetFriendshipReputation();
				if id then
					if id == 1733 -- Delvar Ironfist
					or id == 1736 -- Tormmok
					or id == 1737 -- Talonpriest Ishaal
					or id == 1738 -- Defender Illona
					or id == 1739 -- Vivianne
					or id == 1740 -- Aeda Brightdawn
					or id == 1741 -- Leorajh
					then
						-- Close gossip window if it's for a cooperating (active) bodyguard
						if UnitCanCooperate("target", "player") then
							CloseGossip()
						end
					end
				end
			end)
		end

		----------------------------------------------------------------------
		--	Disable map emote
		----------------------------------------------------------------------

		if LeaPlusLC["NoMapEmote"] == "On" then
			hooksecurefunc("DoEmote", function(emote)
				if emote == "READ" and WorldMapFrame:IsShown() then
					CancelEmote()
				end
			end)
		end

		----------------------------------------------------------------------
		--	Skip cinematics
		----------------------------------------------------------------------

		if LeaPlusLC["SkipCinematics"] == "On" then

			-- Skip cinematics
			CinematicFrame:HookScript("OnShow", function(self)
				-- Do nothing if shift key is being held
				if IsShiftKeyDown() then return	end
				-- Click the close dialog confirmation button to stop the cinematic
				if self.closeDialog and CinematicFrameCloseDialogConfirmButton then
					CinematicFrameCloseDialogConfirmButton:Click()
					-- Show confirmation message
					LeaPlusLC:Print("A cinematic skip was attempted.")
				end
			end)

			-- Skip movies
			hooksecurefunc("MovieFrame_PlayMovie", function(self)
				-- Do nothing if shift key is being held
				if IsShiftKeyDown() then return	end
				-- Click the close diaglog confirmation button to stop the movie
				if self.CloseDialog and self.CloseDialog.ConfirmButton then
					self.CloseDialog.ConfirmButton:Click()
					-- Show confirmation message
					LeaPlusLC:Print("A movie skip was attempted.")
				end
			end)

		end

		----------------------------------------------------------------------
		--	Sort game options addon list
		----------------------------------------------------------------------

		if LeaPlusLC["CharAddonList"] == "On" then
			-- Set the addon list to character by default
			if AddonCharacterDropDown and AddonCharacterDropDown.selectedValue then
				AddonCharacterDropDown.selectedValue = UnitName("player");
				AddonCharacterDropDownText:SetText(UnitName("player"))
			end
		end

		----------------------------------------------------------------------
		--	Sell junk automatically
		----------------------------------------------------------------------

		if LeaPlusLC["AutoSellJunk"] == "On" then

			-- Create configuration panel
			local JunkPanel = LeaPlusLC:CreatePanel("Sell Junk Automatically", "JunkPanel")

			LeaPlusLC:MakeTx(JunkPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(JunkPanel, "SellJunkSummary", "Show a summary of items sold", 16, -92, false, "If checked, a brief summary will be shown in chat when items are sold automatically.")

			-- Help button tooltip
			JunkPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			JunkPanel.b:SetScript("OnClick", function() 
				JunkPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page1"]:Show()
				return
			end)

			-- Reset button handler
			JunkPanel.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["SellJunkSummary"] = "On"

				-- Refresh side panel
				JunkPanel:Hide(); JunkPanel:Show()

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["SellJunkBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["SellJunkSummary"] = "On"
				else
					JunkPanel:Show()
					LeaPlusLC:HideFrames()
				end
			end)

			-- Create sell junk banner
			local StartMsg = CreateFrame("FRAME", nil, MerchantFrame)
			StartMsg:ClearAllPoints()
			StartMsg:SetPoint("BOTTOMLEFT", 4, 4)
			StartMsg:SetSize(160, 22)
			StartMsg:SetToplevel(true)
			StartMsg:Hide()

			StartMsg.s = StartMsg:CreateTexture(nil, "BACKGROUND")
			StartMsg.s:SetAllPoints()
			StartMsg.s:SetColorTexture(0.1, 0.1, 0.1, 1.0)

			StartMsg.f = StartMsg:CreateFontString(nil, "ARTWORK", "GameFontNormalLarge") 
			StartMsg.f:SetAllPoints();
			StartMsg.f:SetText(LeaPlusLC:Translate("SELLING JUNK"))

			-- Declarations
			local IterationCount, totalPrice = 500, 0
			local SellJunkFrame = CreateFrame("FRAME")
			local SellJunkTicker, mBagID, mBagSlot

			-- Function to stop selling
			local function StopSelling()
				if SellJunkTicker then SellJunkTicker:Cancel() end
				StartMsg:Hide()
				SellJunkFrame:UnregisterEvent("ITEM_LOCKED")
				SellJunkFrame:UnregisterEvent("ITEM_UNLOCKED")
			end

			-- Vendor function
			local function SellJunkFunc()

				-- Variables
				local SoldCount, Rarity, ItemPrice = 0, 0, 0
				local CurrentItemLink, void

				-- Traverse bags and sell grey items
				for BagID = 0, 4 do
					for BagSlot = 1, GetContainerNumSlots(BagID) do
						CurrentItemLink = GetContainerItemLink(BagID, BagSlot)
						if CurrentItemLink then
							void, void, Rarity, void, void, void, void, void, void, void, ItemPrice = GetItemInfo(CurrentItemLink)
							local void, itemCount = GetContainerItemInfo(BagID, BagSlot)
							if Rarity == 0 and ItemPrice ~= 0 then
								SoldCount = SoldCount + 1
								if MerchantFrame:IsShown() then
									-- If merchant frame is open, vendor the item
									UseContainerItem(BagID, BagSlot)
									-- Perform actions on first iteration
									if SellJunkTicker._remainingIterations == IterationCount then
										-- Calculate total price
										totalPrice = totalPrice + (ItemPrice * itemCount)
										-- Store first sold bag slot for analysis
										if SoldCount == 1 then
											mBagID, mBagSlot = BagID, BagSlot
										end
									end
								else
									-- If merchant frame is not open, stop selling
									StopSelling()
									return
								end
							end
						end
					end
				end

				-- Stop selling if no items were sold for this iteration or iteration limit was reached
				if SoldCount == 0 or SellJunkTicker and SellJunkTicker._remainingIterations == 1 then 
					StopSelling() 
					if LeaPlusLC["SellJunkSummary"] == "On" and totalPrice > 0 then 
						LeaPlusLC:Print(LeaPlusLC:Translate("Sold junk for") .. " " .. GetCoinText(totalPrice) .. ".")
					end
				end

			end

			-- Run sell function when merchant frame is shown
			SellJunkFrame:RegisterEvent("MERCHANT_SHOW");
			SellJunkFrame:RegisterEvent("MERCHANT_CLOSED");
			SellJunkFrame:SetScript("OnEvent", function(self, event)
				if event == "MERCHANT_SHOW" then
					-- Reset variables
					totalPrice, mBagID, mBagSlot = 0, -1, -1
					-- Do nothing if shift key is held down
					if IsShiftKeyDown() then return end
					-- Sell grey items using ticker (ends when all grey items are sold or iteration count reached)
					SellJunkTicker = C_Timer.NewTicker(0.2, SellJunkFunc, IterationCount)
					SellJunkFrame:RegisterEvent("ITEM_LOCKED")
					SellJunkFrame:RegisterEvent("ITEM_UNLOCKED")
				elseif event == "ITEM_LOCKED" then
					StartMsg:Show()
					SellJunkFrame:UnregisterEvent("ITEM_LOCKED")
				elseif event == "ITEM_UNLOCKED" then
					SellJunkFrame:UnregisterEvent("ITEM_UNLOCKED")
					-- Check whether vendor refuses to buy items
					if mBagID and mBagSlot and mBagID ~= -1 and mBagSlot ~= -1 then
						local texture, count, locked = GetContainerItemInfo(mBagID, mBagSlot)
						if count and not locked then
							-- Item has been unlocked but still not sold so stop selling
							StopSelling()
						end
					end
				elseif event == "MERCHANT_CLOSED" then
					-- If merchant frame is closed, stop selling
					StopSelling()
				end
			end)

		end

		----------------------------------------------------------------------
		--	Repair automatically
		----------------------------------------------------------------------

		if LeaPlusLC["AutoRepairOwnFunds"] == "On" then

			-- Create configuration panel
			local RepairPanel = LeaPlusLC:CreatePanel("Repair Automatically", "RepairPanel")

			LeaPlusLC:MakeTx(RepairPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(RepairPanel, "AutoRepairGuildFunds", "Repair using guild funds if available", 16, -92, false, "If checked, repair costs will be taken from guild funds for characters that are guilded and have permission to repair.")
			LeaPlusLC:MakeCB(RepairPanel, "AutoRepairSummary", "Show a brief summary of repair costs", 16, -112, false, "If checked, a brief summary of repair costs will be shown in chat when an automated repair is attempted.")

			-- Help button tooltip
			RepairPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			RepairPanel.b:SetScript("OnClick", function() 
				RepairPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page1"]:Show();
				return
			end)

			-- Reset button handler
			RepairPanel.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["AutoRepairGuildFunds"] = "On"
				LeaPlusLC["AutoRepairSummary"] = "On"

				-- Refresh side panel
				RepairPanel:Hide(); RepairPanel:Show();

			end)

			-- Show side panal when options panel button is clicked
			LeaPlusCB["RepairBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["AutoRepairGuildFunds"] = "On"
					LeaPlusLC["AutoRepairSummary"] = "On"
				else
					RepairPanel:Show();
					LeaPlusLC:HideFrames();
				end
			end);

			-- Repair when suitable merchant frame is shown
			local function RepairFunc()
				if IsShiftKeyDown() then return end
				if CanMerchantRepair() then -- If merchant is capable of repair
					-- Process repair
					local RepairCost, CanRepair = GetRepairAllCost()
					if CanRepair then -- If merchant is offering repair
						if LeaPlusLC["AutoRepairGuildFunds"] == "On" and IsInGuild() then
							-- Guilded character and guild repair option is enabled
							if CanGuildBankRepair() then
								-- Character has permission to repair so try guild funds but fallback on character funds (if daily gold limit is reached)
								RepairAllItems(1)
								RepairAllItems()
							else
								-- Character does not have permission to repair so use character funds
								RepairAllItems()
							end
						else
							-- Unguilded character or guild repair option is disabled
							RepairAllItems()
						end
						-- Show cost summary
						if LeaPlusLC["AutoRepairSummary"] == "On" then
							LeaPlusLC:Print(LeaPlusLC:Translate("Repaired for") .. " " .. GetCoinText(RepairCost) .. ".")
						end
					end
				end
			end

			-- Run repair function when merchant frame is shown
			local RepairFrame = CreateFrame("FRAME")
			RepairFrame:RegisterEvent("MERCHANT_SHOW");
			RepairFrame:SetScript("OnEvent", RepairFunc)

		end

		----------------------------------------------------------------------
		-- Hide the combat log
		----------------------------------------------------------------------

		if LeaPlusLC["NoCombatLogTab"] == "On" then
			-- Ensure combat log is docked
			if ChatFrame2.isDocked then
				-- Set combat log attributes when chat windows are updated
				LpEvt:RegisterEvent("UPDATE_CHAT_WINDOWS")
				-- Set combat log tab placement when tabs are assigned by the client
				hooksecurefunc("FCF_SetTabPosition", function()
					ChatFrame2Tab:SetPoint("BOTTOMLEFT", ChatFrame1Tab, "BOTTOMRIGHT", 0, 0)
				end)
			else
				-- If combat log is undocked, do nothing but show warning
				LeaPlusLC:Print("Combat log cannot be hidden while undocked.")
			end
		end

		----------------------------------------------------------------------
		--	Show player chain
		----------------------------------------------------------------------

		if LeaPlusLC["ShowPlayerChain"] == "On" then

			-- Create configuration panel
			local ChainPanel = LeaPlusLC:CreatePanel("Player Chain", "ChainPanel")

			-- Add dropdown menu
			LeaPlusLC:CreateDropDown("PlayerChainMenu", "Chain style", ChainPanel, 146, "TOPLEFT", 16, -112, {LeaPlusLC:Translate("RARE"), LeaPlusLC:Translate("ELITE"), LeaPlusLC:Translate("RARE ELITE")}, "")

			-- Set chain style
			local function SetChainStyle()
				-- Get dropdown menu value
				local chain = LeaPlusLC["PlayerChainMenu"] -- Numeric value
				-- Set chain style according to value
				if chain == 1 then -- Rare
					PlayerFrameTexture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-Rare.blp");
				elseif chain == 2 then -- Elite
					PlayerFrameTexture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-Elite.blp");
				elseif chain == 3 then -- Rare Elite
					PlayerFrameTexture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-Rare-Elite.blp");
				end
			end

			-- Set style on startup
			SetChainStyle()

			-- Set style when a drop menu is selected (procs when the list is hidden)
			LeaPlusCB["ListFramePlayerChainMenu"]:HookScript("OnHide", SetChainStyle)

			-- Help button tooltip
			ChainPanel.h.tiptext = LeaPlusLC:Translate("Choose a chain style for the player frame from the dropdown menu.")

			-- Back button handler
			ChainPanel.b:SetScript("OnClick", function() 
				LeaPlusCB["ListFramePlayerChainMenu"]:Hide(); -- Hide the dropdown list
				ChainPanel:Hide();
				LeaPlusLC["PageF"]:Show();
				LeaPlusLC["Page6"]:Show();
				return
			end) 

			-- Reset button handler
			ChainPanel.r:SetScript("OnClick", function()
				LeaPlusCB["ListFramePlayerChainMenu"]:Hide(); -- Hide the dropdown list
				LeaPlusLC["PlayerChainMenu"] = 2
				ChainPanel:Hide(); ChainPanel:Show();
				SetChainStyle()
			end)

			-- Show the panel when the configuration button is clicked
			LeaPlusCB["ModPlayerChain"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					LeaPlusLC["PlayerChainMenu"] = 3;
					SetChainStyle();
				else
					LeaPlusLC:HideFrames();
					ChainPanel:Show();
				end
			end)

		end

		----------------------------------------------------------------------
		-- Show raid frame toggle button
		----------------------------------------------------------------------

		if LeaPlusLC["ShowRaidToggle"] == "On" then

			-- Check to make sure raid toggle button exists
			if CompactRaidFrameManagerDisplayFrameHiddenModeToggle then

				-- Create a border for the button
				CompactRaidFrameManagerDisplayFrameHiddenModeToggle:SetBackdrop({ 
					edgeFile = "Interface/Tooltips/UI-Tooltip-Border",
					tile = false, tileSize = 0, edgeSize = 16,
					insets = { left = 0, right = 0, top = 0, bottom = 0 }})

				-- Move the button (function runs after PLAYER_ENTERING_WORLD and PARTY_LEADER_CHANGED)
				hooksecurefunc("CompactRaidFrameManager_UpdateOptionsFlowContainer", function()
					if CompactRaidFrameManager and CompactRaidFrameManagerDisplayFrameHiddenModeToggle then
						local void, void, void, void, y = CompactRaidFrameManager:GetPoint()
						CompactRaidFrameManagerDisplayFrameHiddenModeToggle:SetWidth(40)
						CompactRaidFrameManagerDisplayFrameHiddenModeToggle:ClearAllPoints()
						CompactRaidFrameManagerDisplayFrameHiddenModeToggle:SetPoint("TOPLEFT", UIParent, "TOPLEFT", 0, y + 22)
						CompactRaidFrameManagerDisplayFrameHiddenModeToggle:SetParent(UIParent)
					end
				end)

			end

		end

		----------------------------------------------------------------------
		-- Hide hit indicators (portrait text)
		----------------------------------------------------------------------

		if LeaPlusLC["NoHitIndicators"] == "On" then
			hooksecurefunc(PlayerHitIndicator, "Show", PlayerHitIndicator.Hide)
			hooksecurefunc(PetHitIndicator, "Show", PetHitIndicator.Hide)
		end

		----------------------------------------------------------------------
		-- Class colored frames
		----------------------------------------------------------------------

		if LeaPlusLC["ClassColFrames"] == "On" then

			-- Create background frame for player frame
			local PlayFN = CreateFrame("FRAME", nil, PlayerFrame)
			PlayFN:Hide()

			PlayFN:SetWidth(TargetFrameNameBackground:GetWidth())
			PlayFN:SetHeight(TargetFrameNameBackground:GetHeight())

			local void, void, void, x, y = TargetFrameNameBackground:GetPoint()
			PlayFN:SetPoint("TOPLEFT", PlayerFrame, "TOPLEFT", -x, y)

			PlayFN.t = PlayFN:CreateTexture(nil, "BORDER")
			PlayFN.t:SetAllPoints()
			PlayFN.t:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-LevelBackground")

			local c = LeaPlusLC["RaidColors"][select(2, UnitClass("player"))]
			PlayFN.t:SetVertexColor(c.r, c.g, c.b)

			-- Create color function for target and focus frames
			local function TargetFrameCol()
				if UnitIsPlayer("target") then
					local c = LeaPlusLC["RaidColors"][select(2, UnitClass("target"))]
					TargetFrameNameBackground:SetVertexColor(c.r, c.g, c.b)
				end
		
				if UnitIsPlayer("focus") then
					local c = LeaPlusLC["RaidColors"][select(2, UnitClass("focus"))]
					FocusFrameNameBackground:SetVertexColor(c.r, c.g, c.b)
				end
			end

			local ColTar = CreateFrame("FRAME")
			ColTar:SetScript("OnEvent", TargetFrameCol) -- Events are registered if target option is enabled

			-- Refresh color if focus frame size changes
			hooksecurefunc("FocusFrame_SetSmallSize", function()
				if LeaPlusLC["ClassColTarget"] == "On" then
					TargetFrameCol()
				end
			end)

			-- Create configuration panel
			local ClassFrame = LeaPlusLC:CreatePanel("Class Colored Frames", "ClassFrame")

			LeaPlusLC:MakeTx(ClassFrame, "Settings", 16, -72)
			LeaPlusLC:MakeCB(ClassFrame, "ClassColPlayer", "Show player frame in class color", 16, -92, false, "If checked, the player frame background will be shown in class color.")
			LeaPlusLC:MakeCB(ClassFrame, "ClassColTarget", "Show target frame and focus frame in class color", 16, -112, false, "If checked, the target frame background and focus frame background will be shown in class color.")

			-- Help button tooltip
			ClassFrame.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			ClassFrame.b:SetScript("OnClick", function() 
				ClassFrame:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page6"]:Show();
				return
			end)

			-- Function to set class colored frames
			local function SetClassColFrames()
				-- Player frame
				if LeaPlusLC["ClassColPlayer"] == "On" then
					PlayFN:Show()
				else
					PlayFN:Hide()
				end
				-- Target and focus frames
				if LeaPlusLC["ClassColTarget"] == "On" then
					ColTar:RegisterEvent("GROUP_ROSTER_UPDATE")
					ColTar:RegisterEvent("PLAYER_TARGET_CHANGED")
					ColTar:RegisterEvent("PLAYER_FOCUS_CHANGED")
					ColTar:RegisterEvent("UNIT_FACTION")
					TargetFrameCol()
				else
					ColTar:UnregisterAllEvents()
					TargetFrame_CheckFaction(TargetFrame) -- Reset target frame colors
					TargetFrame_CheckFaction(FocusFrame) -- Reset focus frame colors
				end
			end

			-- Run function when options are clicked and on startup
			LeaPlusCB["ClassColPlayer"]:HookScript("OnClick", SetClassColFrames)
			LeaPlusCB["ClassColTarget"]:HookScript("OnClick", SetClassColFrames)
			SetClassColFrames()

			-- Reset button handler
			ClassFrame.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["ClassColPlayer"] = "On"
				LeaPlusLC["ClassColTarget"] = "On"

				-- Update colors and refresh configuration panel
				SetClassColFrames()
				ClassFrame:Hide(); ClassFrame:Show();

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["ClassFramesBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["ClassColPlayer"] = "On"
					LeaPlusLC["ClassColTarget"] = "On"
					SetClassColFrames()
				else
					ClassFrame:Show();
					LeaPlusLC:HideFrames();
				end
			end);

		end

		----------------------------------------------------------------------
		-- Coordinates
		----------------------------------------------------------------------

		if LeaPlusLC["StaticCoordsEn"] == "On" then

			-- Create movable coordinates frame
			local StaticCoordBox = CreateFrame("Frame", nil, UIParent)
			LeaPlusLC["StaticCoordBox"] = StaticCoordBox
			StaticCoordBox:Hide(); StaticCoordBox:EnableMouse(true);
			StaticCoordBox:SetClampedToScreen(true);
			StaticCoordBox:ClearAllPoints(); StaticCoordBox:SetPoint(LeaPlusLC["CoordsA"], UIParent, LeaPlusLC["CoordsR"], LeaPlusLC["CoordsX"], LeaPlusLC["CoordsY"]);
			StaticCoordBox:SetMovable(true); StaticCoordBox:RegisterForDrag("LeftButton")
			StaticCoordBox:SetScript("OnDragStart", StaticCoordBox.StartMoving)
			StaticCoordBox:SetScript("OnDragStop", function ()
				StaticCoordBox:StopMovingOrSizing();
				StaticCoordBox:SetUserPlaced(false);
				LeaPlusLC["CoordsA"], void, LeaPlusLC["CoordsR"], LeaPlusLC["CoordsX"], LeaPlusLC["CoordsY"] = StaticCoordBox:GetPoint();
			end)
			StaticCoordBox.t = StaticCoordBox:CreateTexture(nil, "BACKGROUND"); StaticCoordBox.t:SetAllPoints(); StaticCoordBox.t:SetColorTexture(0.05, 0.05, 0.05, 0.8)

			local Splay = CreateFrame("FRAME", nil, StaticCoordBox)
			Splay:SetWidth(44); Splay:SetHeight(16);
			Splay:SetPoint("TOPLEFT", 2, -2)

			Splay.x = Splay:CreateFontString(nil, "ARTWORK", "GameFontNormalLarge") 
			Splay.x:SetAllPoints(); Splay.x:SetJustifyH"LEFT";

			Splay.y = Splay:CreateFontString(nil, "ARTWORK", "GameFontNormalLarge") 
			Splay.y:SetPoint("LEFT", Splay.x, "RIGHT", 10, 0);
			Splay.y:SetJustifyH"LEFT";

			local stimer = 0; -- Internal timer for OnUpdate
			local vplayx, vplayy -- Raw coordinates

			local function ShowStaticCoordinates(self, elapsed)
				stimer = stimer + elapsed;
				if stimer > 0.2 then
					vplayx, vplayy = GetPlayerMapPosition("player")
					if vplayx and vplayy and vplayx > 0 and vplayy > 0 then
						Splay.x:SetFormattedText("%0.1f", (floor(vplayx * 1000 + 0.5)) / 10)
						Splay.y:SetFormattedText("%0.1f", (floor(vplayy * 1000 + 0.5)) / 10)
					else
						Splay.x:SetText("00.0");
						Splay.y:SetText("00.0");
					end
					stimer = 0;
				end
			end

			-- Calculate coordinates (only runs if coordinates are showing)
			StaticCoordBox:SetScript("OnUpdate", ShowStaticCoordinates)

			-- Create side panel
			local StaticPanel = LeaPlusLC:CreatePanel("Coordinates", "StaticPanel")

			LeaPlusLC:MakeTx(StaticPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(StaticPanel, "StaticCoords", "Show the coordinates frame", 16, -92, false, "If checked, the coordinates frame will be shown.\n\nIf you have the minimap button enabled, you can hold down SHIFT and right-click it to toggle this setting at any time.\n\nIf unchecked, the coordinates frame will be disabled and no CPU power will be allocated to updating it.")
			LeaPlusLC:MakeCB(StaticPanel, "StaticCoordsBack", "Darken the frame background", 16, -112, false, "If checked, a dark background will be used for the frame.")
			LeaPlusLC:MakeCB(StaticPanel, "StaticCoordsTop", "Raise the frame strata level", 16, -132, false, "If checked, the frame strata level will be set to HIGH allowing it to show on top of most frames.\n\nIf unchecked, the strata level will be set to MEDIUM.")
			LeaPlusLC:MakeCB(StaticPanel, "StaticCoordsLock", "Lock the frame and make it non-interactive", 16, -152, false, "If checked, the frame will be locked and you will not be able to move it.\n\nEnabling this option will make the frame non-interactive, meaning you will be able to click through it as if it wasn't there.\n\nThis is useful if you are showing the coordinates in a space where you would normally click (such as the game world or minimap).")

			LeaPlusLC:MakeTx(StaticPanel, "Scale", 356, -72)
			LeaPlusLC:MakeSL(StaticPanel, "StaticCoordsScale", "", 0.9, 2.0, 0.1, 356, -92, "%.1f")

			-- Function to show coordinates based on options (run by many handlers)
			local function RefreshStaticCoords()
				-- Show or hide coordinates
				if LeaPlusLC["StaticCoords"] == "On" then
					-- Show coordinates
					StaticCoordBox:Show();
				else
					StaticCoordBox:Hide();
				end
				-- Show or hide the background
				if LeaPlusLC["StaticCoordsBack"] == "On" then
					StaticCoordBox.t:Show();
				else
					StaticCoordBox.t:Hide();
				end
				-- Set scale of coordinates
				local scale = LeaPlusLC["StaticCoordsScale"]
				StaticCoordBox:SetWidth(96 * scale);
				StaticCoordBox:SetHeight(18 * scale);
				Splay:SetScale(scale);
				-- Set locked status
				if LeaPlusLC["StaticCoordsLock"] == "On" then
					StaticCoordBox:SetScript("OnDragStart", nil);
					StaticCoordBox:EnableMouse(false);
				else
					StaticCoordBox:SetScript("OnDragStart", StaticCoordBox.StartMoving)
					StaticCoordBox:EnableMouse(true);
				end
				-- Show on top
				if LeaPlusLC["StaticCoordsTop"] == "On" then
					StaticCoordBox:SetFrameStrata("HIGH")
				else
					StaticCoordBox:SetFrameStrata("MEDIUM")
				end
				-- Show coordinates
				if LeaPlusLC["StaticCoords"] == "On" then
					StaticCoordBox:Show();
				else
					StaticCoordBox:Hide();
				end
				-- Set slider formatted text
				LeaPlusCB["StaticCoordsScale"].f:SetFormattedText("%.0f%%", LeaPlusLC["StaticCoordsScale"] * 100)
			end
		
			-- Assign file level scope to local function (so that the minimap button can run it)
			LeaPlusLC.RefreshStaticCoords = RefreshStaticCoords

			-- Refresh map when controls are clicked
			LeaPlusCB["StaticCoords"]:HookScript("OnClick", RefreshStaticCoords)
			LeaPlusCB["StaticCoordsBack"]:HookScript("OnClick", RefreshStaticCoords)
			LeaPlusCB["StaticCoordsScale"]:HookScript("OnValueChanged", RefreshStaticCoords)
			LeaPlusCB["StaticCoordsLock"]:HookScript("OnClick", RefreshStaticCoords)
			LeaPlusCB["StaticCoordsTop"]:HookScript("OnClick", RefreshStaticCoords)

			-- Hide coordinates frame when battle pet frame is shown
			hooksecurefunc("PetBattleFrame_Display", function() 
				if LeaPlusLC["StaticCoords"] == "On" then
					LeaPlusLC["StaticCoordBox"]:Hide();
				end
			end)

			-- Refresh coordinates when battle frame is hidden
			hooksecurefunc("PetBattleFrame_Remove", function() 
				if LeaPlusLC["StaticCoords"] == "On" then
					RefreshStaticCoords();
				end
			end)

			-- Hide coordinates frame when world map is shown
			local function HideWithMap()
				if LeaPlusLC["StaticCoords"] == "On" then
					if WorldMapFrame:IsShown() then
						StaticCoordBox:Hide();
					else
						StaticCoordBox:Show();
					end
				end
			end

			WorldMapFrame:HookScript("OnShow", HideWithMap);
			WorldMapFrame:HookScript("OnHide", HideWithMap);

			-- Hide coordinates if they are showing when world map is shown
			StaticCoordBox:HookScript("OnShow", function()
				if WorldMapFrame:IsShown() then
					StaticCoordBox:Hide()
				end
			end)

			-- Load settings on startup
			RefreshStaticCoords();

			-- Help button tooltip
			StaticPanel.h.tiptext = LeaPlusLC:Translate("Drag the coordinates frame to position it.\n\nScale and style the frame using the settings on this page.")

			-- Back button handler
			StaticPanel.b:SetScript("OnClick", function() 
				StaticPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page5"]:Show();
				return
			end) 

			-- Reset button handler
			StaticPanel.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["StaticCoords"] = "On"
				LeaPlusLC["StaticCoordsBack"] = "Off"
				LeaPlusLC["StaticCoordsScale"] = 1.0;
				LeaPlusLC["StaticCoordsLock"] = "Off";
				LeaPlusLC["StaticCoordsTop"] = "Off";
				RefreshStaticCoords();

				-- Reset coordinates frame location
				LeaPlusLC["CoordsA"], LeaPlusLC["CoordsR"], LeaPlusLC["CoordsX"], LeaPlusLC["CoordsY"] = "CENTER", "CENTER", 0, 200
				StaticCoordBox:ClearAllPoints();
				StaticCoordBox:SetPoint(LeaPlusLC["CoordsA"], UIParent, LeaPlusLC["CoordsR"], LeaPlusLC["CoordsX"], LeaPlusLC["CoordsY"]);

				-- Refresh side panel
				StaticPanel:Hide(); StaticPanel:Show();

			end)

			-- Show side panal when options panel button is clicked
			LeaPlusCB["ModStaticCoordsBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["StaticCoords"] = "On"
					LeaPlusLC["StaticCoordsBack"] = "Off"
					LeaPlusLC["StaticCoordsScale"] = 2.0;
					LeaPlusLC["StaticCoordsLock"] = "Off";
					LeaPlusLC["StaticCoordsTop"] = "Off";
					LeaPlusLC["CoordsA"], LeaPlusLC["CoordsR"], LeaPlusLC["CoordsX"], LeaPlusLC["CoordsY"] = "BOTTOMRIGHT", "BOTTOMRIGHT", -300, 130
					StaticCoordBox:ClearAllPoints();
					StaticCoordBox:SetPoint(LeaPlusLC["CoordsA"], UIParent, LeaPlusLC["CoordsR"], LeaPlusLC["CoordsX"], LeaPlusLC["CoordsY"]);
					RefreshStaticCoords();
				else
					StaticPanel:Show();
					LeaPlusLC:HideFrames();
				end
			end);

			-- Refresh map when zone changes if coordinates are showing (so that coordinates update to new zone)
			local function UpdateMapZone()
				if LeaPlusLC["StaticCoords"] == "On" then
					if StaticCoordBox:IsShown() then
						SetMapToCurrentZone();
					end
				end
			end

			StaticCoordBox:RegisterEvent("ZONE_CHANGED_NEW_AREA");
			StaticCoordBox:RegisterEvent("ZONE_CHANGED");
			StaticCoordBox:RegisterEvent("ZONE_CHANGED_INDOORS");
			StaticCoordBox:RegisterEvent("NEW_WMO_CHUNK");
			StaticCoordBox:SetScript("OnEvent", UpdateMapZone);	
			StaticCoordBox:SetScript("OnShow", UpdateMapZone);	

		end

		----------------------------------------------------------------------
		-- Minimap customisation
		----------------------------------------------------------------------

		if LeaPlusLC["MinimapMod"] == "On" then

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			-- Create minimap modification side panel
			local SideMinimap = LeaPlusLC:CreatePanel("Minimap", "SideMinimap")

			-- Hide panel during combat
			SideMinimap:RegisterEvent("PLAYER_REGEN_DISABLED")
			SideMinimap:SetScript("OnEvent", SideMinimap.Hide)

			-- Add checkboxes
			LeaPlusLC:MakeTx(SideMinimap, "Settings", 16, -72)
			LeaPlusLC:MakeCB(SideMinimap, "MergeTrackBtn", "Merge tracking button with calendar button", 16, -92, false, "If checked, the minimap tracking button will be merged with the calendar button to save space.\n\nThe new tracking button will be moved to the space normally occupied by the calendar button.\n\nYou will be able to left-click the tracking button to show the tracking menu and right-click it to show the calendar.")
			LeaPlusLC:MakeCB(SideMinimap, "HideMinimapZone", "Hide zone information above the minimap", 16, -112, false, "If checked, the zone information shown above the minimap, as well as the world map button, will be hidden.\n\nThe tooltip for the tracking button will show zone text information instead.\n\nTo show the world map, press the map bind key (M by default).")
			LeaPlusLC:MakeCB(SideMinimap, "HideMinimapTime", "Hide the clock below the minimap", 16, -132, false, "If checked, the clock will be hidden.")
			LeaPlusLC:MakeCB(SideMinimap, "MinimapMouseZoom", "Use the mousewheel to zoom in and out", 16, -152, false, "If checked, you will be able to use the mousewheel to zoom in and out of the minimap.  The zoom in/out buttons will be hidden.")

			-- Add slider control
			LeaPlusLC:MakeTx(SideMinimap, "Minimap scale", 356, -72)
			LeaPlusLC:MakeSL(SideMinimap, "MinimapScale", "", 0.5, 2, 0.1, 356, -92, "%.2f")

			----------------------------------------------------------------------
			-- Merge buttons
			----------------------------------------------------------------------

			-- Function to merge buttons
			local function SetMiniMerge()
				if LeaPlusLC["MergeTrackBtn"] == "On" then
					-- Hide calendar button
					GameTimeFrame:Hide();
					-- Move the tracking button to the calendar button space
					MiniMapTracking:ClearAllPoints();
					MiniMapTracking:SetAllPoints(GameTimeFrame);
					-- Right-clicking the tracking button shows the calendar 
					MiniMapTrackingButton:SetScript("OnMouseDown", function(self, btn)
						if btn == "RightButton" then GameTimeFrame:Click();	end
					end)
				else
					-- Show the calendar button
					GameTimeFrame:Show();
					-- Move the tracking button to its origianl position
					MiniMapTracking:ClearAllPoints();
					MiniMapTracking:SetPoint("TOPLEFT", MinimapBackdrop, "TOPLEFT", 9, -45);
					-- Remove right-click from the tracking button
					MiniMapTrackingButton:SetScript("OnMouseDown", nil);
				end
			end

			-- When the merge buttons option is checked, update the minimap
			LeaPlusCB["MergeTrackBtn"]:HookScript("OnClick", SetMiniMerge);

			-- Merge buttons on startup
			SetMiniMerge();

			----------------------------------------------------------------------
			-- Hide minimap zone text
			----------------------------------------------------------------------

			-- Store Blizzard handlers
			local origMiniMapTrackingButtonOnEnter = MiniMapTrackingButton:GetScript('OnEnter')
			local zonta,zontp,zontr,zontx,zonty = MinimapZoneTextButton:GetPoint();

			-- Function to show zone tooltip
			local function ShowZoneTip()
				if LeaPlusLC["HideMinimapZone"] == "On" then
					-- Show zone information in tooltip
					local zoneName = GetZoneText();
					local subzoneName = GetSubZoneText();
					if ( subzoneName == zoneName ) then
						subzoneName = "";	
					end
					-- Change the owner and position (needed for Minimap_SetTooltip)
					GameTooltip:SetOwner(MinimapZoneTextButton, "ANCHOR_LEFT")
					MinimapZoneTextButton:SetAllPoints(MiniMapTrackingButton)
					-- Show the tooltip
					local pvpType, isSubZonePvP, factionName = GetZonePVPInfo();
					Minimap_SetTooltip( pvpType, factionName )
					GameTooltip:Show();
				else
					MinimapZoneTextButton:ClearAllPoints();
					MinimapZoneTextButton:SetPoint(zonta,zontp,zontr,zontx,zonty)
				end
			end

			-- Function to hide zone text
			local function SetMiniZoneText()
				if LeaPlusLC["HideMinimapZone"] == "On" then
					-- Hide the minimap zone information and world map button
					MinimapZoneTextButton:Hide(); MiniMapWorldMapButton:Hide();
					MinimapBorderTop:SetTexture("");
					-- Move the minimap up to the top
					MinimapCluster:ClearAllPoints(); MinimapCluster:SetPoint("TOPRIGHT", UIParent, "TOPRIGHT", 0, 20);
					-- Set the tooltip of the tracking button as the zone name
					MiniMapTrackingButton:SetScript("OnEnter", ShowZoneTip);
				else
					-- Show the minimap zone information and world map button
					MinimapZoneTextButton:Show(); MiniMapWorldMapButton:Show();
					MinimapBorderTop:SetTexture("Interface\\Minimap\\UI-Minimap-Border");
					-- Move the minimap to its original position
					MinimapCluster:ClearAllPoints(); MinimapCluster:SetPoint("TOPRIGHT", UIParent, "TOPRIGHT", 0, 0);
					-- Set the tooltip of the tracking button as the original one
					MiniMapTrackingButton:SetScript("OnEnter", origMiniMapTrackingButtonOnEnter);
				end
			end

			-- Function to refresh tooltip text (used when zone text option changes)
			local function ShowTextAndTip()
				SetMiniZoneText(); 
				ShowZoneTip();
			end

			-- When the hide zone text option is checked, refresh the zone tooltip
			LeaPlusCB["HideMinimapZone"]:HookScript("OnClick", ShowTextAndTip);

			-- Update the minimap on startup
			SetMiniZoneText();

			----------------------------------------------------------------------
			-- Hide the clock
			----------------------------------------------------------------------

			-- Function to show or hide the clock
			local function SetMiniClock()
				if IsAddOnLoaded("Blizzard_TimeManager") then -- Required because function runs multiple places
					if LeaPlusLC["HideMinimapTime"] == "On"	then
						TimeManagerClockButton:Hide();
					else
						TimeManagerClockButton:Show();
					end
				end
			end

			-- Run function when Blizzard addon is loaded
			if IsAddOnLoaded("Blizzard_TimeManager") then
				SetMiniClock()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_TimeManager" then
						SetMiniClock()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			-- Update the clock when the checkbox is clicked
			LeaPlusCB["HideMinimapTime"]:HookScript("OnClick", SetMiniClock);
		
			----------------------------------------------------------------------
			-- Mousewheel zoom
			----------------------------------------------------------------------

			-- Function to zoom the minimap (only used by SetMiniZoom)
			local function MiniZoom(self, arg1)
				if arg1 > 0 and self:GetZoom() < 5 then
					self:SetZoom(self:GetZoom() + 1)
				elseif arg1 < 0 and self:GetZoom() > 0 then
					self:SetZoom(self:GetZoom() - 1)
				end
			end

			-- Set the minimap zoom option
			local function SetMiniZoom()
				if LeaPlusLC["MinimapMouseZoom"] == "On" then
					MinimapZoomIn:Hide()
					MinimapZoomOut:Hide()
					Minimap:EnableMouseWheel(true)
					Minimap:SetScript("OnMouseWheel", MiniZoom);
				else
					MinimapZoomIn:Show()
					MinimapZoomOut:Show()
					Minimap:EnableMouseWheel(false)
					Minimap:SetScript("OnMouseWheel", nil);
				end
			end

			-- Update the zoom setting when checkbox is clicked
			LeaPlusCB["MinimapMouseZoom"]:HookScript("OnClick", SetMiniZoom);
	
			-- Set minimap zoom on startup
			SetMiniZoom();

			----------------------------------------------------------------------
			-- Minimap scale
			----------------------------------------------------------------------

			-- Update minimap when slider control changes
			local function SetMiniScale()
				MinimapCluster:SetScale(LeaPlusLC["MinimapScale"])
				-- Set slider formatted text
				LeaPlusCB["MinimapScale"].f:SetFormattedText("%.0f%%", LeaPlusLC["MinimapScale"] * 100)
			end

			LeaPlusCB["MinimapScale"]:HookScript("OnValueChanged", SetMiniScale)

			----------------------------------------------------------------------
			-- Buttons
			----------------------------------------------------------------------

			-- Help button tooltip
			SideMinimap.h.tiptext = LeaPlusLC:Translate("Scale and style the minimap using the settings on this page.\n\nThis panel will close automatically if you enter combat.")

			-- Back button handler
			SideMinimap.b:SetScript("OnClick", function() 
				SideMinimap:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page5"]:Show();
				return
			end) 

			-- Reset button handler
			SideMinimap.r:SetScript("OnClick", function()
				LeaPlusLC["MergeTrackBtn"] = "Off"; SetMiniMerge();
				LeaPlusLC["HideMinimapZone"] = "Off"; SetMiniZoneText(); ShowTextAndTip();
				LeaPlusLC["HideMinimapTime"] = "Off"; SetMiniClock();
				LeaPlusLC["MinimapMouseZoom"] = "Off"; SetMiniZoom();
				LeaPlusLC["MinimapScale"] = 1.00; SetMiniScale();
				SideMinimap:Hide(); SideMinimap:Show();
			end)

			-- Configuration button handler
			LeaPlusCB["ModMinimapBtn"]:SetScript("OnClick", function()
				if LeaPlusLC:PlayerInCombat() then
					return
				else
					if IsShiftKeyDown() and IsControlKeyDown() then
						-- Preset profile
						LeaPlusLC["MergeTrackBtn"] = "On"; SetMiniMerge();
						LeaPlusLC["HideMinimapZone"] = "On"; SetMiniZoneText(); ShowTextAndTip();
						LeaPlusLC["HideMinimapTime"] = "Off"; SetMiniClock();
						LeaPlusLC["MinimapMouseZoom"] = "Off"; SetMiniZoom();
						LeaPlusLC["MinimapScale"] = 1.30; SetMiniScale();
					else
						-- Show configuration panel
						SideMinimap:Show();
						LeaPlusLC:HideFrames();
					end
				end
			end)

			-- Set minimap scale at startup
			SetMiniScale();

		end

		----------------------------------------------------------------------
		--	Quest text size
		----------------------------------------------------------------------

		if LeaPlusLC["QuestFontChange"] == "On" then

			-- Create configuration panel
			local QuestTextPanel = LeaPlusLC:CreatePanel("Quest Text", "QuestTextPanel")

			LeaPlusLC:MakeTx(QuestTextPanel, "Text size", 16, -72)
			LeaPlusLC:MakeSL(QuestTextPanel, "LeaPlusQuestFontSize", "", 10, 36, 1, 16, -92, "%.0f")

			-- Function to update the font size
			local function QuestSizeUpdate()
				QuestTitleFont:SetFont(QuestFont:GetFont(), LeaPlusLC["LeaPlusQuestFontSize"] + 3, nil)
				QuestFont:SetFont(QuestFont:GetFont(), LeaPlusLC["LeaPlusQuestFontSize"] + 1, nil)
				QuestFontNormalSmall:SetFont(QuestFontNormalSmall:GetFont(), LeaPlusLC["LeaPlusQuestFontSize"], nil)
			end

			-- Set text size when slider changes and on startup
			LeaPlusCB["LeaPlusQuestFontSize"]:HookScript("OnValueChanged", QuestSizeUpdate)
			QuestSizeUpdate()

			-- Help button tooltip
			QuestTextPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			QuestTextPanel.b:SetScript("OnClick", function() 
				QuestTextPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page4"]:Show()
				return
			end)

			-- Reset button handler
			QuestTextPanel.r:SetScript("OnClick", function()

				-- Reset slider
				LeaPlusLC["LeaPlusQuestFontSize"] = 18
				QuestSizeUpdate()

				-- Refresh side panel
				QuestTextPanel:Hide(); QuestTextPanel:Show()

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["QuestTextBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["LeaPlusQuestFontSize"] = 18
					QuestSizeUpdate()
				else
					QuestTextPanel:Show()
					LeaPlusLC:HideFrames()
				end
			end)

		end

		----------------------------------------------------------------------
		--	Resize mail text
		----------------------------------------------------------------------

		if LeaPlusLC["MailFontChange"] == "On" then

			-- Create configuration panel
			local MailTextPanel = LeaPlusLC:CreatePanel("Mail Text", "MailTextPanel")

			LeaPlusLC:MakeTx(MailTextPanel, "Text size", 16, -72)
			LeaPlusLC:MakeSL(MailTextPanel, "LeaPlusMailFontSize", "", 10, 36, 1, 16, -92, "%.0f")

			-- Function to set the text size
			local function MailSizeUpdate()
				local MailFont = QuestFont:GetFont();
				OpenMailBodyText:SetFont(MailFont, LeaPlusLC["LeaPlusMailFontSize"])
				SendMailBodyEditBox:SetFont(MailFont, LeaPlusLC["LeaPlusMailFontSize"])
			end

			-- Set text size after changing slider and on startup
			LeaPlusCB["LeaPlusMailFontSize"]:HookScript("OnValueChanged", MailSizeUpdate)
			MailSizeUpdate()

			-- Help button tooltip
			MailTextPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			MailTextPanel.b:SetScript("OnClick", function() 
				MailTextPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page4"]:Show()
				return
			end)

			-- Reset button handler
			MailTextPanel.r:SetScript("OnClick", function()

				-- Reset slider
				LeaPlusLC["LeaPlusMailFontSize"] = 22

				-- Refresh side panel
				MailTextPanel:Hide(); MailTextPanel:Show()

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["MailTextBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["LeaPlusMailFontSize"] = 22
					MailSizeUpdate()
				else
					MailTextPanel:Show()
					LeaPlusLC:HideFrames()
				end
			end)

		end

		----------------------------------------------------------------------
		--	Show durability status
		----------------------------------------------------------------------

		if LeaPlusLC["DurabilityStatus"] == "On" then

			-- Create durability button
			local cButton = CreateFrame("BUTTON", nil, PaperDollFrame)
			cButton:ClearAllPoints()
			cButton:SetPoint("BOTTOMRIGHT", CharacterFrameInset, "BOTTOMRIGHT", -2, -1)
			cButton:SetNormalTexture("Interface\\Buttons\\UI-SpellbookIcon-PrevPage-Up")
			cButton:SetHighlightTexture("Interface\\Buttons\\UI-Common-MouseHilight")
			cButton:SetSize(32, 32)

			-- Create durability tables
			local Slots = {"HeadSlot", "ShoulderSlot", "ChestSlot", "WristSlot", "HandsSlot", "WaistSlot", "LegsSlot", "FeetSlot", "MainHandSlot", "SecondaryHandSlot"}
			local SlotsFriendly = {INVTYPE_HEAD, INVTYPE_SHOULDER, INVTYPE_CHEST, INVTYPE_WRIST, INVTYPE_HAND, INVTYPE_WAIST, INVTYPE_LEGS, INVTYPE_FEET, INVTYPE_WEAPONMAINHAND, INVTYPE_WEAPONOFFHAND}

			-- Show durability status in tooltip or status line (tip or status)
			local function ShowDuraStats(where)

				local duravaltotal, duramaxtotal, durapercent = 0, 0, 0
				local valcol, id, duraval, duramax

				if where == "tip" then
					-- Creare layout
					_G["GameTooltipTextLeft1"]:SetText("|cffffffff"); _G["GameTooltipTextRight1"]:SetText("|cffffffff")
					_G["GameTooltipTextLeft2"]:SetText("|cffffffff"); _G["GameTooltipTextRight2"]:SetText("|cffffffff")
					_G["GameTooltipTextLeft3"]:SetText("|cffffffff"); _G["GameTooltipTextRight3"]:SetText("|cffffffff")
					GameTooltip:AddLine("|cffffffff")
					GameTooltip:AddLine("|cffffffff")
					GameTooltip:AddLine("|cffffffff")
				end

				-- Traverse equipment slots
				for k, slotName in ipairs(Slots) do
					if GetInventorySlotInfo(slotName) then
						id = GetInventorySlotInfo(slotName)
						duraval, duramax = GetInventoryItemDurability(id)
						if duraval ~= nil then

							-- Add to tooltip
							if where == "tip" then
								durapercent = tonumber(format("%.0f", duraval / duramax * 100))
								valcol = (durapercent >= 80 and "|cff00FF00") or (durapercent >= 60 and "|cff99FF00") or (durapercent >= 40 and "|cffFFFF00") or (durapercent >= 20 and "|cffFF9900") or (durapercent >= 0 and "|cffFF2000") or ("|cffFFFFFF")
								_G["GameTooltipTextLeft1"]:SetText(LeaPlusLC:Translate("Durability"))
								_G["GameTooltipTextLeft2"]:SetText(_G["GameTooltipTextLeft2"]:GetText() .. SlotsFriendly[k] .. "\n")
								_G["GameTooltipTextRight2"]:SetText(_G["GameTooltipTextRight2"]:GetText() ..  valcol .. durapercent .. "%" .. "\n")
							end

							duravaltotal = duravaltotal + duraval
							duramaxtotal = duramaxtotal + duramax
						end
					end
				end
				if duravaltotal > 0 and duramaxtotal > 0 then
					durapercent = duravaltotal / duramaxtotal * 100
				else
					durapercent = -1
				end

				if where == "tip" then

					-- Show overall durability in the tooltip
					if durapercent >= 80 then valcol = "|cff00FF00"	elseif durapercent >= 60 then valcol = "|cff99FF00"	elseif durapercent >= 40 then valcol = "|cffFFFF00"	elseif durapercent >= 20 then valcol = "|cffFF9900"	elseif durapercent >= 0 then valcol = "|cffFF2000" else return end
						_G["GameTooltipTextLeft3"]:SetText(LeaPlusLC:Translate("Overall") .. " " .. valcol)
						_G["GameTooltipTextRight3"]:SetText(valcol .. string.format("%.0f", durapercent) .. "%")

						-- Show lines of the tooltip
						GameTooltipTextLeft1:Show(); GameTooltipTextRight1:Show();
						GameTooltipTextLeft2:Show(); GameTooltipTextRight2:Show();
						GameTooltipTextLeft3:Show(); GameTooltipTextRight3:Show();
						GameTooltipTextRight2:SetJustifyH"RIGHT";
						GameTooltipTextRight3:SetJustifyH"RIGHT";
						GameTooltip:Show();

				elseif where == "status" then
					-- Show simple status line instead
					if tonumber(durapercent) >= 0 then -- Ensure character has some durability items equipped
						LeaPlusLC:Print(LeaPlusLC:Translate("You have") .. " " .. string.format("%.0f", durapercent) .. "%" .. " " .. LeaPlusLC:Translate("durability") .. ".")
					end
				end
			end

			-- Hover over the durability button to show the durabilit tooltip
			cButton:SetScript("OnEnter", function()
				GameTooltip:SetOwner(cButton, "ANCHOR_RIGHT");
				ShowDuraStats("tip");
			end)
			cButton:SetScript("OnLeave", GameTooltip_Hide)

			-- Create frame to watch events
			local DeathDura = CreateFrame("FRAME")
			DeathDura:RegisterEvent("PLAYER_DEAD")
			DeathDura:SetScript("OnEvent", function(self, event)
				ShowDuraStats("status")
			end)

			hooksecurefunc("AcceptResurrect", function()
				-- Player has ressed without releasing
				ShowDuraStats("status")
			end)
			
		end

		----------------------------------------------------------------------
		--	Hide character controls
		----------------------------------------------------------------------

		if LeaPlusLC["NoCharControls"] == "On" then

			-- Character sheet, dressup frame and side dressup frame
			CharacterModelFrameControlFrame:HookScript("OnShow", CharacterModelFrameControlFrame.Hide);
			DressUpModelControlFrame:HookScript("OnShow", DressUpModelControlFrame.Hide);
			SideDressUpModelControlFrame:HookScript("OnShow", SideDressUpModelControlFrame.Hide);

			-- Transmogrify window
			local function HideWardrobeControlsFunc()
				WardrobeTransmogFrameControlFrame:HookScript("OnShow", WardrobeTransmogFrameControlFrame.Hide)
			end

			if IsAddOnLoaded("Blizzard_Collections") then
				HideWardrobeControlsFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_Collections" then
						HideWardrobeControlsFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			-- Inspect window
			local function HideInspectControlsFunc()
				InspectModelFrameControlFrame:HookScript("OnShow", InspectModelFrameControlFrame.Hide)
			end

			if IsAddOnLoaded("Blizzard_InspectUI") then
				HideInspectControlsFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_InspectUI" then
						HideInspectControlsFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

		end

		----------------------------------------------------------------------
		--	Zone text
		----------------------------------------------------------------------

		if LeaPlusLC["HideZoneText"] == "On" then
			ZoneTextFrame:SetScript("OnShow", ZoneTextFrame.Hide);
		end

		----------------------------------------------------------------------
		--	Subzone text
		----------------------------------------------------------------------

		if LeaPlusLC["HideSubzoneText"] == "On" then
			SubZoneTextFrame:SetScript("OnShow", SubZoneTextFrame.Hide);
		end

		----------------------------------------------------------------------
		--	Disable sticky chat
		----------------------------------------------------------------------

		if LeaPlusLC["NoStickyChat"] == "On" then
			-- These taint if set to anything other than nil
			ChatTypeInfo.WHISPER.sticky = nil
			ChatTypeInfo.BN_WHISPER.sticky = nil
			ChatTypeInfo.CHANNEL.sticky = nil
		end

		----------------------------------------------------------------------
		--	Hide stance bar
		----------------------------------------------------------------------

		if LeaPlusLC["NoClassBar"] == "On" then
			local stancebar = CreateFrame("FRAME")
			stancebar:Hide();
			UIPARENT_MANAGED_FRAME_POSITIONS["StanceBarFrame"] = nil;
			StanceBarFrame:SetParent(stancebar)
		end

		----------------------------------------------------------------------
		--	Remove raid restrictions
		----------------------------------------------------------------------

		if LeaPlusLC["NoRaidRestrictions"] == "On" then
			SetAllowLowLevelRaid(1);
		end

		----------------------------------------------------------------------
		--	Hide gryphons
		----------------------------------------------------------------------

		if LeaPlusLC["NoGryphons"] == "On" then
			MainMenuBarLeftEndCap:Hide();
			MainMenuBarRightEndCap:Hide();
		end

		----------------------------------------------------------------------
		--	Disable chat fade
		----------------------------------------------------------------------

		if LeaPlusLC["NoChatFade"] == "On" then
			-- Process normal and existing chat frames
			for i = 1, 50 do
				if _G["ChatFrame" .. i] then
					_G["ChatFrame" .. i]:SetFading(false)
				end
			end
			-- Process temporary frames
			hooksecurefunc("FCF_OpenTemporaryWindow", function()
				local cf = FCF_GetCurrentChatFrame():GetName() or nil
				if cf then
					_G[cf]:SetFading(false)
				end
			end)
		end

		----------------------------------------------------------------------
		--	Use easy chat frame resizing
		----------------------------------------------------------------------

		if LeaPlusLC["UseEasyChatResizing"] == "On" then
			ChatFrame1Tab:HookScript("OnMouseDown", function(self,arg1)
				if arg1 == "LeftButton" then
					if select(8, GetChatWindowInfo(1)) then
						ChatFrame1:StartSizing("TOP")
					end
				end
			end)
			ChatFrame1Tab:SetScript("OnMouseUp", function(self,arg1)
				if arg1 == "LeftButton" then
					ChatFrame1:StopMovingOrSizing()
					FCF_SavePositionAndDimensions(ChatFrame1)
				end
			end)
		end

		----------------------------------------------------------------------
		--	Increase chat history
		----------------------------------------------------------------------

		if LeaPlusLC["MaxChatHstory"] == "On" then
			-- Process normal and existing chat frames
			for i = 1, 50 do
				if _G["ChatFrame" .. i] and _G["ChatFrame" .. i]:GetMaxLines() ~= 4096 then
					_G["ChatFrame" .. i]:SetMaxLines(4096);
				end
			end
			-- Process temporary chat frames
			hooksecurefunc("FCF_OpenTemporaryWindow", function()
				local cf = FCF_GetCurrentChatFrame():GetName() or nil
				if cf then
					if (_G[cf]:GetMaxLines() ~= 4096) then
						_G[cf]:SetMaxLines(4096);
					end
				end
			end)
		end

		----------------------------------------------------------------------
		--	Hide error text
		----------------------------------------------------------------------

		if LeaPlusLC["HideErrorFrameText"] == "On" then

			-- Create configuration panel
			local ErrorPanel = LeaPlusLC:CreatePanel("Error Text", "ErrorPanel")

			LeaPlusLC:MakeTx(ErrorPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(ErrorPanel, "ShowQuestUpdates", "Show quest updates", 16, -92, false, "If checked, quest updates will be shown in the error frame.")
			LeaPlusLC:MakeCB(ErrorPanel, "ShowImportantErrors", "Show important error text", 16, -112, false, "If checked, the following errors will be shown in the error frame:\n\n- Inventory full\n- Quest log full\n- Votekick alerts")

			-- Help button tooltip
			ErrorPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			ErrorPanel.b:SetScript("OnClick", function() 
				ErrorPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page4"]:Show();
				return
			end)

			-- Reset button handler
			ErrorPanel.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["ShowQuestUpdates"] = "On"
				LeaPlusLC["ShowImportantErrors"] = "On"

				-- Refresh side panel
				ErrorPanel:Hide(); ErrorPanel:Show();

			end)

			-- Show side panal when options panel button is clicked
			LeaPlusCB["HideErrorsBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["ShowQuestUpdates"] = "On"
					LeaPlusLC["ShowImportantErrors"] = "On"
				else
					ErrorPanel:Show();
					LeaPlusLC:HideFrames();
				end
			end);

			local OrigErrHandler = UIErrorsFrame:GetScript('OnEvent')

			--	Error message events
			UIErrorsFrame:SetScript('OnEvent', function (self, event, id, err, ...)

				-- Handle error messages
				if event == "UI_ERROR_MESSAGE" then
					if LeaPlusLC["ShowErrorsFlag"] == 1 then
						if LeaPlusLC["ShowImportantErrors"] == "On" then
							if err == ERR_INV_FULL or
								err == ERR_QUEST_LOG_FULL or
								err == ERR_RAID_GROUP_ONLY	or
								err == ERR_PARTY_LFG_BOOT_LIMIT or
								err == ERR_PARTY_LFG_BOOT_DUNGEON_COMPLETE or
								err == ERR_PARTY_LFG_BOOT_IN_COMBAT or
								err == ERR_PARTY_LFG_BOOT_IN_PROGRESS or
								err == ERR_PARTY_LFG_BOOT_LOOT_ROLLS or
								err == ERR_PARTY_LFG_TELEPORT_IN_COMBAT or
								err == ERR_PET_SPELL_DEAD or
								err == ERR_PLAYER_DEAD or
								err:find(format(ERR_PARTY_LFG_BOOT_NOT_ELIGIBLE_S, ".+")) then
									return OrigErrHandler(self, event, id, err, ...)
							end
						end
					else
						return OrigErrHandler(self, event, id, err, ...) 
					end
				end

				-- Handle information messages
				if event == 'UI_INFO_MESSAGE'  then
					if LeaPlusLC["ShowQuestUpdates"] == "On" then
						return OrigErrHandler(self, event, id, err, ...)
					end
				end

			end)

		end

		----------------------------------------------------------------------
		--	Show dressup buttons
		----------------------------------------------------------------------

		if LeaPlusLC["ShowDressTab"] == "On" then

			-- Add buttons to main dressup frame
			LeaPlusLC:CreateButton("DressUpTabBtn", DressUpFrame, "Tabard", "BOTTOMLEFT", 26, 79, 80, 22, false, "")
			LeaPlusCB["DressUpTabBtn"]:SetScript("OnClick", function()
				DressUpModel:UndressSlot(19)
			end)

			LeaPlusLC:CreateButton("DressUpNudeBtn", DressUpFrame, "Nude", "BOTTOMLEFT", 106, 79, 80, 22, false, "")
			LeaPlusCB["DressUpNudeBtn"]:SetScript("OnClick", function()
				DressUpFrameResetButton:Click() -- Done first in case any slots refuse to clear
				for i = 1, 19 do
					DressUpModel:UndressSlot(i) -- Done this way to prevent issues with Undress
				end
			end)

			local BtnStrata, BtnLevel = SideDressUpModelResetButton:GetFrameStrata(), SideDressUpModelResetButton:GetFrameLevel()

			-- Add buttons to dressup frame (auction house)
			LeaPlusLC:CreateButton("DressUpSideBtn", SideDressUpFrame, "Tabard", "BOTTOMLEFT", 14, 20, 60, 22, false, "")
			LeaPlusCB["DressUpSideBtn"]:SetFrameStrata(BtnStrata);
			LeaPlusCB["DressUpSideBtn"]:SetFrameLevel(BtnLevel);
			LeaPlusCB["DressUpSideBtn"]:SetScript("OnClick", function()
				SideDressUpModel:UndressSlot(19)
			end)

			LeaPlusLC:CreateButton("DressUpSideNudeBtn", SideDressUpFrame, "Nude", "BOTTOMRIGHT", -18, 20, 60, 22, false, "")
			LeaPlusCB["DressUpSideNudeBtn"]:SetFrameStrata(BtnStrata);
			LeaPlusCB["DressUpSideNudeBtn"]:SetFrameLevel(BtnLevel);
			LeaPlusCB["DressUpSideNudeBtn"]:SetScript("OnClick", function()
				SideDressUpModelResetButton:Click() -- Done first in case any slots refuse to clear
				for i = 1, 19 do
					SideDressUpModel:UndressSlot(i) -- Done this way to prevent issues with Undress
				end
			end)

		end

		----------------------------------------------------------------------
		--	Minimap button
		----------------------------------------------------------------------

		if LeaPlusLC["ShowMinimapIcon"] == "On" then
	
			-- Create minimap button
			local minibtn = CreateFrame("Button", "LeaPlusMapBtn", Minimap)

			minibtn:SetFrameStrata("MEDIUM")
			minibtn:SetSize(31, 31)
			minibtn:RegisterForClicks("AnyUp")
			minibtn:SetHighlightTexture("Interface\\Minimap\\UI-Minimap-ZoomButton-Highlight")
			minibtn:SetMovable(true)

			local overlay = minibtn:CreateTexture(nil, "OVERLAY")
			overlay:SetSize(53, 53)
			overlay:SetTexture("Interface\\Minimap\\MiniMap-TrackingBorder")
			overlay:SetPoint("TOPLEFT")

			local background = minibtn:CreateTexture(nil, "BACKGROUND")
			background:SetSize(20, 20)
			background:SetTexture("Interface\\Minimap\\UI-Minimap-Background")
			background:SetPoint("TOPLEFT", 7, -5)

			local icon = minibtn:CreateTexture(nil, "ARTWORK")
			icon:SetSize(20, 20)
			icon:SetTexture("Interface\\HELPFRAME\\ReportLagIcon-Movement.png")
			icon:SetPoint("CENTER", 0, 0)

			minibtn:HookScript("OnMouseDown", function() icon:SetSize(18, 18) end)
			minibtn:HookScript("OnMouseUp", function() icon:SetSize(20, 20)	end)

			-- Minimap buton tooltip
			minibtn:SetScript("OnEnter", function()
				GameTooltip:SetOwner(minibtn, "ANCHOR_NONE")
				local x, y = minibtn:GetCenter()
				local hhalf = (x > UIParent:GetWidth() * 2 / 3) and "RIGHT" or (x < UIParent:GetWidth()/3) and "LEFT" or ""
				local vhalf = (y > UIParent:GetHeight() / 2) and "TOP" or "BOTTOM"
				GameTooltip:ClearAllPoints()
				GameTooltip:SetPoint(vhalf .. hhalf, minibtn, (vhalf == "TOP" and "BOTTOM" or "TOP") .. hhalf)
				GameTooltip:SetText("Leatrix Plus", nil, nil, nil, nil, true)
				local tipstr = LeaPlusLC:Translate("Left: Options panel") .. "\n"
				tipstr = tipstr .. LeaPlusLC:Translate("Right: Music player")
				GameTooltip:AddLine(tipstr, 1, 1, 1, 1)
				GameTooltip:Show()
			end)
			minibtn:SetScript("OnLeave", GameTooltip_Hide)

			local function UpdateMapBtn()
				local Xpoa, Ypoa = GetCursorPosition()
				local Xmin, Ymin = Minimap:GetLeft(), Minimap:GetBottom()
				Xpoa = Xmin - Xpoa / Minimap:GetEffectiveScale() + 70
				Ypoa = Ypoa / Minimap:GetEffectiveScale() - Ymin - 70
				LeaPlusLC["MinimapIconPos"] = math.deg(math.atan2(Ypoa, Xpoa))
				minibtn:ClearAllPoints()
				minibtn:SetPoint("TOPLEFT", Minimap, "TOPLEFT", 52 - (80 * cos(LeaPlusLC["MinimapIconPos"])), (80 * sin(LeaPlusLC["MinimapIconPos"])) - 52)
			end

			-- Control movement
			minibtn:RegisterForDrag("LeftButton")
			minibtn:SetScript("OnDragStart", function()
				minibtn:StartMoving()
				minibtn:SetScript("OnUpdate", UpdateMapBtn)
			end)

			minibtn:SetScript("OnDragStop", function()
				minibtn:StopMovingOrSizing();
				minibtn:SetUserPlaced(false);
				minibtn:SetScript("OnUpdate", nil)
				UpdateMapBtn();
			end)

			-- Set position
			minibtn:ClearAllPoints();
			minibtn:SetPoint("TOPLEFT",Minimap,"TOPLEFT",52-(80*cos(LeaPlusLC["MinimapIconPos"])),(80*sin(LeaPlusLC["MinimapIconPos"]))-52)

			-- Control clicks
			minibtn:SetScript("OnClick", function(self,arg1)
				-- Prevent options panel from showing if Blizzard options panel is showing
				if InterfaceOptionsFrame:IsShown() or VideoOptionsFrame:IsShown() or ChatConfigFrame:IsShown() then return end
				-- Left button down
				if arg1 == "LeftButton" then

					-- Control key modifier toggles target tracking
					if IsControlKeyDown() and not IsShiftKeyDown() then
						for i = 1, GetNumTrackingTypes() do
							local name, texture, active, category = GetTrackingInfo(i)
							if name == MINIMAP_TRACKING_TARGET then
								if active then
									SetTracking(i, false)
									ActionStatus_DisplayMessage(LeaPlusLC:Translate("Target Tracking Disabled"), true);
								else
									SetTracking(i, true)
									ActionStatus_DisplayMessage(LeaPlusLC:Translate("Target Tracking Enabled"), true);
								end
							end
						end
						return
					end

					-- Shift key modifier toggles the music
					if IsShiftKeyDown() and not IsControlKeyDown() then
						Sound_ToggleMusic();
						return
					end

					-- Shift key and control key toggles Zygor addon
					if IsShiftKeyDown() and IsControlKeyDown() then
						LeaPlusLC:ZygorToggle();
						return
					end

					-- No modifier key toggles the options panel
					if LeaPlusLC:IsPlusShowing() then
						LeaPlusLC:HideFrames()
						LeaPlusLC:HideConfigPanels()
					else
						LeaPlusLC:HideFrames()
						LeaPlusLC["PageF"]:Show()
					end
					LeaPlusLC["Page"..LeaPlusLC["LeaStartPage"]]:Show()
				end

				-- Right button down
				if arg1 == "RightButton" then

					-- Control key modifier toggles error messages
					if IsControlKeyDown() and not IsShiftKeyDown() then
						if LeaPlusDB["HideErrorFrameText"] == "On" then -- Checks global
							if LeaPlusLC["ShowErrorsFlag"] == 1 then 
								LeaPlusLC["ShowErrorsFlag"] = 0
								ActionStatus_DisplayMessage(LeaPlusLC:Translate("Error frame text will be shown"), true);
							else
								LeaPlusLC["ShowErrorsFlag"] = 1
								ActionStatus_DisplayMessage(LeaPlusLC:Translate("Error frame text will be hidden"), true);
							end
							return
						end
						return
					end

					-- Shift key modifier toggles coordinates
					if IsShiftKeyDown() and not IsControlKeyDown() then
						if LeaPlusLC["StaticCoordsEn"] == "On" then
							if LeaPlusLC["StaticCoords"] == "On" then
								LeaPlusLC["StaticCoords"] = "Off";
								ActionStatus_DisplayMessage(LeaPlusLC:Translate("Coordinates Disabled"), true);
							else
								LeaPlusLC["StaticCoords"] = "On";
								SetMapToCurrentZone();
								ActionStatus_DisplayMessage(LeaPlusLC:Translate("Coordinates Enabled"), true);
							end
							-- Run the coordinates refresh function
							LeaPlusLC:RefreshStaticCoords();
							-- Update side panel checkbox if it's showing
							if LeaPlusCB["StaticCoords"]:IsShown() then
								LeaPlusCB["StaticCoords"]:Hide();
								LeaPlusCB["StaticCoords"]:Show();
							end
						end
						return
					end

					-- Shift key and control key toggles maximised window mode
					if IsShiftKeyDown() and IsControlKeyDown() then

						if GetCVar("gxWindow") == "1" then
							if LeaPlusLC:PlayerInCombat() then
								return
							else
								SetCVar("gxMaximize", tostring(1 - GetCVar("gxMaximize")));
								RestartGx();
							end
						end
						return
					
					end

					-- No modifier key toggles the music player
					if LeaPlusLC["MusicPlayer"]:IsShown() then
						LeaPlusLC["MusicPlayer"]:Hide()
					else
						LeaPlusLC["MusicPlayer"]:Show()
					end

				end

				-- Middle button modifier
				if arg1 == "MiddleButton" then
					-- Nothing (yet)
				end
			end)

		end

		-- Release memory
		LeaPlusLC.Isolated = nil

	end

----------------------------------------------------------------------
--	L40: Variable
----------------------------------------------------------------------

	function LeaPlusLC:Variable()

		----------------------------------------------------------------------
		--	Max camera zoom
		----------------------------------------------------------------------

		if LeaPlusLC["MaxCameraZoom"] == "On" then

			-- Set camera zoom setting
			SetCVar("cameraDistanceMaxZoomFactor", 2.6)

		end

		----------------------------------------------------------------------
		-- Auction House Extras
		----------------------------------------------------------------------

		if LeaPlusLC["AhExtras"] == "On" then

			local function AuctionFunc()

				-- Set default auction duration value to saved setting or default setting
				AuctionFrameAuctions.duration = LeaPlusDB["AHDuration"] or 3

				-- Functions
				local function CreateAuctionCB(name, anchor, x, y, text)
					LeaPlusCB[name] = CreateFrame("CheckButton", nil, AuctionFrameAuctions, "OptionsCheckButtonTemplate")
					LeaPlusCB[name]:SetFrameStrata("HIGH")
					LeaPlusCB[name]:SetSize(20, 20)
					LeaPlusCB[name]:SetPoint(anchor, x, y)
					LeaPlusCB[name].f = LeaPlusCB[name]:CreateFontString(nil, 'OVERLAY', "GameFontNormal")
					LeaPlusCB[name].f:SetPoint("LEFT", 20, 0)
					LeaPlusCB[name].f:SetText(LeaPlusLC:Translate(text))
					LeaPlusCB[name].f:Show();
					LeaPlusCB[name]:SetScript('OnClick', function()
						if LeaPlusCB[name]:GetChecked() then
							LeaPlusLC[name] = "On"
						else
							LeaPlusLC[name] = "Off"
						end
					end)
					LeaPlusCB[name]:SetScript('OnShow', function(self)
						if LeaPlusLC[name] == "On" then
							self:SetChecked(true)
						else
							self:SetChecked(false)
						end
					end)
				end

				-- Show the correct fields in the AH frame and match prices
				local function SetupAh()
					if LeaPlusLC["AhBuyoutOnly"] == "On" then
						-- Hide the start price
						StartPrice:SetAlpha(0);
						-- Set start price to buyout price 
						StartPriceGold:SetText(BuyoutPriceGold:GetText());
						StartPriceSilver:SetText(BuyoutPriceSilver:GetText());
						StartPriceCopper:SetText(BuyoutPriceCopper:GetText());
					else
						-- Show the start price
						StartPrice:SetAlpha(1);
					end
					-- If gold only is on, set copper and silver to 99
					if LeaPlusLC["AhGoldOnly"] == "On" then
						StartPriceCopper:SetText("99"); StartPriceCopper:Disable();
						StartPriceSilver:SetText("99"); StartPriceSilver:Disable();
						BuyoutPriceCopper:SetText("99"); BuyoutPriceCopper:Disable();
						BuyoutPriceSilver:SetText("99"); BuyoutPriceSilver:Disable();
					else
						StartPriceCopper:Enable();
						StartPriceSilver:Enable();
						BuyoutPriceCopper:Enable();
						BuyoutPriceSilver:Enable();
					end
					-- Validate the auction (mainly for the create auction button status)
					AuctionsFrameAuctions_ValidateAuction();
				end

				-- Create checkboxes
				CreateAuctionCB("AhBuyoutOnly", "BOTTOMLEFT", 200, 16, "Buyout Only")
				CreateAuctionCB("AhGoldOnly", "BOTTOMLEFT", 320, 16, "Gold Only")

				-- Reposition Gold Only checkbox so it does not overlap Buyout Only checkbox label
				LeaPlusCB["AhGoldOnly"]:ClearAllPoints()
				LeaPlusCB["AhGoldOnly"]:SetPoint("LEFT", LeaPlusCB["AhBuyoutOnly"].f, "RIGHT", 20, 0)

				-- Set click boundaries
				LeaPlusCB["AhBuyoutOnly"]:SetHitRectInsets(0, -LeaPlusCB["AhBuyoutOnly"].f:GetStringWidth() + 6, 0, 0);
				LeaPlusCB["AhGoldOnly"]:SetHitRectInsets(0, -LeaPlusCB["AhGoldOnly"].f:GetStringWidth() + 6, 0, 0);

				LeaPlusCB["AhBuyoutOnly"]:HookScript('OnClick', SetupAh);
				LeaPlusCB["AhBuyoutOnly"]:HookScript('OnShow', SetupAh);
	
				AuctionFrameAuctions:HookScript("OnShow", SetupAh)
				BuyoutPriceGold:HookScript("OnTextChanged", SetupAh)
				BuyoutPriceSilver:HookScript("OnTextChanged", SetupAh)
				BuyoutPriceCopper:HookScript("OnTextChanged", SetupAh)
				StartPriceGold:HookScript("OnTextChanged", SetupAh)
				StartPriceSilver:HookScript("OnTextChanged", SetupAh)
				StartPriceCopper:HookScript("OnTextChanged", SetupAh)
	
				-- Lock the create auction button if buyout gold box is empty (when using buyout only and gold only)
				AuctionsCreateAuctionButton:HookScript("OnEnable", function()
					if LeaPlusLC["AhGoldOnly"] == "On" and LeaPlusLC["AhBuyoutOnly"] == "On" then
						if BuyoutPriceGold:GetText() == "" then
							AuctionsCreateAuctionButton:Disable();
						end
					end
				end)
				
				-- Clear copper and silver prices if gold only box is unchecked
				LeaPlusCB["AhGoldOnly"]:HookScript('OnClick', function()
					if LeaPlusCB["AhGoldOnly"]:GetChecked() == false then
						BuyoutPriceCopper:SetText("")
						BuyoutPriceSilver:SetText("")
						StartPriceCopper:SetText("")
						StartPriceSilver:SetText("")
					end
					SetupAh();
				end)

				-- Create find button
				AuctionsItemText:Hide()
				LeaPlusLC:CreateButton("FindAuctionButton", AuctionsStackSizeMaxButton, "Find Item", "CENTER", 0, 74, 0, 21, false, "")
				LeaPlusCB["FindAuctionButton"]:SetParent(AuctionFrameAuctions)

				-- Show find button when the auctions tab is shown
				AuctionFrameAuctions:HookScript("OnShow", function() 
					LeaPlusCB["FindAuctionButton"]:SetEnabled(GetAuctionSellItemInfo() and true or false)
				end)

				-- Show find button when a new item is added
				AuctionsItemButton:HookScript("OnEvent", function(self, event)
					if event == "NEW_AUCTION_UPDATE" then
						LeaPlusCB["FindAuctionButton"]:SetEnabled(GetAuctionSellItemInfo() and true or false)
					end
				end)

				LeaPlusCB["FindAuctionButton"]:SetScript("OnClick", function()
					if GetAuctionSellItemInfo() then
						if BrowseWowTokenResults:IsShown() then
							-- Stop if Game Time filter is currently shown
							AuctionFrameTab1:Click()
							LeaPlusLC:Print("To use the Find button, you need to deselect the Game Time filter.")
						else
							-- Otherwise, search for the required item
							local name = GetAuctionSellItemInfo()
							BrowseName:SetText(name)
							ExactMatchCheckButton:SetChecked(true) -- Necessary for scrolling through results pages with exact match
							QueryAuctionItems(name, 0, 0, 0, 0, 0, false, true, 0)
							AuctionFrameTab1:Click()
						end
					end
				end)

				-- Clear the cursor and reset editboxes when a new item replaces an existing one
				hooksecurefunc("AuctionsFrameAuctions_ValidateAuction", function()
					if GetAuctionSellItemInfo() then
						-- Return anything you might be holding
						ClearCursor();
						-- Set copper and silver prices to 99 if gold mode is on
						if LeaPlusLC["AhGoldOnly"] == "On" then
							StartPriceCopper:SetText("99")
							StartPriceSilver:SetText("99")
							BuyoutPriceCopper:SetText("99")
							BuyoutPriceSilver:SetText("99")
						end
					end
				end)
      
				-- Clear gold editbox after an auction has been created (to force user to enter something)
				AuctionsCreateAuctionButton:HookScript("OnClick", function()
					StartPriceGold:SetText("")
					BuyoutPriceGold:SetText("")
				end)

				-- Set tab key actions (if different from defaults)
				StartPriceGold:HookScript("OnTabPressed", function()
					if not IsShiftKeyDown() then
						if LeaPlusLC["AhBuyoutOnly"] == "Off" and LeaPlusLC["AhGoldOnly"] == "On" then
							BuyoutPriceGold:SetFocus()
						end
					end
				end)

				BuyoutPriceGold:HookScript("OnTabPressed", function()
					if IsShiftKeyDown() then
						if LeaPlusLC["AhBuyoutOnly"] == "Off" and LeaPlusLC["AhGoldOnly"] == "On" then
							StartPriceGold:SetFocus()
						end
					end
				end)
			end

			-- Run function when Blizzard addon is loaded
			if IsAddOnLoaded("Blizzard_AuctionUI") then
				AuctionFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_AuctionUI" then
						AuctionFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

		end

		----------------------------------------------------------------------
		-- Map customisation
		----------------------------------------------------------------------

		if LeaPlusLC["ShowMapMod"] == "On" then

			----------------------------------------------------------------------
			-- Cursor coordinates
			----------------------------------------------------------------------

			-- Create cursor coordinates frame
			local Cmap = CreateFrame("FRAME", nil, WorldMapFrame.BorderFrame)
			Cmap:SetWidth(38);	Cmap:SetHeight(16);
			Cmap:SetPoint("TOPLEFT", 116, -5)

			Cmap.x = Cmap:CreateFontString(nil, "ARTWORK", "GameFontNormal") 
			Cmap.x:SetAllPoints(); Cmap.x:SetJustifyH"LEFT";

			Cmap.y = Cmap:CreateFontString(nil, "ARTWORK", "GameFontNormal") 
			Cmap.y:SetPoint("LEFT", Cmap.x, "RIGHT", -6, 0);
			Cmap.y:SetJustifyH"LEFT";

			-- Initialise variables
			local vmapx, vmapy = 0, 0
			local mtimer = 0

			-- Cursor coordinates update function
			local function UpdateCursorCoords(self, elapsed)

				mtimer = mtimer + elapsed;

				while (mtimer > 0.1) do

					-- Show cursor coordinates
					local scale = WorldMapDetailFrame:GetEffectiveScale()
					local width = WorldMapDetailFrame:GetWidth()
					local height = WorldMapDetailFrame:GetHeight()
					local cenx, ceny = WorldMapDetailFrame:GetCenter()
					local x, y = GetCursorPosition()
					local vmapx = (x / scale - (cenx - (width/2))) / width
					local vmapy = (ceny + (height/2) - y / scale) / height		

					if (vmapx >= 0  and vmapy >= 0 and vmapx <=1 and vmapy <=1) then
						Cmap.x:SetFormattedText("%0.1f", (floor(vmapx * 1000 + 0.5)) / 10)
						Cmap.y:SetFormattedText("%0.1f", (floor(vmapy * 1000 + 0.5)) / 10)
					else
						Cmap.x:SetText("0.0")
						Cmap.y:SetText("0.0")
					end

					mtimer = 0;

				end

			end

			Cmap:SetScript("OnUpdate", UpdateCursorCoords)

			----------------------------------------------------------------------
			-- Reveal map
			----------------------------------------------------------------------

			local LeaPlusMapData = {

				-- Eastern Kingdoms
				["Arathi"] = {"CirecleofOuterBinding:215:188:332:273", "CircleofWestBinding:220:287:85:24", "NorthfoldManor:227:268:132:105", "Bouldergor:249:278:171:123", "StromgardeKeep:284:306:21:269", "FaldirsCove:273:268:77:400", "CircleofInnerBinding:228:227:201:312", "ThandolSpan:237:252:261:416", "BoulderfistHall:252:258:327:367", "RefugePoint:196:270:293:145", "WitherbarkVillage:260:220:476:359", "GoShekFarm:306:248:430:249", "DabyriesFarmstead:210:227:404:144", "CircleofEastBinding:183:238:506:126", "Hammerfall:270:271:581:118", "GalensFall:212:305:0:144"},
				["Badlands"] = {"AgmondsEnd:342:353:230:315", "AngorFortress:285:223:230:68", "ApocryphansRest:252:353:0:66", "CampBoff:274:448:407:220", "CampCagg:339:347:0:281", "CampKosh:236:260:504:19", "DeathwingScar:328:313:175:178", "HammertoesDigsite:209:196:411:116", "LethlorRavine:469:613:533:55", "TheDustbowl:214:285:144:99", "Uldaman:266:210:336:0",},
				["BlastedLands"] = {"AltarofStorms:238:195:225:110", "DreadmaulHold:272:206:258:0", "DreadmaulPost:235:188:327:182", "NethergardeKeep:295:205:530:6", "NethergardeSupplyCamps:195:199:436:0", "RiseoftheDefiler:168:170:375:102", "SerpentsCoil:218:183:459:97", "Shattershore:240:270:578:91", "SunveilExcursion:233:266:386:374", "Surwich:199:191:333:474", "TheDarkPortal:370:298:368:179", "TheRedReaches:268:354:533:268", "TheTaintedForest:348:357:132:311", "TheTaintedScar:308:226:144:175",},
				["BlastedLands_terrain1"] = {"AltarofStorms:238:195:225:110", "DreadmaulHold:272:206:258:0", "DreadmaulPost:235:188:327:182", "NethergardeKeep:295:205:530:6", "NethergardeSupplyCamps:195:199:436:0", "RiseoftheDefiler:168:170:375:102", "SerpentsCoil:218:183:459:97", "Shattershore:240:270:578:91", "SunveilExcursion:233:266:386:374", "Surwich:199:191:333:474", "TheDarkPortal:370:298:368:179", "TheRedReaches:268:354:533:268", "TheTaintedForest:348:357:132:311", "TheTaintedScar:308:226:144:175",},
				["BurningSteppes"] = {"AltarofStorms:182:360:0:0", "BlackrockMountain:281:388:79:0", "BlackrockPass:298:410:419:258", "BlackrockStronghold:320:385:235:0", "Dracodar:362:431:0:237", "DreadmaulRock:274:263:568:151", "MorgansVigil:383:413:615:255", "PillarofAsh:274:413:253:255", "RuinsofThaurissan:324:354:421:0", "TerrorWingPath:350:341:646:7",},
				["Darkshore"] = {"AmethAran:326:145:294:330", "EyeoftheVortex:330:192:300:239", "Lordanel:277:281:391:54", "Nazjvel:244:201:207:467", "RuinsofAuberdine:203:194:280:182", "RuinsofMathystra:200:263:517:28", "ShatterspearVale:250:241:596:16", "ShatterspearWarcamp:245:147:565:0", "TheMastersGlaive:303:185:277:483", "WildbendRiver:314:193:280:378", "WitheringThicket:328:250:305:118",},
				["DeadwindPass"] = {"DeadmansCrossing:617:522:83:0", "Karazhan:513:358:92:310", "TheVice:350:449:433:208",},
				["DunMorogh"] = {"AmberstillRanch:249:183:595:225", "ColdridgePass:225:276:360:340", "ColdridgeValley:398:302:100:366", "FrostmaneFront:226:335:469:256", "FrostmaneHold:437:249:50:227", "Gnomeregan:409:318:0:27", "GolBolarQuarry:198:251:663:288", "HelmsBedLake:218:234:760:268", "IceFlowLake:236:358:263:0", "Ironforge:376:347:398:0", "IronforgeAirfield:308:335:630:0", "Kharanos:184:188:449:220", "NorthGateOutpost:237:366:765:43", "TheGrizzledDen:211:160:374:287", "TheShimmeringDeep:171:234:397:132", "TheTundridHills:174:249:579:306",},
				["Duskwood"] = {"AddlesStead:299:296:32:348", "BrightwoodGrove:279:399:497:112", "Darkshire:329:314:640:128", "ManorMistmantle:219:182:661:122", "RacenHill:205:157:96:292", "RavenHillCemetary:323:309:91:132", "TheDarkenedBank:931:235:71:26", "TheHushedBank:189:307:0:152", "TheRottingOrchard:291:263:539:368", "TheTranquilGardensCemetary:291:244:627:344", "TheTwilightGrove:320:388:314:101", "TheYorgenFarmstead:233:248:401:396", "VulGolOgreMound:268:282:228:355",},
				["EasternPlaguelands"] = {"Acherus:228:273:774:102", "BlackwoodLake:238:231:382:151", "CorinsCrossing:186:213:493:289", "CrownGuardTower:202:191:258:351", "Darrowshire:248:206:211:462", "EastwallTower:181:176:541:184", "LakeMereldar:266:241:462:427", "LightsHopeChapel:196:220:687:271", "LightsShieldTower:243:162:391:271", "Northdale:265:232:570:61", "NorthpassTower:250:192:401:69", "Plaguewood:328:253:144:40", "QuelLithienLodge:277:175:351:0", "RuinsOfTheScarletEnclave:264:373:738:295", "Stratholme:310:178:118:0", "Terrordale:258:320:0:10", "TheFungalVale:274:216:183:211", "TheInfectisScar:177:266:595:263", "TheMarrisStead:202:202:133:335", "TheNoxiousGlade:297:299:650:55", "ThePestilentScar:182:320:383:348", "TheUndercroft:280:211:56:457", "ThondorilRiver:262:526:0:100", "Tyrshand:214:254:651:414", "ZulMashar:286:176:528:0",},
				["Elwynn"] = {"BrackwellPumpkinPatch:287:216:532:424", "CrystalLake:220:207:417:327", "EastvaleLoggingCamp:294:243:703:292", "FargodeepMine:269:248:240:420", "Goldshire:276:231:247:294", "JerodsLanding:230:206:396:430", "NorthshireValley:295:296:355:138", "RidgepointTower:285:194:708:442", "StonecairnLake:340:272:552:186", "Stromwind:512:422:0:0", "TowerofAzora:270:241:529:287", "WestbrookGarrison:269:313:116:355",},
				["Ghostlands"] = {"AmaniPass:404:436:598:232", "BleedingZiggurat:256:256:184:238", "DawnstarSpire:427:256:575:0", "Deatholme:512:293:95:375", "ElrendarCrossing:512:256:326:0", "FarstriderEnclave:429:256:573:136", "GoldenmistVillage:512:512:44:0", "HowlingZiggurat:256:449:340:219", "IsleofTribulations:256:256:585:0", "SanctumoftheMoon:256:256:210:126", "SanctumoftheSun:256:512:448:150", "SuncrownVillage:512:256:460:0", "ThalassiaPass:256:262:364:406", "Tranquillien:256:512:365:2", "WindrunnerSpire:256:256:40:287", "WindrunnerVillage:256:512:60:117", "ZebNowa:512:431:466:237",},
				["HillsbradFoothills"] = {"AzurelodeMine:180:182:287:399", "ChillwindPoint:447:263:555:68", "CorrahnsDagger:135:160:426:224", "CrushridgeHold:134:124:463:101", "DalaranCrater:316:238:102:137", "DandredsFold:258:113:341:0", "DarrowHill:147:160:425:279", "DunGarok:269:258:542:410", "DurnholdeKeep:437:451:565:217", "GallowsCorner:155:147:451:140", "GavinsNaze:116:129:344:254", "GrowlessCave:171:136:359:191", "HillsbradFields:302:175:191:302", "LordamereInternmentCamp:250:167:194:216", "MistyShore:158:169:321:42", "NethanderSteed:204:244:502:373", "PurgationIsle:144:139:200:505", "RuinsOfAlterac:189:181:347:85", "SlaughterHollow:148:120:413:55", "SoferasNaze:148:146:484:166", "SouthpointTower:312:254:59:310", "Southshore:229:219:383:352", "Strahnbrad:275:193:505:44", "TarrenMill:165:203:494:226", "TheHeadland:105:148:390:255", "TheUplands:212:160:441:0",},
				["Hinterlands"] = {"AeriePeak:238:267:0:236", "Agolwatha:208:204:367:159", "JinthaAlor:287:289:487:334", "PlaguemistRavine:191:278:133:105", "QuelDanilLodge:241:211:220:181", "Seradane:303:311:475:5", "ShadraAlor:240:196:220:379", "Shaolwatha:281:261:565:208", "SkulkRock:176:235:490:195", "TheAltarofZul:225:196:357:343", "TheCreepingRuin:199:199:390:252", "TheOverlookCliffs:244:401:677:267", "ValorwindLake:199:212:286:269", "Zunwatha:226:225:152:284",},
				["LochModan"] = {"GrizzlepawRidge:273:230:245:324", "IronbandsExcavationSite:397:291:481:296", "MogroshStronghold:294:249:549:52", "NorthgatePass:319:289:16:0", "SilverStreamMine:225:252:221:0", "StonesplinterValley:273:294:177:345", "StronewroughtDam:333:200:339:0", "TheFarstriderLodge:349:292:570:209", "TheLoch:330:474:340:81", "Thelsamar:455:295:0:146", "ValleyofKings:310:345:0:311",},
				["Redridge"] = {"AlthersMill:228:247:350:139", "CampEverstill:189:193:445:286", "GalardellValley:428:463:574:0", "LakeEverstill:464:250:81:214", "LakeridgeHighway:392:352:148:316", "Lakeshire:410:256:0:110", "RedridgeCanyons:413:292:37:0", "RendersCamp:357:246:214:0", "RendersValley:427:291:451:377", "ShalewindCanyon:306:324:688:283", "StonewatchFalls:316:182:525:302", "StonewatchKeep:228:420:480:0", "ThreeCorners:323:406:0:256",},
				["RuinsofGilneas"] = {"GilneasPuzzle:1002:668:0:0",},
				["Gilneas"] = {"NorthgateWoods:282:298:482:14", "GilneasCity:282:263:483:210", "StormglenVillage:321:203:516:465", "HammondFarmstead:194:236:167:352", "HaywardFishery:177:219:293:449", "TempestsReach:350:345:652:290", "TheHeadlands:328:336:160:0", "Duskhaven:286:178:272:333", "NorthernHeadlands:267:314:387:0", "Keelharbor:280:342:298:95", "CrowleyOrchard:210:166:261:427", "EmberstoneMine:281:351:639:43", "Greymanemanor:244:241:141:202", "KorothsDen:222:268:393:386", "TheBlackwald:280:224:504:394",},
				["Gilneas_terrain1"] = {"NorthgateWoods:282:298:482:14", "GilneasCity:282:263:483:210", "StormglenVillage:321:203:516:465", "HammondFarmstead:194:236:167:352", "HaywardFishery:177:219:293:449", "TempestsReach:350:345:652:290", "TheHeadlands:328:336:160:0", "Duskhaven:286:178:272:333", "NorthernHeadlands:267:314:387:0", "Keelharbor:280:342:298:95", "CrowleyOrchard:210:166:261:427", "EmberstoneMine:281:351:639:43", "Greymanemanor:244:241:141:202", "KorothsDen:222:268:393:386", "TheBlackwald:280:224:504:394",},
				["Gilneas_terrain2"] = {"NorthgateWoods:282:298:482:14", "GilneasCity:282:263:483:210", "StormglenVillage:321:203:516:465", "HammondFarmstead:194:236:167:352", "HaywardFishery:177:219:293:449", "TempestsReach:350:345:652:290", "TheHeadlands:328:336:160:0", "Duskhaven:286:178:272:333", "NorthernHeadlands:267:314:387:0", "Keelharbor:280:342:298:95", "CrowleyOrchard:210:166:261:427", "EmberstoneMine:281:351:639:43", "Greymanemanor:244:241:141:202", "KorothsDen:222:268:393:386", "TheBlackwald:280:224:504:394",},
				["SearingGorge"] = {"BlackcharCave:375:307:0:361", "BlackrockMountain:304:244:243:424", "DustfireValley:392:355:588:0", "FirewatchRidge:365:393:0:75", "GrimsiltWorksite:441:266:531:241", "TannerCamp:571:308:413:360", "TheCauldron:481:360:232:171", "ThoriumPoint:429:301:255:38",},
				["Silverpine"] = {"Ambermill:283:243:509:250", "BerensPeril:318:263:505:405", "DeepElemMine:217:198:483:212", "FenrisIsle:352:302:581:15", "ForsakenHighCommand:361:175:445:0", "ForsakenRearGuard:186:238:369:0", "NorthTidesBeachhead:174:199:323:68", "NorthTidesRun:281:345:147:0", "OlsensFarthing:251:167:312:249", "ShadowfangKeep:179:165:337:337", "TheBattlefront:255:180:349:429", "TheDecrepitFields:176:152:471:156", "TheForsakenFront:152:189:433:327", "TheGreymaneWall:409:162:318:506", "TheSepulcher:218:200:341:157", "TheSkitteringDark:227:172:236:0", "ValgansField:162:172:461:77",},
				["StranglethornJungle"] = {"BalAlRuins:159:137:267:168", "BaliaMahRuins:239:205:397:243", "Bambala:190:176:566:164", "FortLivingston:230:170:398:375", "GromGolBaseCamp:167:179:298:228", "KalAiRuins:139:150:354:184", "KurzensCompound:244:238:499:0", "LakeNazferiti:240:228:413:95", "Mazthoril:350:259:488:364", "MizjahRuins:157:173:387:246", "MoshOggOgreMound:234:206:543:253", "NesingwarysExpedition:227:190:306:63", "RebelCamp:302:166:306:0", "RuinsOfZulKunda:228:265:158:0", "TheVileReef:236:224:140:208", "ZulGurub:376:560:626:0", "ZuuldalaRuins:324:263:9:22",},
				["Sunwell"] = {"SunsReachHarbor:512:416:252:252", "SunsReachSanctum:512:512:251:4",},
				["SwampOfSorrows"] = {"Bogpaddle:262:193:600:0", "IthariusCave:268:316:7:242", "MarshtideWatch:330:342:478:0", "MistyreedStrand:402:668:600:0", "MistyValley:268:285:0:80", "PoolOfTears:257:229:575:238", "Sorrowmurk:229:418:703:80", "SplinterspearJunction:238:343:194:236", "Stagalbog:347:303:540:360", "Stonard:357:308:297:258", "TheHarborage:266:284:161:79", "TheShiftingMire:292:360:331:24",},
				["TheCapeOfStranglethorn"] = {"BootyBay:225:255:289:341", "CrystalveinMine:271:204:528:73", "GurubashiArena:238:260:345:0", "HardwrenchHideaway:356:221:208:116", "JagueroIsle:240:264:471:404", "MistvaleValley:253:242:408:248", "NekmaniWellspring:246:221:292:213", "RuinsofAboraz:184:176:533:181", "RuinsofJubuwal:155:221:468:119", "TheSundering:244:209:452:0", "WildShore:236:276:340:392",},
				["Tirisfal"] = {"AgamandMills:285:260:324:90", "BalnirFarmstead:242:179:594:324", "BrightwaterLake:210:292:573:122", "Brill:199:182:480:252", "CalstonEstate:179:169:389:255", "ColdHearthManor:212:177:418:317", "CrusaderOutpost:175:210:686:232", "Deathknell:431:407:9:207", "GarrensHaunt:190:214:477:129", "NightmareVale:225:281:347:325", "RuinsofLorderon:390:267:423:359", "ScarletMonastery:262:262:740:47", "ScarletWatchPost:161:234:692:99", "SollidenFarmstead:286:225:201:192", "TheBulwark:293:338:709:330", "VenomwebVale:250:279:752:150",},
				["TwilightHighlands"] = {"Bloodgulch:215:157:416:205", "CrucibleOfCarnage:203:208:387:268", "Crushblow:182:195:370:447", "DragonmawPass:283:206:76:120", "DragonmawPort:251:207:631:245", "DunwaldRuins:197:218:395:367", "FirebeardsPatrol:215:181:499:265", "GlopgutsHollow:174:190:291:89", "GorshakWarCamp:194:170:543:220", "GrimBatol:230:276:83:223", "Highbank:220:227:697:403", "HighlandForest:239:232:482:330", "HumboldtConflaguration:143:141:344:89", "Kirthaven:308:267:482:0", "ObsidianForest:342:288:436:380", "RuinsOfDrakgor:206:182:296:0", "SlitheringCove:198:201:622:169", "TheBlackBreach:211:210:498:121", "TheGullet:175:180:269:179", "TheKrazzworks:226:232:654:0", "TheTwilightBreach:199:212:312:192", "TheTwilightCitadel:361:354:151:314", "TheTwilightGate:165:199:327:356", "Thundermar:238:229:374:93", "TwilightShore:260:202:610:345", "VermillionRedoubt:324:264:71:16", "VictoryPoint:177:159:302:306", "WeepingWound:214:190:358:0", "WyrmsBend:191:198:205:232",},
				["TwilightHighlands_terrain1"] = {"Bloodgulch:215:157:416:205", "CrucibleOfCarnage:203:208:387:268", "Crushblow:182:195:370:447", "DragonmawPass:283:206:76:120", "DragonmawPort:251:207:631:245", "DunwaldRuins:197:218:395:367", "FirebeardsPatrol:215:181:499:265", "GlopgutsHollow:174:190:291:89", "GorshakWarCamp:194:170:543:220", "GrimBatol:230:276:83:223", "Highbank:220:227:697:403", "HighlandForest:239:232:482:330", "HumboldtConflaguration:143:141:344:89", "Kirthaven:308:267:482:0", "ObsidianForest:342:288:436:380", "RuinsOfDrakgor:206:182:296:0", "SlitheringCove:198:201:622:169", "TheBlackBreach:211:210:498:121", "TheGullet:175:180:269:179", "TheKrazzworks:226:232:654:0", "TheTwilightBreach:199:212:312:192", "TheTwilightCitadel:361:354:151:314", "TheTwilightGate:165:199:327:356", "Thundermar:238:229:374:93", "TwilightShore:260:202:610:345", "VermillionRedoubt:324:264:71:16", "VictoryPoint:177:159:302:306", "WeepingWound:214:190:358:0", "WyrmsBend:191:198:205:232",},
				["WesternPlaguelands"] = {"Andorhal:464:325:96:343", "CaerDarrow:194:208:601:390", "DalsonsFarm:325:192:300:232", "DarrowmereLake:492:314:510:354", "FelstoneField:241:212:229:228", "GahrronsWithering:241:252:495:213", "Hearthglen:432:271:235:0", "NorthridgeLumberCamp:359:182:231:123", "RedpineDell:290:133:286:211", "SorrowHill:368:220:261:448", "TheBulwark:316:316:48:235", "TheWeepingCave:185:230:551:151", "TheWrithingHaunt:169:195:472:332", "ThondrorilRiver:311:436:533:0",},
				["Westfall"] = {"AlexstonFarmstead:346:222:167:263", "DemontsPlace:201:195:203:376", "FurlbrowsPumpkinFarm:197:213:394:0", "GoldCoastQuarry:235:306:199:79", "JangoloadMine:196:229:311:0", "Moonbrook:232:213:308:325", "SaldeansFarm:244:237:451:81", "SentinelHill:229:265:404:226", "TheDaggerHills:292:273:303:395", "TheDeadAcre:193:273:531:200", "TheDustPlains:317:261:480:378", "TheGapingChasm:184:217:294:168", "TheJansenStead:202:179:474:0", "TheMolsenFarm:202:224:348:118", "WestfallLighthouse:211:167:221:477",},
				["Wetlands"] = {"AngerfangEncampment:236:256:359:201", "BlackChannelMarsh:301:232:37:240", "BluegillMarsh:321:248:31:102", "DireforgeHills:329:228:506:34", "DunAlgaz:298:215:346:419", "DunModr:257:185:356:7", "GreenwardensGrove:250:269:460:102", "IronbeardsTomb:185:224:372:76", "MenethilHarbor:325:363:0:297", "MosshideFen:369:235:506:232", "RaptorRidge:256:245:599:123", "Satlspray:250:282:218:0", "SlabchiselsSurvey:300:316:532:352", "SundownMarsh:276:243:121:63", "ThelganRock:258:207:371:335", "WhelgarsExcavationSite:298:447:185:195",},

				-- Kalimdor
				["AhnQirajTheFallenKingdom"] = {"AQKingdom:887:668:115:0",},
				["Ashenvale"] = {"Astranaar:251:271:255:164", "BoughShadow:166:211:836:148", "FallenSkyLake:287:276:529:385", "FelfireHill:277:333:714:317", "LakeFalathim:184:232:112:148", "MaelstrasPost:246:361:188:0", "NightRun:221:257:595:253", "OrendilsRetreat:244:251:143:0", "RaynewoodRetreat:231:256:481:221", "Satyrnaar:235:236:696:154", "SilverwindRefuge:347:308:338:335", "TheHowlingVale:325:239:473:97", "TheRuinsofStardust:236:271:210:331", "TheShrineofAssenia:306:283:40:275", "TheZoramStrand:262:390:0:0", "ThistlefurVillage:314:241:255:78", "ThunderPeak:203:310:377:121", "WarsongLumberCamp:231:223:771:265",},
				["Aszhara"] = {"BearsHead:256:224:113:141", "BilgewaterHarbor:587:381:395:127", "BitterReaches:321:247:477:0", "BlackmawHold:260:267:204:53", "DarnassianBaseCamp:243:262:343:3", "GallywixPleasurePalace:250:230:70:222", "LakeMennar:210:232:245:377", "OrgimmarRearGate:352:274:22:344", "RavencrestMonument:295:267:476:401", "RuinsofArkkoran:219:193:575:121", "RuinsofEldarath:218:237:228:229", "StormCliffs:207:232:407:403", "TheSecretLab:184:213:353:396", "TheShatteredStrand:206:329:316:168", "TowerofEldara:306:337:684:22",},
				["AzuremystIsle"] = {"AmmenFord:256:256:515:279", "AmmenVale:475:512:527:104", "AzureWatch:256:256:383:249", "BristlelimbVillage:256:256:174:363", "Emberglade:256:256:488:24", "FairbridgeStrand:256:128:356:0", "GreezlesCamp:256:256:507:350", "MoongrazeWoods:256:256:449:183", "OdesyusLanding:256:256:352:378", "PodCluster:256:256:281:305", "PodWreckage:128:256:462:349", "SiltingShore:256:256:291:3", "SilvermystIsle:256:222:23:446", "StillpineHold:256:256:365:49", "TheExodar:512:512:74:85", "ValaarsBerth:256:256:176:303", "WrathscalePoint:256:247:220:421",},
				["Barrens"] = {"BoulderLodeMine:278:209:511:7", "DreadmistPeak:241:195:290:104", "FarWatchPost:207:332:555:129", "GroldomFarm:243:217:448:127", "MorshanRampart:261:216:258:6", "Ratchet:219:175:547:379", "TheCrossroads:233:193:362:275", "TheDryHills:283:270:116:57", "TheForgottenPools:446:256:100:208", "TheMerchantCoast:315:212:556:456", "TheSludgeFen:257:249:403:6", "TheStagnantOasis:336:289:344:379", "TheWailingCaverns:377:325:152:318", "ThornHill:239:231:481:254",},
				["BloodmystIsle"] = {"AmberwebPass:256:512:44:62", "Axxarien:256:256:297:136", "BlacksiltShore:512:242:177:426", "Bladewood:256:256:367:209", "BloodscaleIsle:239:256:763:256", "BloodWatch:256:256:437:258", "BristlelimbEnclave:256:256:546:410", "KesselsCrossing:485:141:517:527", "Middenvale:256:256:414:406", "Mystwood:256:185:309:483", "Nazzivian:256:256:250:404", "RagefeatherRidge:256:256:481:117", "RuinsofLorethAran:256:256:556:216", "TalonStand:256:256:657:78", "TelathionsCamp:128:128:180:216", "TheBloodcursedReef:256:256:729:54", "TheBloodwash:256:256:302:27", "TheCrimsonReach:256:256:555:87", "TheCryoCore:256:256:293:285", "TheFoulPool:256:256:221:136", "TheHiddenReef:256:256:205:39", "TheLostFold:256:198:503:470", "TheVectorCoil:512:430:43:238", "TheWarpPiston:256:256:451:29", "VeridianPoint:256:256:637:0", "VindicatorsRest:256:256:232:242", "WrathscaleLair:256:256:598:338", "WyrmscarIsland:256:256:613:82",},
				["Desolace"] = {"CenarionWildlands:312:285:415:156", "GelkisVillage:274:196:207:472", "KodoGraveyard:250:215:360:273", "MagramTerritory:289:244:613:170", "MannorocCoven:326:311:381:357", "NijelsPoint:231:257:573:0", "RanzjarIsle:161:141:210:0", "Sargeron:317:293:655:0", "ShadowbreakRavine:292:266:637:402", "ShadowpreyVillage:222:299:142:369", "ShokThokar:309:349:589:319", "SlitherbladeShore:338:342:208:24", "TethrisAran:274:145:399:0", "ThargadsCamp:212:186:275:376", "ThunderAxeFortress:220:205:440:49", "ValleyofSpears:321:275:170:196",},
				["Durotar"] = {"DrygulchRavine:236:196:415:60", "EchoIsles:330:255:429:413", "NorthwatchFoothold:162:157:399:440", "Orgrimmar:259:165:309:0", "RazorHill:224:227:431:157", "RazormaneGrounds:248:158:302:264", "SenjinVillage:192:184:457:406", "SkullRock:208:157:438:0", "SouthfuryWatershed:244:222:282:174", "ThunderRidge:220:218:295:48", "TiragardeKeep:210:200:462:298", "ValleyOfTrials:254:258:304:312",},
				["Dustwallow"] = {"AlcazIsland:206:200:656:21", "BlackhoofVillage:344:183:199:0", "BrackenwllVillage:384:249:133:59", "DirehornPost:279:301:358:169", "Mudsprocket:433:351:109:313", "ShadyRestInn:317:230:137:188", "TheramoreIsle:305:247:542:223", "TheWyrmbog:436:299:359:369", "WitchHill:270:353:428:0",},
				["Dustwallow_terrain1"] = {"AlcazIsland:206:200:656:21", "BlackhoofVillage:344:183:199:0", "BrackenwllVillage:384:249:133:59", "DirehornPost:279:301:358:169", "Mudsprocket:433:351:109:313", "ShadyRestInn:317:230:137:188", "TheramoreIsle:305:247:542:223", "TheWyrmbog:436:299:359:369", "WitchHill:270:353:428:0",},
				["EversongWoods"] = {"AzurebreezeCoast:256:256:669:228", "DuskwitherGrounds:256:256:605:253", "EastSanctum:256:256:460:373", "ElrendarFalls:128:256:580:399", "FairbreezeVilliage:256:256:386:386", "FarstriderRetreat:256:128:524:359", "GoldenboughPass:256:128:243:469", "LakeElrendar:128:197:584:471", "NorthSanctum:256:256:361:298", "RuinsofSilvermoon:256:256:307:136", "RunestoneFalithas:256:172:378:496", "RunestoneShandor:256:174:464:494", "SatherilsHaven:256:256:324:384", "SilvermoonCity:512:512:440:87", "StillwhisperPond:256:256:474:314", "SunsailAnchorage:256:128:231:404", "SunstriderIsle:512:512:195:5", "TheGoldenStrand:128:253:183:415", "TheLivingWood:128:248:511:420", "TheScortchedGrove:256:128:255:507", "ThuronsLivery:256:128:539:305", "TorWatha:256:353:648:315", "TranquilShore:256:256:215:298", "WestSanctum:128:256:292:319", "Zebwatha:128:193:554:475",},
				["Felwood"] = {"BloodvenomFalls:345:192:220:231", "DeadwoodVillage:173:163:410:505", "EmeraldSanctuary:274:212:394:382", "FelpawVillage:307:161:471:0", "IrontreeWoods:261:273:406:55", "JadefireGlen:229:210:288:458", "JadefireRun:263:199:303:9", "Jaedenar:319:176:234:317", "MorlosAran:187:176:476:484", "RuinsofConstellas:268:214:278:359", "ShatterScarVale:343:250:243:107", "TalonbranchGlade:209:226:531:57",},
				["Feralas"] = {"CampMojache:174:220:671:181", "DarkmistRuins:172:198:568:287", "DireMaul:265:284:485:101", "FeathermoonStronghold:217:192:362:237", "FeralScar:191:179:457:281", "GordunniOutpost:192:157:663:116", "GrimtotemCompund:159:218:607:170", "LowerWilds:207:209:756:191", "RuinsofFeathermoon:208:204:186:229", "RuinsofIsildien:206:237:467:354", "TheForgottenCoast:194:304:375:343", "TheTwinColossals:350:334:271:0", "WrithingDeep:232:206:652:298",},
				["Hyjal"] = {"ArchimondesVengeance:270:300:320:5", "AshenLake:282:418:6:78", "DarkwhisperGorge:320:471:682:128", "DireforgeHill:270:173:303:197", "GatesOfSothann:272:334:622:320", "Nordrassil:537:323:392:0", "SethriasRoost:277:232:139:436", "ShrineOfGoldrinn:291:321:116:17", "TheRegrowth:441:319:52:253", "TheScorchedPlain:365:264:411:216", "TheThroneOfFlame:419:290:318:378",},
				["Hyjal_terrain1"] = {"ArchimondesVengeance:270:300:320:5", "AshenLake:282:418:6:78", "DarkwhisperGorge:320:471:682:128", "DireforgeHill:270:173:303:197", "GatesOfSothann:272:334:622:320", "Nordrassil:537:323:392:0", "SethriasRoost:277:232:139:436", "ShrineOfGoldrinn:291:321:116:17", "TheRegrowth:441:319:52:253", "TheScorchedPlain:365:264:411:216", "TheThroneOfFlame:419:290:318:378",},
				["Moonglade"] = {"LakeEluneara:431:319:219:273", "Nighthaven:346:244:370:135", "ShrineofRemulos:271:296:209:91", "StormrageBarrowDens:275:346:542:210",},
				["Mulgore"] = {"BaeldunDigsite:218:192:226:220", "BloodhoofVillage:302:223:319:273", "PalemaneRock:172:205:248:321", "RavagedCaravan:187:165:435:224", "RedCloudMesa:446:264:286:401", "RedRocks:186:185:514:43", "StonetalonPass:237:184:201:0", "TheGoldenPlains:186:216:448:101", "TheRollingPlains:260:243:527:291", "TheVentureCoMine:208:300:530:138", "ThunderBluff:373:259:208:62", "ThunderhornWaterWell:201:167:333:202", "WildmaneWaterWell:190:172:331:0", "WindfuryRidge:222:202:400:0", "WinterhoofWaterWell:174:185:449:340",},
				["Silithus"] = {"CenarionHold:292:260:427:143", "HiveAshi:405:267:345:4", "HiveRegal:489:358:380:310", "HiveZora:542:367:0:206", "SouthwindVillage:309:243:550:181", "TheCrystalVale:329:246:126:0", "TheScarabWall:580:213:0:455", "TwilightBaseCamp:434:231:100:151", "ValorsRest:315:285:614:0",},
				["SouthernBarrens"] = {"BaelModan:269:211:398:457", "Battlescar:384:248:274:307", "ForwardCommand:216:172:423:251", "FrazzlecrazMotherload:242:195:269:436", "HonorsStand:315:170:201:0", "HuntersHill:218:178:300:64", "NorthwatchHold:280:279:548:147", "RazorfenKraul:214:140:273:528", "RuinsofTaurajo:285:171:244:286", "TheOvergrowth:355:226:289:117", "VendettaPoint:254:214:267:196",},
				["StonetalonMountains"] = {"BattlescarValley:290:297:220:189", "BoulderslideRavine:194:156:532:512", "CliffwalkerPost:241:192:366:95", "GreatwoodVale:322:220:602:448", "KromgarFortress:183:196:588:341", "Malakajin:211:131:618:537", "MirkfallonLake:244:247:417:143", "RuinsofEldrethar:221:235:367:411", "StonetalonPeak:305:244:265:0", "SunRockRetreat:222:222:353:285", "ThaldarahOverlook:210:189:252:121", "TheCharredVale:277:274:199:368", "UnearthedGrounds:265:206:654:369", "WebwinderHollow:164:258:479:401", "WebwinderPath:267:352:468:263", "WindshearCrag:374:287:533:179", "WindshearHold:176:189:516:289",},
				["Tanaris"] = {"AbyssalSands:255:194:297:148", "BrokenPillar:195:163:413:211", "CavernsofTime:213:173:507:238", "DunemaulCompound:231:177:305:257", "EastmoonRuins:173:163:380:341", "Gadgetzan:189:180:412:92", "GadgetzanBay:254:341:479:9", "LandsEndBeach:224:216:431:452", "LostRiggerCover:178:243:615:201", "SandsorrowWatch:214:149:293:99", "SouthbreakShore:274:186:437:289", "SouthmoonRuins:232:211:301:349", "TheGapingChasm:225:187:448:364", "TheNoxiousLair:179:190:258:211", "ThistleshrubValley:221:293:185:280", "ValleryoftheWatchers:269:190:255:431", "ZulFarrak:315:190:184:0",},
				["Teldrassil"] = {"BanethilHollow:175:235:374:221", "Darnassus:298:337:149:181", "GalardellValley:178:186:466:237", "GnarlpineHold:198:181:347:355", "LakeAlameth:289:202:422:310", "PoolsofArlithrien:140:210:345:243", "RutheranVillage:317:220:329:448", "Shadowglen:241:217:481:104", "StarbreezeVillage:187:196:544:217", "TheCleft:144:226:432:109", "TheOracleGlade:194:244:276:90", "WellspringLake:165:249:382:83",},
				["ThousandNeedles"] = {"DarkcloudPinnacle:317:252:169:116", "FreewindPost:436:271:276:186", "Highperch:246:380:0:134", "RazorfenDowns:361:314:298:0", "RustmaulDiveSite:234:203:527:465", "SouthseaHoldfast:246:256:756:412", "SplithoofHeights:431:410:571:49", "TheGreatLift:272:232:136:0", "TheShimmeringDeep:411:411:591:257", "TheTwilightWithering:374:339:347:329", "TwilightBulwark:358:418:125:241", "WestreachSummit:280:325:0:0",},
				["Uldum"] = {"AkhenetFields:164:185:471:277", "CradelOfTheAncient:202:169:341:402", "HallsOfOrigination:269:242:599:184", "KhartutsTomb:203:215:542:0", "LostCityOfTheTolVir:233:321:527:291", "Marat:160:193:406:174", "Nahom:237:194:583:162", "Neferset:209:254:407:384", "ObeliskOfTheMoon:400:224:110:0", "ObeliskOfTheStars:196:170:551:121", "ObeliskOfTheSun:269:203:340:282", "Orsis:249:243:264:136", "Ramkahen:228:227:411:67", "RuinsOfAhmtul:278:173:365:0", "RuinsOfAmmon:203:249:217:289", "Schnottzslanding:312:289:28:221", "TahretGrounds:150:159:545:193", "TempleofUldum:296:209:132:127", "TheCursedlanding:237:316:752:170", "TheGateofUnendingCycles:161:236:647:15", "TheTrailOfDevestation:206:204:657:349", "TheVortexPinnacle:213:195:656:473", "ThroneOfTheFourWinds:270:229:229:433", "VirnaalDam:151:144:479:215",},
				["Uldum_terrain1"] = {"AkhenetFields:164:185:471:277", "CradelOfTheAncient:202:169:341:402", "HallsOfOrigination:269:242:599:184", "KhartutsTomb:203:215:542:0", "LostCityOfTheTolVir:233:321:527:291", "Marat:160:193:406:174", "Nahom:237:194:583:162", "Neferset:209:254:407:384", "ObeliskOfTheMoon:400:224:110:0", "ObeliskOfTheStars:196:170:551:121", "ObeliskOfTheSun:269:203:340:282", "Orsis:249:243:264:136", "Ramkahen:228:227:411:67", "RuinsOfAhmtul:278:173:365:0", "RuinsOfAmmon:203:249:217:289", "Schnottzslanding:312:289:28:221", "TahretGrounds:150:159:545:193", "TempleofUldum:296:209:132:127", "TheCursedlanding:237:316:752:170", "TheGateofUnendingCycles:161:236:647:15", "TheTrailOfDevestation:206:204:657:349", "TheVortexPinnacle:213:195:656:473", "ThroneOfTheFourWinds:270:229:229:433", "VirnaalDam:151:144:479:215",},
				["UngoroCrater"] = {"FirePlumeRidge:321:288:356:192", "FungalRock:224:191:557:0", "GolakkaHotSprings:309:277:145:226", "IronstonePlateau:197:222:706:201", "LakkariTarPits:432:294:305:0", "MarshalsStand:204:170:462:330", "MossyPile:186:185:328:179", "TerrorRun:316:293:162:357", "TheMarshlands:263:412:573:256", "TheRollingGarden:337:321:565:39", "TheScreamingReaches:332:332:157:0", "TheSlitheringScar:381:274:335:384",},
				["Winterspring"] = {"Everlook:194:229:482:195", "FrostfireHotSprings:376:289:93:118", "FrostsaberRock:332:268:304:0", "FrostwhisperGorge:317:183:424:474", "IceThistleHills:249:217:581:314", "LakeKeltheril:271:258:372:268", "Mazthoril:257:238:399:340", "OwlWingThicket:254:150:556:439", "StarfallVillage:367:340:229:33", "TheHiddenGrove:333:255:500:17", "TimbermawPost:362:252:92:302", "WinterfallVillage:221:209:588:181",},

				-- Outland
				["BladesEdgeMountains"] = {"BashirLanding:256:256:422:0", "BladedGulch:256:256:623:147", "BladesipreHold:256:507:314:161", "BloodmaulCamp:256:256:412:95", "BloodmaulOutpost:256:297:342:371", "BrokenWilds:256:256:733:109", "CircleofWrath:256:256:439:210", "DeathsDoor:256:419:512:249", "ForgeCampAnger:416:256:586:147", "ForgeCampTerror:512:252:144:416", "ForgeCampWrath:256:256:254:176", "Grishnath:256:256:286:28", "GruulsLayer:256:256:527:81", "JaggedRidge:256:254:446:414", "MokNathalVillage:256:256:658:297", "RavensWood:512:256:214:55", "RazorRidge:256:336:533:332", "RidgeofMadness:256:410:554:258", "RuuanWeald:256:512:479:98", "Skald:256:256:673:71", "Sylvanaar:256:318:289:350", "TheCrystalpine:256:256:585:0", "ThunderlordStronghold:256:396:405:272", "VeilLashh:256:240:271:428", "VeilRuuan:256:128:563:151", "VekhaarStand:256:256:629:406", "VortexPinnacle:256:462:166:206",},
				["Hellfire"] = {"DenofHaalesh:256:256:182:412", "ExpeditionArmory:512:255:261:413", "FalconWatch:512:342:183:326", "FallenSkyRidge:256:256:34:142", "ForgeCampRage:512:512:478:25", "HellfireCitadel:256:458:338:210", "HonorHold:256:256:469:298", "MagharPost:256:256:206:110", "PoolsofAggonar:256:512:326:45", "RuinsofShanaar:256:378:25:290", "TempleofTelhamat:512:512:38:152", "TheLegionFront:256:512:579:128", "TheStairofDestiny:256:512:737:156", "Thrallmar:256:256:467:154", "ThroneofKiljaeden:512:256:477:6", "VoidRidge:256:256:705:368", "WarpFields:256:260:308:408", "ZethGor:422:238:580:430",},
				["Nagrand"] = {"BurningBladeRUins:256:334:660:334", "ClanWatch:256:256:532:363", "ForgeCampFear:512:420:36:248", "ForgeCampHate:256:256:162:154", "Garadar:256:256:431:143", "Halaa:256:256:335:193", "KilsorrowFortress:256:241:558:427", "LaughingSkullRuins:256:256:351:52", "OshuGun:512:334:168:334", "RingofTrials:256:256:533:267", "SouthwindCleft:256:256:391:258", "SunspringPost:256:256:219:199", "Telaar:256:256:387:390", "ThroneoftheElements:256:256:504:53", "TwilightRidge:256:512:10:107", "WarmaulHill:256:256:157:32", "WindyreedPass:256:256:598:79", "WindyreedVillage:256:256:666:233", "ZangarRidge:256:256:277:54",},
				["Netherstorm"] = {"Area52:256:128:241:388", "ArklonRuins:256:256:328:397", "CelestialRidge:256:256:644:173", "EcoDomeFarfield:256:256:396:10", "EtheriumStagingGrounds:256:256:481:208", "ForgeBaseOG:256:256:237:22", "KirinVarVillage:256:145:490:523", "ManaforgeBanar:256:387:147:281", "ManaforgeCoruu:256:179:357:489", "ManaforgeDuro:256:256:465:336", "ManafrogeAra:256:256:171:155", "Netherstone:256:256:411:20", "NetherstormBridge:256:256:132:294", "RuinedManaforge:256:256:513:138", "RuinsofEnkaat:256:256:253:301", "RuinsofFarahlon:512:256:354:49", "SocretharsSeat:256:256:229:38", "SunfuryHold:256:217:454:451", "TempestKeep:409:384:593:284", "TheHeap:256:213:239:455", "TheScrapField:256:256:356:261", "TheStormspire:256:256:298:134",},
				["ShadowmoonValley"] = {"AltarofShatar:256:256:520:93", "CoilskarPoint:512:512:348:8", "EclipsePoint:512:358:343:310", "IlladarPoint:256:256:143:256", "LegionHold:512:512:104:155", "NetherwingCliffs:256:256:554:308", "NetherwingLedge:492:223:510:445", "ShadowmoonVilliage:512:512:116:35", "TheBlackTemple:396:512:606:126", "TheDeathForge:256:512:290:129", "TheHandofGuldan:512:512:394:90", "TheWardensCage:512:410:469:258", "WildhammerStronghold:512:439:168:229",}, 
				["TerokkarForest"] = {"AllerianStronghold:256:256:480:277", "AuchenaiGrounds:256:234:247:434", "BleedingHollowClanRuins:256:367:103:301", "BonechewerRuins:256:256:521:275", "CarrionHill:256:256:377:272", "CenarionThicket:256:256:314:0", "FirewingPoint:385:512:617:149", "GrangolvarVilliage:512:256:143:171", "RaastokGlade:256:256:505:154", "RazorthornShelf:256:256:478:19", "RefugeCaravan:128:256:316:268", "RingofObservance:256:256:310:345", "SethekkTomb:256:256:245:289", "ShattrathCity:512:512:104:4", "SkethylMountains:512:320:449:348", "SmolderingCaravan:256:208:321:460", "StonebreakerHold:256:256:397:165", "TheBarrierHills:256:256:116:4", "Tuurem:256:512:455:34", "VeilRhaze:256:256:222:362", "WrithingMound:256:256:417:327",},
				["Zangarmarsh"] = {"AngoroshGrounds:256:256:88:50", "AngoroshStronghold:256:128:124:0", "BloodscaleEnclave:256:256:596:412", "CenarionRefuge:308:256:694:321", "CoilfangReservoir:256:512:462:90", "FeralfenVillage:512:336:314:332", "MarshlightLake:256:256:81:152", "OreborHarborage:256:512:329:25", "QuaggRidge:256:343:141:325", "Sporeggar:512:256:20:202", "Telredor:256:512:569:112", "TheDeadMire:286:512:716:128", "TheHewnBog:256:512:219:51", "TheLagoon:256:256:512:303", "TheSpawningGlen:256:256:31:339", "TwinspireRuins:256:256:342:249", "UmbrafenVillage:256:207:720:461", "ZabraJin:256:256:175:232",},

				-- Northrend
				["BoreanTundra"] = {"AmberLedge:244:214:325:140", "BorGorokOutpost:396:203:314:0", "Coldarra:460:381:50:0", "DeathsStand:289:279:707:181", "GarroshsLanding:267:378:153:238", "Kaskala:385:316:509:214", "RiplashStrand:382:258:293:383", "SteeljawsCaravan:244:319:397:66", "TempleCityOfEnKilah:290:292:712:15", "TheDensOfDying:203:209:662:11", "TheGeyserFields:375:342:480:0", "TorpsFarm:186:276:272:237", "ValianceKeep:259:302:457:264", "WarsongStronghold:260:278:329:237",},
				["CrystalsongForest"] = {"ForlornWoods:544:668:129:0", "SunreaversCommand:446:369:536:40", "TheAzureFront:416:424:0:244", "TheDecrepitFlow:288:222:0:0", "TheGreatTree:252:260:0:91", "TheUnboundThicket:502:477:500:105", "VioletStand:264:303:0:176", "WindrunnersOverlook:558:285:444:383",},
				["Dragonblight"] = {"AgmarsHammer:236:218:258:203", "Angrathar:306:242:210:0", "ColdwindHeights:213:219:403:0", "EmeraldDragonshrine:196:218:543:362", "GalakrondsRest:258:225:433:118", "IcemistVillage:235:337:134:165", "LakeIndule:356:300:217:313", "LightsRest:299:278:703:7", "Naxxramas:311:272:691:160", "NewHearthglen:214:261:614:358", "ObsidianDragonshrine:304:203:256:104", "RubyDragonshrine:188:211:374:208", "ScarletPoint:235:354:569:7", "TheCrystalVice:229:259:487:0", "TheForgottenShore:301:286:698:332", "VenomSpite:226:212:661:264", "WestwindRefugeeCamp:229:299:42:187", "WyrmrestTemple:317:353:453:219",},
				["GrizzlyHills"] = {"AmberpineLodge:278:290:217:244", "BlueSkyLoggingGrounds:249:235:232:129", "CampOneqwah:324:265:548:137", "ConquestHold:332:294:17:307", "DrakilJinRuins:351:284:607:41", "DrakTheronKeep:382:285:0:46", "DunArgol:455:400:547:257", "GraniteSprings:356:224:7:207", "GrizzleMaw:294:227:358:187", "RageFangShrine:475:362:312:294", "ThorModan:329:246:509:0", "UrsocsDen:328:260:331:32", "VentureBay:274:207:18:461", "Voldrune:283:247:176:421",},
				["HowlingFjord"] = {"AncientLift:177:191:342:351", "ApothecaryCamp:263:265:99:37", "BaelgunsExcavationSite:244:305:621:327", "Baleheim:174:173:576:170", "CampWinterHoof:223:209:354:0", "CauldrosIsle:181:178:490:161", "EmberClutch:213:256:283:203", "ExplorersLeagueOutpost:232:216:585:336", "FortWildervar:251:192:490:0", "GiantsRun:298:306:572:0", "Gjalerbron:242:189:225:0", "Halgrind:187:263:397:208", "IvaldsRuin:193:201:668:223", "Kamagua:333:265:99:278", "NewAgamand:284:308:415:360", "Nifflevar:178:208:595:240", "ScalawagPoint:350:258:168:410", "Skorn:238:232:343:108", "SteelGate:222:168:222:100", "TheTwistedGlade:266:210:420:57", "UtgardeKeep:248:382:477:216", "VengeanceLanding:223:338:664:25", "WestguardKeep:347:220:90:180",},
				["IcecrownGlacier"] = {"Aldurthar:373:375:355:37", "ArgentTournamentGround:314:224:616:30", "Corprethar:308:212:342:392", "IcecrownCitadel:308:202:392:466", "Jotunheim:393:474:22:122", "OnslaughtHarbor:204:268:0:167", "Scourgeholme:245:239:690:267", "SindragosasFall:300:343:626:31", "TheBombardment:248:243:538:181", "TheBrokenFront:283:231:558:329", "TheConflagration:227:210:327:305", "TheFleshwerks:219:283:218:291", "TheShadowVault:223:399:321:15", "Valhalas:238:240:217:50", "ValleyofEchoes:269:217:715:390", "Ymirheim:223:207:444:276",},
				["SholazarBasin"] = {"KartaksHold:329:293:76:375", "RainspeakerCanopy:207:235:427:244", "RiversHeart:468:329:359:339", "TheAvalanche:322:265:596:92", "TheGlimmeringPillar:294:327:308:34", "TheLifebloodPillar:312:369:501:134", "TheMakersOverlook:233:286:705:236", "TheMakersPerch:249:248:172:135", "TheMosslightPillar:239:313:265:355", "TheSavageThicket:293:229:396:51", "TheStormwrightsShelf:268:288:138:58", "TheSuntouchedPillar:455:316:82:186",},
				["TheStormPeaks"] = {"BorsBreath:322:195:109:375", "BrunnhildarVillage:305:298:339:370", "DunNiffelem:309:383:481:285", "EngineoftheMakers:210:179:316:296", "Frosthold:244:220:134:429", "GarmsBane:184:191:395:470", "NarvirsCradle:180:239:214:144", "Nidavelir:221:200:108:206", "SnowdriftPlains:205:232:162:143", "SparksocketMinefield:251:200:242:468", "TempleofLife:182:270:570:113", "TempleofStorms:169:164:239:301", "TerraceoftheMakers:363:341:292:122", "Thunderfall:306:484:627:179", "Ulduar:369:265:218:0", "Valkyrion:228:158:98:318",},
				["ZulDrak"] = {"AltarOfHarKoa:265:257:533:345", "AltarOfMamToth:311:317:575:88", "AltarOfQuetzLun:261:288:607:251", "AltarOfRhunok:247:304:431:127", "AltarOfSseratus:237:248:288:168", "AmphitheaterOfAnguish:266:254:289:287", "DrakSotraFields:286:265:326:358", "GunDrak:336:297:629:0", "Kolramas:302:231:380:437", "LightsBreach:321:305:181:363", "ThrymsEnd:272:268:0:247", "Voltarus:218:291:174:191", "Zeramas:307:256:7:412", "ZimTorga:249:258:479:241",},

				-- Cataclysm
				["Deepholm"] = {"CrimsonExpanse:462:400:540:12", "DeathwingsFall:454:343:549:297", "NeedlerockChasm:378:359:20:0", "NeedlerockSlag:370:285:0:146", "ScouredReach:516:287:448:0", "StoneHearth:371:354:0:314", "StormsFuryWreckage:292:285:458:383", "TempleOfEarth:355:345:287:177", "ThePaleRoost:467:273:85:0", "TherazanesThrone:274:156:434:0", "TheShatteredField:430:230:141:438", "TwilightOverlook:411:248:570:420", "TwilightTerrace:237:198:297:384",},
				["Kezan"] = {"BilgewaterPort:694:290:163:148", "Drudgetown:351:301:180:367", "FirstbankofKezan:376:343:98:325", "GallywixsVilla:303:452:0:41", "Kajamine:354:360:586:308", "KajaroField:250:307:383:260", "KezanMap:1002:664:0:4", "SwindleStreet:168:213:317:232",},
				["TheLostIsles"] = {"Alliancebeachhead:177:172:129:348", "BilgewaterLumberyard:248:209:462:43", "GallywixDocks:173:180:351:21", "HordeBaseCamp:222:190:244:458", "KTCOilPlatform:156:142:433:11", "landingSite:142:133:377:359", "Lostpeak:350:517:581:21", "OoomlotVillage:221:211:508:345", "Oostan:210:258:492:161", "RaptorRise:168:205:416:368", "RuinsOfVashelan:212:216:440:452", "ScorchedGully:305:288:323:185", "ShipwreckShore:172:175:189:408", "SkyFalls:190:186:416:131", "TheSavageGlen:231:216:213:325", "TheSlavePits:212:193:279:68", "WarchiefsLookout:159:230:264:144",},
				["TheLostIsles_terrain1"] = {"Alliancebeachhead:177:172:129:348", "BilgewaterLumberyard:248:209:462:43", "GallywixDocks:173:180:351:21", "HordeBaseCamp:222:190:244:458", "KTCOilPlatform:156:142:433:11", "landingSite:142:133:377:359", "Lostpeak:350:517:581:21", "OoomlotVillage:221:211:508:345", "Oostan:210:258:492:161", "RaptorRise:168:205:416:368", "RuinsOfVashelan:212:216:440:452", "ScorchedGully:305:288:323:185", "ShipwreckShore:172:175:189:408", "SkyFalls:190:186:416:131", "TheSavageGlen:231:216:213:325", "TheSlavePits:212:193:279:68", "WarchiefsLookout:159:230:264:144",},
				["TheLostIsles_terrain2"] = {"Alliancebeachhead:177:172:129:348", "BilgewaterLumberyard:248:209:462:43", "GallywixDocks:173:180:351:21", "HordeBaseCamp:222:190:244:458", "KTCOilPlatform:156:142:433:11", "landingSite:142:133:377:359", "Lostpeak:350:517:581:21", "OoomlotVillage:221:211:508:345", "Oostan:210:258:492:161", "RaptorRise:168:205:416:368", "RuinsOfVashelan:212:216:440:452", "ScorchedGully:305:288:323:185", "ShipwreckShore:172:175:189:408", "SkyFalls:190:186:416:131", "TheSavageGlen:231:216:213:325", "TheSlavePits:212:193:279:68", "WarchiefsLookout:159:230:264:144",},
				["VashjirDepths"] = {"AbandonedReef:371:394:50:263", "AbyssalBreach:491:470:497:0", "ColdlightChasm:267:374:266:280", "DeepfinRidge:363:262:275:32", "FireplumeTrench:298:251:315:110", "KorthunsEnd:370:385:412:283", "LGhorek:306:293:162:210", "Seabrush:225:250:415:183",},
				["VashjirKelpForest"] = {"DarkwhisperGorge:220:189:528:228", "GnawsBoneyard:311:217:451:325", "GubogglesLedge:227:207:399:280", "HoldingPens:316:267:456:401", "HonorsTomb:291:206:380:43", "LegionsFate:278:315:210:35", "TheAccursedReef:340:225:365:162",},
				["VashjirRuins"] = {"BethMoraRidge:335:223:407:445", "GlimmeringdeepGorge:272:180:270:222", "Nespirah:286:269:460:261", "RuinsOfTherseral:197:223:554:175", "RuinsOfVashjir:349:361:217:268", "ShimmeringGrotto:339:278:400:0", "SilverTideHollow:480:319:150:32",},

				-- Pandaria
				["DreadWastes"] = {"KLAXXIVESS:236:206:458:110", "ZANVESS:290:283:162:385", "BREWGARDEN:250:218:351:0", "DREADWATERLAKE:322:211:437:313", "CLUTCHESOFSHEKZEER:209:318:341:125", "HORRIDMARCH:323:194:441:224", "BRINYMUCK:325:270:214:311", "SOGGYSGAMBLE:268:241:450:406", "TERRACEOFGURTHAN:209:234:593:92", "RIKKITUNVILLAGE:218:186:236:32", "HEARTOFFEAR:262:293:191:122", "KYPARIVOR:325:190:485:0",},
				["Krasarang"] = {"RedwingRefuge:212:265:317:63", "AnglersOutpost:265:194:545:205", "TempleOfTheRedCrane:219:259:300:215", "DojaniRiver:190:282:513:3", "krasarangCove:286:268:701:19", "TheDeepwild:188:412:397:59", "LostDynasty:217:279:589:27", "FallsongRiver:214:393:218:77", "TheSouthernIsles:252:313:23:267", "ZhusBastion:306:204:612:0", "RuinsOfDojan:204:383:444:44", "TheForbiddenJungle:257:300:0:79", "RuinsOfKorja:211:395:125:88", "CradleOfChiJi:272:250:176:376", "UngaIngoo:258:170:330:498", "NayeliLagoon:246:240:343:373",},
				["Krasarang_terrain1"] = {"Zhusbastion:306:204:612:0", "FallsongRiver:214:393:218:77", "DojaniRiver:190:282:513:3", "RuinsOfDojan:204:383:444:44", "TheDeepWild:188:412:397:59", "Nayelilagoon:246:240:343:373", "Ungaingoo:258:170:330:498", "KrasarangCove:295:293:701:19", "RuinsOfKorja:211:395:125:88", "LostDynasty:217:279:589:27", "TheSouthernIsles:275:329:0:267", "AnglerSoutpost:347:199:545:200", "TheForbiddenJungle:257:300:0:79", "RedWingRefuge:212:265:317:63", "TempleOfTheRedCrane:219:259:300:215", "CradleOfChiji:272:250:176:376",},
				["KunLaiSummit"] = {"BinanVillage:240:198:607:470", "Mogujia:253:208:462:411", "MuskpawRanch:229:262:603:313", "MountNeverset:313:208:228:264", "ZouchinVillage:298:219:502:64", "TempleoftheWhitetiger:250:260:587:170", "GateoftheAugust:261:162:449:506", "ShadoPanMonastery:385:385:88:92", "TheBurlapTrail:310:276:398:310", "PeakOfSerenity:287:277:333:63", "ValleyOfEmperors:224:241:453:191", "Kotapeak:252:257:233:360", "Iseoflostsouls:259:233:602:4", "FireboughNook:224:172:322:496", "TEMPLEOFTHEWHITETIGER:250:260:587:170",},
				["TheHiddenPass"] = {"TheHiddenCliffs:294:220:433:0", "TheBlackMarket:479:493:371:175", "TheHiddenSteps:290:191:412:477",},
				["TheJadeForest"] = {"GlassfinVillage:278:310:525:358", "RuinsOfGanShi:196:158:316:0", "TheArboretum:242:210:481:215", "WindlessIsle:251:348:539:43", "DawnsBlossom:234:210:325:178", "TempleOfTheJadeSerpent:264:211:468:295", "DreamersPavillion:218:148:474:520", "NectarbreezeOrchard:219:256:290:330", "HellscreamsHope:196:166:181:75", "SlingtailPits:179:180:428:416", "SerpentsSpine:191:216:388:299", "ChunTianMonastery:227:198:300:56", "JadeMines:236:142:400:146", "EmperorsOmen:202:204:430:21", "GrookinMound:253:229:182:214", "WreckOfTheSkyShark:210:158:202:0", "Waywardlanding:219:186:346:482", "NookaNooka:219:205:189:151",},
				["TheWanderingIsle"] = {"TheDawningValley:677:668:325:0", "TempleofFiveDawns:607:461:395:182", "MandoriVillage:610:374:392:294", "RidgeofLaughingWinds:313:321:183:198", "Pei-WuForest:651:262:351:406", "PoolofthePaw:220:188:297:324", "SkyfireCrash-Site:346:263:124:405", "TheRows:385:373:504:295", "TheSingingPools:372:475:545:12", "MorningBreezeVillage:261:315:203:36", "Fe-FangVillage:234:286:134:9", "TheWoodofStaves:989:466:13:202",},
				["TownlongWastes"] = {"NiuzaoTemple:296:359:213:241", "ShanzeDao:300:246:125:0", "TheSumprushes:271:205:545:369", "Sikvess:261:235:306:433", "GaoRanBlockade:353:200:546:468", "MingChiCrossroads:247:221:417:447", "palewindVillage:282:306:692:362", "OsulMesa:238:296:560:185", "ShadoPanGarrison:213:170:413:385", "KriVess:255:269:420:209", "SriVess:294:283:92:192",},
				["ValeofEternalBlossoms"] = {"GuoLaiRuins:337:349:87:3", "WhiteMoonShrine:298:262:482:10", "MistfallVillage:310:305:200:363", "SettingSunTraining:350:429:0:234", "TuShenBurialGround:267:308:349:316", "TheStairsAscent:446:359:556:267", "WinterboughGlade:361:333:4:107", "TheGoldenStair:242:254:328:16", "WhitepetalLake:267:281:278:170", "TheTwinMonoliths:272:522:444:97", "MoguShanPalace:373:385:629:22",},
				["ValleyoftheFourWinds"] = {"ThunderfootFields:380:317:622:0", "PoolsofPurity:213:246:513:58", "RumblingTerrace:277:245:582:301", "PaoquanHollow:273:246:12:105", "StormsoutBrewery:257:288:227:380", "DustbackGorge:209:308:0:343", "CliffsofDispair:510:264:215:404", "Theheartland:286:392:253:75", "SilkenFields:254:259:530:253", "HarvestHome:260:251:5:239", "GildedFan:208:292:438:41", "GrandGranery:314:212:334:325", "SingingMarshes:175:291:170:130", "ZhusDecent:303:323:699:114", "Halfhill:206:245:438:177", "NesingwarySafari:249:342:104:326", "MudmugsPlace:230:217:561:161", "KuzenVillage:199:304:224:74",},

				-- Draenor
				["FrostfireRidge"] = {"BladespireFortress:356:303:38:117", "BloodmaulStronghold:258:217:311:4", "BonesOfAgurak:273:349:729:319", "DaggermawRavine:255:191:284:91", "FrostwindDunes:274:214:121:0", "GrimfrostHill:178:203:597:210", "Grombolash:217:239:483:33", "Gromgar:282:341:505:323", "IronSiegeworks:329:294:673:156", "IronwayStation:199:335:641:304", "Magnarok:213:278:609:33", "StonefangOutpost:251:191:306:281", "TheBoneSlag:256:210:290:192", "TheCracklingPlains:266:293:439:137", "Worgol:317:233:72:292",},
				["Gorgrond"] = {"BastionRise:324:161:283:507", "BeastWatch:166:161:383:371", "EasternRuin:210:193:525:260", "Evermorn:297:181:281:444", "Foundry:211:221:455:74", "FoundrySouth:217:180:454:183", "GronnCanyon:279:241:258:213", "HighlandPass:285:323:547:73", "HighPass:209:225:411:250", "IronDocks:315:180:350:0", "Mushrooms:253:198:444:323", "StonemaulArena:217:178:259:335", "StonemaulSouth:208:142:275:416", "Stripmine:250:232:312:77", "Tangleheart:262:221:451:372",},
				["NagrandDraenor"] = {"Ancestral:234:191:239:259", "BrokenPrecipice:305:227:256:12", "Elementals:286:274:588:0", "Grommashar:256:301:600:367", "Hallvalor:236:372:766:118", "Highmaul:471:437:0:0", "IronfistHarbor:236:242:283:354", "Lokrath:316:221:382:187", "Margoks:249:288:753:380", "Mushrooms:250:287:746:25", "Oshugun:262:266:366:323", "RingOfBlood:263:287:430:0", "RingOfTrials:354:315:523:159", "SunspringWatch:274:254:312:98", "Telaar:296:272:461:353",},
				["ShadowmoonValleyDR"] = {"AnguishFortress:309:264:140:160", "DarktideRoost:282:201:468:467", "Elodor:291:266:426:0", "Embaari:346:252:270:158", "Gloomshade:229:240:319:5", "Gulvar:260:309:26:0", "Karabor:393:318:537:150", "Shazgul:282:225:259:315", "ShimmeringMoor:288:261:453:306", "Socrethar:202:201:383:411", "Swisland:173:160:309:460",},
				["SpiresOfArak"] = {"BloodbladeRedoubt:209:154:334:210", "BloodmaneValley:229:246:410:350", "CenterRavenNest:188:190:444:255", "Clutchpop:217:224:533:382", "EastMushrooms:182:244:649:155", "EmptyGarrison:190:187:282:261", "HowlingCrag:382:274:459:0", "NwCorner:314:304:102:0", "SethekkHollow:238:295:520:127", "Skettis:371:174:289:0", "SoloSpireNorth:196:284:429:84", "SoloSpireSouth:169:178:374:276", "Southport:197:179:310:328", "Veilakraz:252:230:281:83", "Veilzekk:198:232:521:268", "VentureCove:226:193:465:475", "WrithingMire:229:213:197:198",},
 				["Talador"] = {"Aruuna:389:234:597:178", "Auchindoun:309:262:338:356", "CenterIsles:252:280:546:228", "CourtOfSouls:307:229:150:264", "FortWrynn:292:235:567:42", "GordalFortress:423:290:548:378", "Gulrok:278:270:165:364", "Northgate:398:149:571:0", "OrunaiCoast:279:267:427:0", "SeEntrance:308:276:685:298", "Shattrath:406:367:173:22", "Telmor:497:157:207:511", "TombOfLights:326:212:352:271", "Tuurem:225:224:472:148", "Zangarra:287:277:713:35",},
				["TanaanJungle"] = {"DarkPortal:333:437:637:136", "DraeneiSW:174:208:81:367", "Fangrila:343:264:429:392", "FelForge:223:183:392:187", "HellfireCitadel:327:241:254:262", "IronFront:209:245:0:264", "IronHarbor:189:294:303:62", "Kiljaeden:365:276:392:23", "Kranak:338:254:54:94", "LionsWatch:270:208:465:313", "Marshlands:246:218:296:383", "Shanaar:248:314:170:354", "Volmar:238:229:501:171", "Zethgol:274:251:118:194",},

				-- Legion
				["Azsuna"] = {"Faronaar:330:265:166:202", "Felblaze:239:303:594:0", "Greenway:247:184:450:95", "IsleOfTheWatchers:321:267:281:401", "Llothienhighlands:351:245:219:69", "LostOrchard:315:185:257:0", "Narthalas:272:192:441:173", "OceanusCove:206:266:396:244", "RuinedSanctum:220:288:523:233",	"TempleLights:181:243:481:340",	"Zarkhenar:288:195:477:0",},
				["AszunaDungeonExterior"] = {"EyeOfAzshara:848:668:39:0"},
				["BrokenShore"] = {"BrokenValley:338:322:254:84", "DeadwoodLanding:182:245:220:260", "DeliverancePoint:387:314:312:302", "FelrageStrand:332:276:596:100", "SoulRuin:338:270:389:180", "TheLostTemple:308:244:632:169", "TheWeepingTerrace:276:213:350:13", "TombOfSargeras:312:301:500:0",},
				["Highmountain"] = {"BloodHuntHighlands:297:250:307:75", "Feltotem:256:326:172:31", "FrostHoofWatch:186:213:391:408", "IronhornEnclave:288:258:452:410", "NightWatchersPerch:344:295:0:244", "PineRockBasin:217:148:323:249", "Riverbend:214:308:314:360", "RockawayShallows:207:302:469:45", "ShipwreckCove:283:170:331:0", "Skyhorn:311:229:357:179", "StonehoofWatch:341:328:494:236", "Sylvanfalls:445:326:0:342", "Thundertotem:244:199:332:302", "TrueshotLodge:172:204:249:236",},
				["Stormheim"] = {"AggrammarsVault:199:185:361:210", "BlackbeakOverlook:297:210:154:129", "Dreadwake:215:247:457:412", "Dreyrgrot:132:145:689:266", "Greywatch:173:163:648:339", "HallsOfValor:252:280:585:372",	"Haustvald:200:174:612:187", "Hrydshal:631:315:0:353", "MawOfNashal:509:251:17:0", "Morheim:150:180:741:313", "Nastrondir:241:194:345:95", "QatchmansRock:135:162:623:81",	"Runewood:194:214:592:226", "ShieldsRest:289:172:689:0", "SkoldAshil:177:169:506:345", "StormsReach:180:160:510:118", "TalonRest:291:208:316:282",	"TideskornHarbor:205:199:479:183", "Valdisdall:186:158:522:288", "WeepingBluffs:386:314:56:185",},
				["Suramar"] = {"Ambervale:222:311:132:179", "CrimsonThicket:327:381:492:0", "Falanaar:248:317:23:136", "FelsoulHold:289:363:183:305", "GrandPromenade:355:291:344:285", "Jandvik:419:538:583:0", "MoonguardStronghold:480:245:58:0", "MoonwhisperGulch:428:316:201:0", "RuinsOfEluneeth:221:224:264:226", "SuramarCity:470:337:390:331", "Telanor:387:372:327:0",},
				["Valsharah"] = {"Andutalah:241:240:587:250", "BlackrookHold:250:253:262:175", "BradensBrook:311:244:259:275", "DreamGrove:294:364:283:0",	"GloamingReef:239:301:136:274",	"GroveOfCenarius:171:150:457:351", "Lorlathil:177:156:467:413",	"MoonclawVale:254:281:549:380",	"Shalanir:326:360:419:0", "Smolderhide:341:188:324:480", "TempleOfElune:216:219:459:240", "Thastalah:218:168:342:416",},

			}


			-- Initialise counters
			local createdtex = 0
			local texcount = 0

			-- Create local texture table
			local MapTex = {}

			-- Map refresh function
			local function RefMap()

				if texcount > 0 then
					for i = 1, texcount do
						MapTex[i]:Hide()
					end
					texcount = 0; 
				end

				-- Get current map
				local filename, texheight, void, void, sub = GetMapInfo()
				if sub then return end
				if not filename then return end

				local texpath = format([[Interface\WorldMap\%s\]], filename)
				local zone = LeaPlusMapData[filename] or {}

				-- Map debug (prints overlay information)
				-- print(filename); for p = 1, GetNumMapOverlays() do print(GetMapOverlayInfo(p)); end;

				-- Create new textures for current map
				for travnum, num in next, zone do
					local tname, texwidth, texheight, offsetx, offsety = strsplit(":", num)
					local texturename = texpath .. tname
					local numtexwide, numtextall = math.ceil(texwidth / 256), math.ceil(texheight / 256)

					-- Work out how many textures are needed to fill the map
					local neededtex = texcount + numtextall * numtexwide

					-- Create the textures
					if neededtex > createdtex then
						for j = createdtex + 1, neededtex do
							MapTex[j] = WorldMapDetailFrame:CreateTexture(nil, "ARTWORK")
						end
						createdtex = neededtex
					end

					-- Process textures
					for j = 1, numtextall do
						local texturepxheight, texturefileheight
						if j < numtextall then
							texturepxheight = 256
							texturefileheight = 256
						else
							texturepxheight = texheight % 256
							if texturepxheight == 0 then
								texturepxheight = 256
							end
							texturefileheight = 16
							while texturefileheight < texturepxheight do
								texturefileheight = texturefileheight * 2
							end
						end

						for k = 1, numtexwide do
							if texcount > createdtex then return end
							texcount = texcount + 1
							local texture = MapTex[texcount]
							local texturepxwidth
							local texturefilewidth
							if k < numtexwide then
								texturepxwidth = 256
								texturefilewidth = 256
							else
								texturepxwidth = texwidth % 256
								if texturepxwidth == 0 then
									texturepxwidth = 256
								end
								texturefilewidth = 16
								while texturefilewidth < texturepxwidth do
									texturefilewidth = texturefilewidth * 2
								end
							end 
							texture:SetWidth(texturepxwidth)
							texture:SetHeight(texturepxheight)
							texture:SetTexCoord(0, texturepxwidth/texturefilewidth, 0, texturepxheight/texturefileheight)
							texture:ClearAllPoints()						  
							texture:SetPoint("TOPLEFT", "WorldMapDetailFrame", "TOPLEFT", offsetx + (256 * (k-1)), -(offsety + (256 * (j - 1))))
							texture:SetTexture(texturename..(((j - 1) * numtexwide) + k))
							texture:Show()
						end
					end 
				end
			end

			-- Update map
			hooksecurefunc("WorldMapFrame_Update", function()
				if WorldMapFrame:IsShown() and LeaPlusLC["RevealWorldMap"] == "On" then
					RefMap();
				end
			end)

			----------------------------------------------------------------------
			-- Configuration panel
			----------------------------------------------------------------------

			-- Create configuration panel
			local MapPanel = LeaPlusLC:CreatePanel("World Map", "MapPanel")

			LeaPlusLC:MakeTx(MapPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(MapPanel, "RevealWorldMap", "Reveal unexplored areas of the map", 16, -92, false, "If checked, unexplored areas of the map will be revealed.")
			LeaPlusLC:MakeCB(MapPanel, "ShowRevealBox", "Show reveal checkbox at the top of the map", 16, -112, false, "If checked, a checkbox will be shown at the top of the map which will allow you to toggle unexplored areas directly from the map frame.")
			LeaPlusLC:MakeCB(MapPanel, "WorldMapCoords", "Show cursor coordinates at the top of the map", 16, -132, false, "If checked, cursor coordinates will be shown at the top of the map.")
			LeaPlusLC:MakeCB(MapPanel, "FadeMap", "Fade windowed map while moving", 16, -152, false, "If checked, the windowed map will fade while your character is moving and the cursor is not over the map.")

			-- Help button tooltip
			MapPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

			-- Back button handler
			MapPanel.b:SetScript("OnClick", function() 
				MapPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page5"]:Show();
				return
			end)

			-- Create reveal checkbox
			local RevBox = CreateFrame('CheckButton', nil, WorldMapFrame.BorderFrame, "OptionsCheckButtonTemplate")
			RevBox:ClearAllPoints(); RevBox:SetPoint("TOPRIGHT", -130, 0); RevBox:SetSize(24, 24)
			RevBox.f = RevBox:CreateFontString(nil, 'OVERLAY', "GameFontNormal"); RevBox.f:SetPoint("LEFT", 24, 0);
			RevBox.f:SetText(LeaPlusLC:Translate("Reveal")); RevBox:SetHitRectInsets(0, 0 - RevBox.f:GetWidth(), 0, 0);

			-- Reposition checkbox so the label fits with translations
			RevBox:ClearAllPoints()
			RevBox:SetPoint("TOPRIGHT", WorldMapFrame.BorderFrame, "TOPRIGHT", -RevBox.f:GetStringWidth()-87, 0)

			-- Function to set options
			local function SetWorldMapOptions()
				-- Show or hide coordinates
				if LeaPlusLC["WorldMapCoords"] == "On" then	Cmap:Show()	else Cmap:Hide() end
				-- Set map fade
				if LeaPlusLC["FadeMap"] == "On" then	
					SetCVar("mapFade", "1")
				else
					SetCVar("mapFade", "0")
				end
				-- Reveal world map
				if LeaPlusLC["RevealWorldMap"] == "On" then	
					RevBox:SetChecked(true)
					if WorldMapFrame:IsShown() then
						RefMap()
					end
				else
					RevBox:SetChecked(false)
					if texcount > 0 then
						for i = 1, texcount do MapTex[i]:Hide()	end
						texcount = 0
					end
				end
				-- Show or hide reveal checkbox
				if LeaPlusLC["ShowRevealBox"] == "On" then RevBox:Show() else RevBox:Hide()	end
			end

			-- Run function when options are clicked and on startup
			LeaPlusCB["RevealWorldMap"]:HookScript("OnClick", SetWorldMapOptions)
			LeaPlusCB["ShowRevealBox"]:HookScript("OnClick", SetWorldMapOptions)
			LeaPlusCB["WorldMapCoords"]:HookScript("OnClick", SetWorldMapOptions)
			LeaPlusCB["FadeMap"]:HookScript("OnClick", SetWorldMapOptions)
			SetWorldMapOptions()

			-- Reset button handler
			MapPanel.r:SetScript("OnClick", function()

				-- Reset checkboxes
				LeaPlusLC["RevealWorldMap"] = "On"
				LeaPlusLC["ShowRevealBox"] = "On"
				LeaPlusLC["WorldMapCoords"] = "On"
				LeaPlusLC["FadeMap"] = "Off"
				SetWorldMapOptions()

				-- Refresh configuration panel
				MapPanel:Hide(); MapPanel:Show();

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["EnhanceMapButton"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["RevealWorldMap"] = "On"
					LeaPlusLC["ShowRevealBox"] = "On"
					LeaPlusLC["WorldMapCoords"] = "On"
					LeaPlusLC["FadeMap"] = "Off"
					SetWorldMapOptions()
				else
					MapPanel:Show();
					LeaPlusLC:HideFrames();
				end
			end);

			-- Reveal checkbox click handler
			RevBox:SetScript("OnClick", function()
				-- Set options panel setting according to map checkbox
				if RevBox:GetChecked() then
					LeaPlusLC["RevealWorldMap"] = "On"
				else
					LeaPlusLC["RevealWorldMap"] = "Off"
				end
				-- Refresh options panel if its showing
				if LeaPlusCB["RevealWorldMap"]:IsShown() then
					LeaPlusCB["RevealWorldMap"]:Hide(); LeaPlusCB["RevealWorldMap"]:Show();
				end
				SetWorldMapOptions()
			end)

		end

		----------------------------------------------------------------------
		-- Disable screen glow
		----------------------------------------------------------------------

		if LeaPlusLC["NoShaders"] == "On" then

			-- Disable screen glow
			SetCVar("ffxGlow", "0")

		end

		----------------------------------------------------------------------
		-- Show volume control on character sheet
		----------------------------------------------------------------------

		if LeaPlusLC["ShowVolume"] == "On" then

			-- Function to update master volume
			local function MasterVolUpdate()
				if LeaPlusLC["ShowVolume"] == "On" then
					-- Set the volume
					SetCVar("Sound_MasterVolume", LeaPlusLC["LeaPlusMaxVol"]);
					-- Format the slider text
					LeaPlusCB["LeaPlusMaxVol"].f:SetFormattedText("%.0f", LeaPlusLC["LeaPlusMaxVol"] * 20)
				end
			end

			-- Create slider control
			LeaPlusLC["LeaPlusMaxVol"] = tonumber(GetCVar("Sound_MasterVolume"));
			LeaPlusLC:MakeSL(CharacterModelFrame, "LeaPlusMaxVol", "",	0, 1, 0.05, -34, -328, "%.2f")
			LeaPlusCB["LeaPlusMaxVol"]:SetWidth(64)

			-- Set slider control value when shown
			LeaPlusCB["LeaPlusMaxVol"]:SetScript("OnShow", function()
				LeaPlusCB["LeaPlusMaxVol"]:SetValue(GetCVar("Sound_MasterVolume"))
			end)

			-- Update volume when slider control is changed
			LeaPlusCB["LeaPlusMaxVol"]:HookScript("OnValueChanged", function()
				if IsMouseButtonDown("RightButton") and IsShiftKeyDown() then 
					-- Dual layout is active so don't adjust slider
					LeaPlusCB["LeaPlusMaxVol"].f:SetFormattedText("%.0f", LeaPlusLC["LeaPlusMaxVol"] * 20)
					LeaPlusCB["LeaPlusMaxVol"]:Hide()
					LeaPlusCB["LeaPlusMaxVol"]:Show()
					return
				else
					-- Set sound level and refresh slider
					MasterVolUpdate()
				end
			end)

			-- Dual layout
			local function SetVolumePlacement()
				if LeaPlusLC["ShowVolumeInFrame"] == "On" then
					LeaPlusCB["LeaPlusMaxVol"]:ClearAllPoints();
					LeaPlusCB["LeaPlusMaxVol"]:SetPoint("TOPLEFT", 72, -276)
				else
					LeaPlusCB["LeaPlusMaxVol"]:ClearAllPoints();
					LeaPlusCB["LeaPlusMaxVol"]:SetPoint("TOPLEFT", -34, -328)
				end
			end

			LeaPlusCB["LeaPlusMaxVol"]:SetScript('OnMouseDown', function(self, btn)
				if btn == "RightButton" and IsShiftKeyDown() then
					if LeaPlusLC["ShowVolumeInFrame"] == "On" then LeaPlusLC["ShowVolumeInFrame"] = "Off" else LeaPlusLC["ShowVolumeInFrame"] = "On" end
					SetVolumePlacement();
				end
			end)

			CharacterModelFrame:HookScript("OnShow",function()
				SetVolumePlacement();
			end)

		end

		----------------------------------------------------------------------
		--	Use arrow keys in chat
		----------------------------------------------------------------------

		if LeaPlusLC["UseArrowKeysInChat"] == "On" then
			-- Enable arrow keys for normal and existing chat frames
			for i = 1, 50 do
				if _G["ChatFrame" .. i] then
					_G["ChatFrame" .. i .. "EditBox"]:SetAltArrowKeyMode(false)
				end
			end
			-- Enable arrow keys for temporary chat frames
			hooksecurefunc("FCF_OpenTemporaryWindow", function()
				local cf = FCF_GetCurrentChatFrame():GetName() or nil
				if cf then
					_G[cf .. "EditBox"]:SetAltArrowKeyMode(false)
				end
			end)
		end

		----------------------------------------------------------------------
		-- Unclamp chat frame
		----------------------------------------------------------------------

		if LeaPlusLC["UnclampChat"] == "On" then

			-- Process normal and existing chat frames
			for i = 1, 50 do
				if _G["ChatFrame" .. i] then 
					_G["ChatFrame" .. i]:SetClampRectInsets(0, 0, 0, 0);
				end
			end

			-- Process temporary chat frames
			hooksecurefunc("FCF_OpenTemporaryWindow", function()
				local cf = FCF_GetCurrentChatFrame():GetName() or nil
				if cf then
					_G[cf]:SetClampRectInsets(0, 0, 0, 0);
				end
			end)

		end

		----------------------------------------------------------------------
		-- Hide social button
		----------------------------------------------------------------------

		if LeaPlusLC["NoSocialButton"] == "On" then
			-- Create hidden frame to store social button
			local tframe = CreateFrame("FRAME")
			tframe:Hide()
			QuickJoinToastButton:SetParent(tframe)
		end

		----------------------------------------------------------------------
		-- Hide chat buttons
		----------------------------------------------------------------------

		if LeaPlusLC["NoChatButtons"] == "On" then

			-- Create hidden frame to store unwanted frames (more efficient than creating functions)
			local tframe = CreateFrame("FRAME")
			tframe:Hide()

			-- Disable integrated mouse scrolling to avoid conflicts
			SetCVar("chatMouseScroll", "0")

			-- Function to enable mouse scrolling with CTRL and SHIFT key modifiers
			local function AddMouseScroll(chtfrm)
				if _G[chtfrm] then
					_G[chtfrm]:SetScript("OnMouseWheel", function(self, direction)
						if direction == 1 then
							if IsControlKeyDown() then
								self:ScrollToTop()
							elseif IsShiftKeyDown() then
								self:PageUp()
							else
								self:ScrollUp()
							end
						else
							if IsControlKeyDown() then
								self:ScrollToBottom()
							elseif IsShiftKeyDown() then
								self:PageDown()
							else
								self:ScrollDown()
							end
						end
					end)
					_G[chtfrm]:EnableMouseWheel(true)
				end
			end

			-- Function to hide chat buttons
			local function HideButtons(chtfrm)
				_G[chtfrm .. "ButtonFrameUpButton"]:SetParent(tframe)
				_G[chtfrm .. "ButtonFrameDownButton"]:SetParent(tframe)
				_G[chtfrm .. "ButtonFrameMinimizeButton"]:SetParent(tframe)
				_G[chtfrm .. "ButtonFrameUpButton"]:Hide();
				_G[chtfrm .. "ButtonFrameDownButton"]:Hide();
				_G[chtfrm .. "ButtonFrameMinimizeButton"]:Hide();
				_G[chtfrm .. "ButtonFrame"]:SetSize(0.1,0.1)
			end

			-- Function to highlight chat tabs and click to scroll to bottom
			local function HighlightTabs(chtfrm)
				-- Set position of bottom button
				_G[chtfrm .. "ButtonFrameBottomButtonFlash"]:SetTexture("Interface/BUTTONS/GRADBLUE.png")
				_G[chtfrm .. "ButtonFrameBottomButton"]:ClearAllPoints()
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetPoint("BOTTOM",_G[chtfrm .. "Tab"],0,-6)
				_G[chtfrm .. "ButtonFrameBottomButton"]:Show()
				_G[chtfrm .. "ButtonFrameBottomButtonFlash"]:SetAlpha(0.5)
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetWidth(_G[chtfrm .. "Tab"]:GetWidth()-10)
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetHeight(24)

				-- Resize bottom button according to tab size
				_G[chtfrm .. "Tab"]:SetScript("OnSizeChanged", function()
					for j = 1, 50 do
						-- Resize bottom button to tab width
						if _G["ChatFrame" .. j .. "ButtonFrameBottomButton"] then
							_G["ChatFrame" .. j .. "ButtonFrameBottomButton"]:SetWidth(_G["ChatFrame" .. j .. "Tab"]:GetWidth()-10)
						end
					end
					-- If combat log is hidden, resize it's bottom button
					if LeaPlusLC["NoCombatLogTab"] == "On" then
						if _G["ChatFrame2ButtonFrameBottomButton"] then
							-- Resize combat log bottom button
							_G["ChatFrame2ButtonFrameBottomButton"]:SetWidth(0.1);
						end
					end
				end)

				-- Remove click from the bottom button
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetScript("OnClick", nil)

				-- Remove textures
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetNormalTexture("")
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetHighlightTexture("")
				_G[chtfrm .. "ButtonFrameBottomButton"]:SetPushedTexture("")

				-- Always scroll to bottom when clicking a tab
				_G[chtfrm .. "Tab"]:HookScript("OnClick", function(self,arg1)
					if arg1 == "LeftButton" then
						_G[chtfrm]:ScrollToBottom();
					end
				end)

			end

			-- Hide chat menu button
			ChatFrameMenuButton:SetParent(tframe)

			-- Set options for normal and existing chat frames
			for i = 1, 50 do
				if _G["ChatFrame" .. i] then
					AddMouseScroll("ChatFrame" .. i);
					HideButtons("ChatFrame" .. i);
					HighlightTabs("ChatFrame" .. i)
				end
			end

			-- Do the functions above for temporary chat frames
			hooksecurefunc("FCF_OpenTemporaryWindow", function(chatType)
				local cf = FCF_GetCurrentChatFrame():GetName() or nil
				if cf then
					-- Set options for temporary frame
					AddMouseScroll(cf)
					HideButtons(cf)
					HighlightTabs(cf)
					-- Resize flashing alert to match tab width
					_G[cf .. "Tab"]:SetScript("OnSizeChanged", function()
						_G[cf .. "ButtonFrameBottomButton"]:SetWidth(_G[cf .. "Tab"]:GetWidth()-10)
					end)
				end
			end)

		end

		----------------------------------------------------------------------
		-- L41: Manage buff frame
		----------------------------------------------------------------------

		if LeaPlusLC["ManageBuffFrame"] == "On" then

			-- Replace frame movement function
			local buffSetPos = BuffFrame.SetPoint

			-- Set buff frame position at startup
			BuffFrame:ClearAllPoints()
			buffSetPos(BuffFrame, LeaPlusLC["BuffFrameA"], UIParent, LeaPlusLC["BuffFrameR"], LeaPlusLC["BuffFrameX"], LeaPlusLC["BuffFrameY"])
			BuffFrame:SetScale(LeaPlusLC["BuffFrameScale"])
			TemporaryEnchantFrame:SetScale(LeaPlusLC["BuffFrameScale"])

			-- Prevent changes to buff frame position
			hooksecurefunc(BuffFrame, "SetPoint", function()
				BuffFrame:ClearAllPoints()
				buffSetPos(BuffFrame, LeaPlusLC["BuffFrameA"], UIParent, LeaPlusLC["BuffFrameR"], LeaPlusLC["BuffFrameX"], LeaPlusLC["BuffFrameY"])
			end)

			-- Allow buff frame to be moved
			BuffFrame:SetMovable(true)
			BuffFrame:SetClampedToScreen(true)

			-- Create drag frame
			local dragframe = CreateFrame("FRAME")
			dragframe:SetPoint("TOPRIGHT", BuffFrame, "TOPRIGHT", 0, 2.5)
			dragframe:SetBackdropColor(0.0, 0.5, 1.0)
			dragframe:SetBackdrop({edgeFile = "Interface/Tooltips/UI-Tooltip-Border", tile = false, tileSize = 0, edgeSize = 16, insets = { left = 0, right = 0, top = 0, bottom = 0 }})
			dragframe:SetToplevel(true)
			dragframe:Hide()
			dragframe:SetScale(LeaPlusLC["BuffFrameScale"])

			dragframe.t = dragframe:CreateTexture()
			dragframe.t:SetAllPoints()
			dragframe.t:SetColorTexture(0.0, 1.0, 0.0, 0.5)
			dragframe.t:SetAlpha(0.5)

			dragframe.f = dragframe:CreateFontString(nil, 'ARTWORK', 'GameFontNormalLarge')
			dragframe.f:SetPoint('CENTER', 0, 0)
			dragframe.f:SetText(LeaPlusLC:Translate("Buffs"))

			-- Click handler
			dragframe:SetScript("OnMouseDown", function(self, btn)
				-- Start dragging if left clicked
				if btn == "LeftButton" then
					BuffFrame:StartMoving()
				end
			end)

			dragframe:SetScript("OnMouseUp", function()
				-- Save frame positions
				BuffFrame:StopMovingOrSizing()
				LeaPlusLC["BuffFrameA"], void, LeaPlusLC["BuffFrameR"], LeaPlusLC["BuffFrameX"], LeaPlusLC["BuffFrameY"] = BuffFrame:GetPoint()
				BuffFrame:SetUserPlaced(false)
			end)

			-- Create configuration panel
			local BuffPanel = LeaPlusLC:CreatePanel("Buff Frame", "BuffPanel")

			LeaPlusLC:MakeTx(BuffPanel, "Scale", 16, -72)
			LeaPlusLC:MakeSL(BuffPanel, "BuffFrameScale", "", 0.5, 2, 0.05, 16, -92, "%.2f")

			-- Set scale when slider is changed
			LeaPlusCB["BuffFrameScale"]:HookScript("OnValueChanged", function()
				BuffFrame:SetScale(LeaPlusLC["BuffFrameScale"])
				TemporaryEnchantFrame:SetScale(LeaPlusLC["BuffFrameScale"])
				dragframe:SetScale(LeaPlusLC["BuffFrameScale"])
				-- Show formatted slider value
				LeaPlusCB["BuffFrameScale"].f:SetFormattedText("%.0f%%", LeaPlusLC["BuffFrameScale"] * 100)
			end)

			-- Help button tooltip
			BuffPanel.h.tiptext = LeaPlusLC:Translate("Drag the frame overlay to position the frame.")

			-- Back button handler
			BuffPanel.b:SetScript("OnClick", function()
				BuffPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page6"]:Show()
				return
			end)

			-- Reset button handler
			BuffPanel.r:SetScript("OnClick", function()

				-- Reset position and scale
				LeaPlusLC["BuffFrameA"] = "TOPRIGHT"
				LeaPlusLC["BuffFrameR"] = "TOPRIGHT"
				LeaPlusLC["BuffFrameX"] = -205
				LeaPlusLC["BuffFrameY"] = -13
				LeaPlusLC["BuffFrameScale"] = 1
				BuffFrame:ClearAllPoints()
				buffSetPos(BuffFrame, LeaPlusLC["BuffFrameA"], UIParent, LeaPlusLC["BuffFrameR"], LeaPlusLC["BuffFrameX"], LeaPlusLC["BuffFrameY"])

				-- Refresh configuration panel
				BuffPanel:Hide(); BuffPanel:Show()
				dragframe:Show()

			end)

			-- Show configuration panal when options panel button is clicked
			LeaPlusCB["ManageBuffBtn"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["BuffFrameA"] = "TOPRIGHT"
					LeaPlusLC["BuffFrameR"] = "TOPRIGHT"
					LeaPlusLC["BuffFrameX"] = -271
					LeaPlusLC["BuffFrameY"] = 0
					LeaPlusLC["BuffFrameScale"] = 0.80
					BuffFrame:ClearAllPoints()
					buffSetPos(BuffFrame, LeaPlusLC["BuffFrameA"], UIParent, LeaPlusLC["BuffFrameR"], LeaPlusLC["BuffFrameX"], LeaPlusLC["BuffFrameY"])
					BuffFrame:SetScale(LeaPlusLC["BuffFrameScale"])
					TemporaryEnchantFrame:SetScale(LeaPlusLC["BuffFrameScale"])
				else
					-- Find out if the UI has a non-standard scale
					if GetCVar("useuiscale") == "1" then
						LeaPlusLC["gscale"] = GetCVar("uiscale")
					else
						LeaPlusLC["gscale"] = 1
					end

					-- Set drag frame size according to UI scale
					dragframe:SetWidth(280 * LeaPlusLC["gscale"])
					dragframe:SetHeight(225 * LeaPlusLC["gscale"])

					-- Show configuration panel
					BuffPanel:Show()
					LeaPlusLC:HideFrames()
					dragframe:Show()
				end
			end)

			-- Hide drag frame when configuration panel is closed
			BuffPanel:HookScript("OnHide", function() dragframe:Hide() end)

		end

		----------------------------------------------------------------------
		-- L42: Manage frames
		----------------------------------------------------------------------

		-- Frame Movement
		if LeaPlusLC["FrmEnabled"] == "On" then

			-- Lock the player and target frames
			PlayerFrame_SetLocked(true)
			TargetFrame_SetLocked(true)

			-- Remove integrated movement functions to avoid conflicts
			_G.PlayerFrame_ResetUserPlacedPosition = function() LeaPlusLC:Print("Use Leatrix Plus to reset that frame.") end
			_G.TargetFrame_ResetUserPlacedPosition = function() LeaPlusLC:Print("Use Leatrix Plus to reset that frame.") end
			_G.PlayerFrame_SetLocked = function() LeaPlusLC:Print("Use Leatrix Plus to move that frame.") end
			_G.TargetFrame_SetLocked = function() LeaPlusLC:Print("Use Leatrix Plus to move that frame.") end

			-- Create frame table (used for local traversal)
			local FrameTable = {DragPlayerFrame = PlayerFrame, DragTargetFrame = TargetFrame, DragWorldStateAlwaysUpFrame = WorldStateAlwaysUpFrame, DragGhostFrame = GhostFrame, DragMirrorTimer1 = MirrorTimer1};

			-- Create main table structure in saved variables if it doesn't exist
			if (LeaPlusDB["Frames"]) == nil then
				LeaPlusDB["Frames"] = {}
			end

			-- Create frame based table structure in saved variables if it doesn't exist and set initial scales
			for k,v in pairs(FrameTable) do
				local vf = v:GetName();
				-- Create frame table structure if it doesn't exist
				if not LeaPlusDB["Frames"][vf] then
					LeaPlusDB["Frames"][vf] = {}
				end
				-- Set saved scale value to default if it doesn't exist
				if not LeaPlusDB["Frames"][vf]["Scale"] then
					LeaPlusDB["Frames"][vf]["Scale"] = 1.00;
				end
				-- Set frame scale to saved value
				_G[vf]:SetScale(LeaPlusDB["Frames"][vf]["Scale"])
			end

			-- Set cached status
			local function LeaPlusFramesSaveCache(frame)
				if frame == "PlayerFrame" or frame == "TargetFrame" then
					_G[frame]:SetUserPlaced(true);
				else
					_G[frame]:SetUserPlaced(false);
				end
			end

			-- Set frames to manual values
			local function LeaFramesSetPos(frame, point, parent, relative, xoff, yoff)
				frame:SetMovable(true);
				frame:ClearAllPoints();
				frame:SetPoint(point, parent, relative, xoff, yoff)
			end

			-- Set frames to default values
			local function LeaPlusFramesDefaults()
				LeaFramesSetPos(PlayerFrame				, "TOPLEFT"	, UIParent, "TOPLEFT"	, -19, -4)
				LeaFramesSetPos(TargetFrame				, "TOPLEFT"	, UIParent, "TOPLEFT"	, 250, -4)
				LeaFramesSetPos(WorldStateAlwaysUpFrame	, "TOP"		, UIParent, "TOP"		, -5, -15)
				LeaFramesSetPos(GhostFrame				, "TOP"		, UIParent, "TOP"		, -5, -29)
				LeaFramesSetPos(MirrorTimer1			, "TOP"		, UIParent, "TOP"		, -5, -96)
			end

			-- Create frame customisation side panel
			local SideFrames = LeaPlusLC:CreatePanel("Frames", "SideFrames")

			-- Variable used to store currently selected frame
			local currentframe

			-- Create scale title
			LeaPlusLC:MakeTx(SideFrames, "Scale", 16, -72)
			
			-- Set initial slider value (will be changed when drag frames are selected)
			LeaPlusLC["FrameScale"] = 1.00;

			-- Create scale slider
			LeaPlusLC:MakeSL(SideFrames, "FrameScale", "", 0.5, 3.0, 0.05, 16, -92, "%.2f")
			LeaPlusCB["FrameScale"]:HookScript("OnValueChanged", function(self, value)
				if currentframe then -- If a frame is selected
					-- Set real and drag frame scale
					LeaPlusDB["Frames"][currentframe]["Scale"] = value;
					_G[currentframe]:SetScale(LeaPlusDB["Frames"][currentframe]["Scale"]);
					LeaPlusLC["Drag" .. currentframe]:SetScale(LeaPlusDB["Frames"][currentframe]["Scale"]);
					-- If target frame scale is changed, also change combo point frame
					if currentframe == "TargetFrame" then
						ComboFrame:SetScale(LeaPlusDB["Frames"]["TargetFrame"]["Scale"]);
					end
					-- Set slider formatted text
					LeaPlusCB["FrameScale"].f:SetFormattedText("%.0f%%", LeaPlusLC["FrameScale"] * 100)
				end
			end)

			-- Set initial scale slider state and value
			LeaPlusCB["FrameScale"]:HookScript("OnShow", function()
				if not currentframe then
					-- No frame selected so select the player frame
					currentframe = PlayerFrame:GetName()
					LeaPlusLC["DragPlayerFrame"].t:SetColorTexture(0.0, 1.0, 0.0,0.5)
				end
				-- Set the scale slider value to the selected frame
				LeaPlusCB["FrameScale"]:SetValue(LeaPlusDB["Frames"][currentframe]["Scale"])
				-- Set slider formatted text
				LeaPlusCB["FrameScale"].f:SetFormattedText("%.0f%%", LeaPlusLC["FrameScale"] * 100)
			end)

			-- Help button tooltip
			SideFrames.h.tiptext = LeaPlusLC:Translate("Drag the frame overlays to position the frames.\n\nTo change the scale of a frame, click it to select it then adjust the scale slider.\n\nThis panel will close automatically if you enter combat.")

			-- Back button handler
			SideFrames.b:SetScript("OnClick", function()
				-- Hide outer control frame
				SideFrames:Hide();
				-- Hide drag frames
				for k, void in pairs(FrameTable) do
					LeaPlusLC[k]:Hide();
				end
				-- Show options panel at frame section
				LeaPlusLC["PageF"]:Show();
				LeaPlusLC["Page6"]:Show();
			end) 

			-- Reset button handler
			SideFrames.r:SetScript("OnClick", function()
				if LeaPlusLC:PlayerInCombat() then
					-- If player is in combat, print error and stop
					return
				else
					-- Set frames to default positions (presets)
					LeaPlusFramesDefaults();
					for k,v in pairs(FrameTable) do
						local vf = v:GetName()
						-- Store frame locations
						LeaPlusDB["Frames"][vf]["Point"], void, LeaPlusDB["Frames"][vf]["Relative"], LeaPlusDB["Frames"][vf]["XOffset"], LeaPlusDB["Frames"][vf]["YOffset"] = _G[vf]:GetPoint();
						-- Reset real frame scales and save them
						LeaPlusDB["Frames"][vf]["Scale"] = 1.00;
						_G[vf]:SetScale(LeaPlusDB["Frames"][vf]["Scale"]);
						-- Reset drag frame scales
						LeaPlusLC[k]:SetScale(LeaPlusDB["Frames"][vf]["Scale"]);
					end
					-- Set combo frame scale to match target frame scale
					ComboFrame:SetScale(LeaPlusDB["Frames"]["TargetFrame"]["Scale"]);
					-- Set the scale slider value to the selected frame scale
					LeaPlusCB["FrameScale"]:SetValue(LeaPlusDB["Frames"][currentframe]["Scale"]);
					-- Refresh the panel
					SideFrames:Hide();SideFrames:Show();
				end
			end)

			-- Show drag frames with configuration panel
			SideFrames:HookScript("OnShow", function()
				for k, void in pairs(FrameTable) do
					LeaPlusLC[k]:Show();
				end
			end)
			SideFrames:HookScript("OnHide", function()
				for k, void in pairs(FrameTable) do
					LeaPlusLC[k]:Hide();
				end
			end)

			-- Save frame positions
			local function SaveAllFrames()
				for k, v in pairs(FrameTable) do
					local vf = v:GetName();
					-- Stop real frames from moving
					v:StopMovingOrSizing();
					-- Save frame positions
					LeaPlusDB["Frames"][vf]["Point"], void, LeaPlusDB["Frames"][vf]["Relative"], LeaPlusDB["Frames"][vf]["XOffset"], LeaPlusDB["Frames"][vf]["YOffset"] = v:GetPoint();
					LeaPlusFramesSaveCache(vf)
				end
			end

			-- Prevent changes during combat
			SideFrames:RegisterEvent("PLAYER_REGEN_DISABLED")
			SideFrames:SetScript("OnEvent", function()
				-- Hide controls frame
				SideFrames:Hide();
				-- Hide drag frames
				for k,void in pairs(FrameTable) do
					LeaPlusLC[k]:Hide();
				end
				-- Save frame positions
				SaveAllFrames();
			end)

			-- Create drag frames
			local function LeaPlusMakeDrag(dragframe,realframe)

				local dragframe = CreateFrame("Frame", nil);
				LeaPlusLC[dragframe] = dragframe
				dragframe:SetSize(realframe:GetSize())
				dragframe:SetPoint("TOP", realframe, "TOP", 0, 2.5)

				dragframe:SetBackdropColor(0.0, 0.5, 1.0);
				dragframe:SetBackdrop({ 
					edgeFile = "Interface/Tooltips/UI-Tooltip-Border",
					tile = false, tileSize = 0, edgeSize = 16,
					insets = { left = 0, right = 0, top = 0, bottom = 0 }});
				dragframe:SetToplevel(true)

				-- Unclamp frame
				realframe:SetClampedToScreen(false)

				-- Hide the drag frame and make real frame movable
				dragframe:Hide()
				realframe:SetMovable(true);

				-- Click handler
				dragframe:SetScript("OnMouseDown", function(self, btn)

					-- Start dragging if left clicked
					if btn == "LeftButton" then
						realframe:StartMoving()
					end

					-- Set all drag frames to blue then tint the selected frame to green
					for k,v in pairs(FrameTable) do
						LeaPlusLC[k].t:SetColorTexture(0.0, 0.5, 1.0, 0.5)
					end
					dragframe.t:SetColorTexture(0.0, 1.0, 0.0, 0.5)

					-- Set currentframe variable to selected frame and set the scale slider value
					currentframe = realframe:GetName();
					LeaPlusCB["FrameScale"]:SetValue(LeaPlusDB["Frames"][currentframe]["Scale"]);

				end)

				dragframe:SetScript("OnMouseUp", function()
					-- Save frame positions
					SaveAllFrames();
				end)
	
				dragframe.t = dragframe:CreateTexture()
				dragframe.t:SetAllPoints()
				dragframe.t:SetColorTexture(0.0, 0.5, 1.0, 0.5)
				dragframe.t:SetAlpha(0.5)

				dragframe.f = dragframe:CreateFontString(nil, 'ARTWORK', 'GameFontNormalLarge')
				dragframe.f:SetPoint('CENTER', 0, 0)

				-- Add titles
				if realframe:GetName() == "PlayerFrame" 			then dragframe.f:SetText(LeaPlusLC:Translate("Player")) end
				if realframe:GetName() == "TargetFrame" 			then dragframe.f:SetText(LeaPlusLC:Translate("Target")) end
				if realframe:GetName() == "WorldStateAlwaysUpFrame" then dragframe.f:SetText(LeaPlusLC:Translate("World State")) end
				if realframe:GetName() == "MirrorTimer1" 			then dragframe.f:SetText(LeaPlusLC:Translate("Timer")) end
				if realframe:GetName() == "GhostFrame" 				then dragframe.f:SetText(LeaPlusLC:Translate("Ghost")) end
				return LeaPlusLC[dragframe]

			end
			
			for k,v in pairs(FrameTable) do
				LeaPlusLC[k] = LeaPlusMakeDrag(k,v)
			end

			-- Set frame scales
			for k,v in pairs(FrameTable) do
				local vf = v:GetName();
				_G[vf]:SetScale(LeaPlusDB["Frames"][vf]["Scale"]);
				LeaPlusLC[k]:SetScale(LeaPlusDB["Frames"][vf]["Scale"]);
			end
			ComboFrame:SetScale(LeaPlusDB["Frames"]["TargetFrame"]["Scale"]);

			-- Load defaults first then overwrite with saved values if they exist
			LeaPlusFramesDefaults();
			if LeaPlusDB["Frames"] then
				for k,v in pairs(FrameTable) do
					local vf = v:GetName()
					if LeaPlusDB["Frames"][vf] then
						if LeaPlusDB["Frames"][vf]["Point"] and LeaPlusDB["Frames"][vf]["Relative"] and LeaPlusDB["Frames"][vf]["XOffset"] and LeaPlusDB["Frames"][vf]["YOffset"] then
							LeaPlusFramesSaveCache(vf)
							_G[vf]:ClearAllPoints();
							_G[vf]:SetPoint(LeaPlusDB["Frames"][vf]["Point"], UIParent, LeaPlusDB["Frames"][vf]["Relative"], LeaPlusDB["Frames"][vf]["XOffset"], LeaPlusDB["Frames"][vf]["YOffset"])
						end
					end
				end
			end

			-- Add move button
			LeaPlusCB["MoveFramesButton"]:SetScript("OnClick", function()
				if LeaPlusLC:PlayerInCombat() then
					return
				else
					if IsShiftKeyDown() and IsControlKeyDown() then
						-- Preset profile
						LeaFramesSetPos(PlayerFrame				, "TOPLEFT"	, UIParent, "TOPLEFT"	,	"-35"	, "-14")
						LeaFramesSetPos(TargetFrame				, "TOPLEFT"	, UIParent, "TOPLEFT"	,	"190"	, "-14")
						LeaFramesSetPos(GhostFrame				, "CENTER"	, UIParent, "CENTER"	,	"3"		, "-142")
						LeaFramesSetPos(WorldStateAlwaysUpFrame	, "TOP"		, UIParent, "TOP"		,	"-40"	, "-530")
						LeaFramesSetPos(MirrorTimer1			, "TOP"		, UIParent, "TOP"		,	"0"		, "-120")
						LeaPlusDB["Frames"]["PlayerFrame"]["Scale"] = 1.20;
						PlayerFrame:SetScale(LeaPlusDB["Frames"]["PlayerFrame"]["Scale"]);
						LeaPlusLC["DragPlayerFrame"]:SetScale(LeaPlusDB["Frames"]["PlayerFrame"]["Scale"]);
						LeaPlusDB["Frames"]["TargetFrame"]["Scale"] = 1.20;
						TargetFrame:SetScale(LeaPlusDB["Frames"]["TargetFrame"]["Scale"]);
						LeaPlusLC["DragTargetFrame"]:SetScale(LeaPlusDB["Frames"]["TargetFrame"]["Scale"]);
						-- Set the slider to the selected frame (if there is one)
						if currentframe then LeaPlusCB["FrameScale"]:SetValue(LeaPlusDB["Frames"][currentframe]["Scale"]); end
						-- Save locations
						for k,v in pairs(FrameTable) do
							local vf = v:GetName();
							LeaPlusDB["Frames"][vf]["Point"], void, LeaPlusDB["Frames"][vf]["Relative"], LeaPlusDB["Frames"][vf]["XOffset"], LeaPlusDB["Frames"][vf]["YOffset"] = _G[vf]:GetPoint();
							LeaPlusFramesSaveCache(vf);
						end
					else
						-- Show mover frame
						SideFrames:Show();
						LeaPlusLC:HideFrames();

						-- Find out if the UI has a non-standard scale
						if GetCVar("useuiscale") == "1" then
							LeaPlusLC["gscale"] = GetCVar("uiscale")
						else
							LeaPlusLC["gscale"] = 1
						end

						-- Set all scaled sizes
						for k,v in pairs(FrameTable) do
							LeaPlusLC[k]:SetWidth(v:GetWidth() * LeaPlusLC["gscale"])
							LeaPlusLC[k]:SetHeight(v:GetHeight() * LeaPlusLC["gscale"])
						end

						-- Set specific scaled sizes for stubborn frames
						LeaPlusLC["DragWorldStateAlwaysUpFrame"]:SetSize(300 * LeaPlusLC["gscale"], 50 * LeaPlusLC["gscale"]);
						LeaPlusLC["DragMirrorTimer1"]:SetSize(206 * LeaPlusLC["gscale"], 50 * LeaPlusLC["gscale"]);
						LeaPlusLC["DragGhostFrame"]:SetSize(130 * LeaPlusLC["gscale"], 46 * LeaPlusLC["gscale"]);
					end
				end
			end)
		end

		-- Release memory
		LeaPlusLC.Variable = nil

	end

----------------------------------------------------------------------
--	L50: Player (only runs once)
----------------------------------------------------------------------

	function LeaPlusLC:Player()

		----------------------------------------------------------------------
		-- Show cooldowns
		----------------------------------------------------------------------

		if LeaPlusLC["ShowCooldowns"] == "On" then

			-- Create main table structure in saved variables if it doesn't exist
			if LeaPlusDB["Cooldowns"] == nil then
				LeaPlusDB["Cooldowns"] = {}
			end

			-- Create class tables if they don't exist
			for index = 1, GetNumClasses() do
				local classDisplayName, classTag, classID = GetClassInfo(index)
				if LeaPlusDB["Cooldowns"][classTag] == nil then
					LeaPlusDB["Cooldowns"][classTag] = {}
				end
			end

			-- Get current class and spec
			local PlayerClass = select(2, UnitClass("player"))
			local activeSpec = GetSpecialization() or 1

			-- Create local tables to store cooldown frames and editboxes
			local icon = {} -- Used to store cooldown frames
			local SpellEB = {} -- Used to store editbox values
			local iCount = 5 -- Number of cooldowns

			-- Create cooldown frames
			for i = 1, iCount do

				-- Create cooldown frame
				icon[i] = CreateFrame("Frame", nil, UIParent)
				icon[i]:SetFrameStrata("BACKGROUND")
				icon[i]:SetWidth(20)
				icon[i]:SetHeight(20)

				-- Create cooldown icon
				icon[i].c = CreateFrame("Cooldown", nil, icon[i], "CooldownFrameTemplate")
				icon[i].c:SetAllPoints()
				icon[i].c:SetReverse(true)

				-- Create blank texture (will be assigned a cooldown texture later)
				icon[i].t = icon[i]:CreateTexture(nil,"BACKGROUND")
				icon[i].t:SetAllPoints()

				-- Create frame for OnUpdate to anchor to (so it doesn't need to run unnecessarily)
				icon[i].z = CreateFrame("Frame", nil, icon[i])
				icon[i].z:Hide()

			end

			-- Change cooldown icon scale when player frame scale changes
			PlayerFrame:HookScript("OnSizeChanged", function()
				if LeaPlusLC["CooldownsOnPlayer"] == "On" then
					for i = 1, iCount do
						icon[i]:SetScale(PlayerFrame:GetScale())
					end
				end
			end)

			-- Change cooldown icon scale when target frame scale changes
			TargetFrame:HookScript("OnSizeChanged", function()
				if LeaPlusLC["CooldownsOnPlayer"] == "Off" then
					for i = 1, iCount do
						icon[i]:SetScale(TargetFrame:GetScale())
					end
				end
			end)

			-- Function to show cooldown textures in the cooldown frames
			local function ShowIcon(i, id, owner)

				local void

				-- Get spell information
				local spell, void, path = GetSpellInfo(id)

				if spell and path then

					-- Set icon texture to the spell texture
					icon[i].t:SetTexture(path)

					-- Set top level and raise frame strata (ensures tooltips show properly)
					icon[i]:SetToplevel(true)
					icon[i]:SetFrameStrata("LOW")

					-- Update cooldown tooltip
					if LeaPlusLC["CooldownTips"] == "On" then

						-- Update tooltip while OnEnter is active
						icon[i].z:SetScript("OnUpdate", function()
							if GameTooltip:IsOwned(icon[i]) then
								-- Tooltip is showing so update it
								GameTooltip:SetUnitBuff(owner, spell)
							end
						end)

						-- Show tooltip when OnEnter is active
						icon[i]:SetScript("OnEnter", function(self)
							if LeaPlusLC["CooldownTips"] == "On" then
								-- Show the tooltip for the spell
								GameTooltip:SetOwner(self, "ANCHOR_BOTTOMRIGHT", 15, -25)
								GameTooltip:SetUnitBuff(owner, spell)
								-- Show the anchor frame to trigger OnUpdate
								icon[i].z:Show()
							end
						end)

						-- Hide tooltip and remove OnUpdate
						icon[i]:SetScript("OnLeave", function(self)
							if LeaPlusLC["CooldownTips"] == "On" then
								GameTooltip:Hide()
								-- Hide the anchor frame
								icon[i].z:Hide()
							end
						end)

					else

						-- Clear all script handlers if tooltips aren't required
						icon[i].z:SetScript("OnUpdate", nil)
						icon[i]:SetScript("OnEnter", nil)
						icon[i]:SetScript("OnLeave", nil)

					end
					
					-- Handle events
					icon[i]:RegisterUnitEvent("UNIT_AURA", owner)
					icon[i]:RegisterUnitEvent("UNIT_PET", "player")
					icon[i]:SetScript("OnEvent", function(self, event, arg1)

						-- If pet was dismissed (or otherwise disappears such as when flying), hide pet cooldowns
						if event == "UNIT_PET" then
							if not UnitExists("pet") then
								if LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"] then
									icon[i]:Hide()
								end
							end

						-- Ensure cooldown belongs to the owner we are watching (player or pet)
						elseif arg1 == owner then

							-- Hide the cooldown frame (required for cooldowns to disappear after the duration)
							icon[i]:Hide()

							-- If buff matches cooldown we want, start the cooldown
							local buff, void, void, stack, void, length, expire = UnitBuff(owner, spell)
							if buff then
								local stackval = tonumber(SpellEB[i.."Stack"]:GetText())
								if (stackval and stack >= stackval) or (not stackval) then
									icon[i]:Show()
									local start = expire - length
									CooldownFrame_Set(icon[i].c, start, length, 1)
								end
							end

						end
					end)

				else

					-- Spell does not exist so stop watching it
					icon[i]:UnregisterEvent("UNIT_AURA")
					icon[i]:SetScript("OnEvent", nil)
					icon[i]:Hide()
					icon[i].z:SetScript("OnUpdate", nil)
					icon[i]:SetScript("OnEnter", nil)
					icon[i]:SetScript("OnLeave", nil)

				end

			end

			-- Create configuration panel
			local CooldownPanel = LeaPlusLC:CreatePanel("Cooldowns", "CooldownPanel")

			-- Function to refresh the tooltip with the spell name
			local function RefSpellTip(self,elapsed)
				local spellinfo, void, icon = GetSpellInfo(self:GetText())
				if spellinfo and spellinfo ~= "" and icon ~= "" then
					GameTooltip:SetOwner(self, "ANCHOR_NONE")
					GameTooltip:ClearAllPoints()
					GameTooltip:SetPoint("RIGHT", self, "LEFT", -10, 0)
					GameTooltip:SetText("|T" .. icon .. ":0|t " .. spellinfo, nil, nil, nil, nil, true)
				else
					GameTooltip:Hide()
				end
			end

			-- Function to create spell ID editboxes and pet checkboxes
			local function MakeSpellEB(num, x, y, tab, shifttab)

				-- Create editbox for spell ID
                SpellEB[num] = LeaPlusLC:CreateEditBox("Spell" .. num, CooldownPanel, 70, 6, "TOPLEFT", x, y - 20, "Spell" .. num .. "Stack", "Spell" .. shifttab .. "Stack")
				SpellEB[num]:SetNumeric(true)

				-- Set initial value (for current spec)
				SpellEB[num]:SetText(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. num .. "Idn"] or "")

				-- Refresh tooltip when mouse is hovering over the editbox
				SpellEB[num]:SetScript("OnEnter", function()
					SpellEB[num]:SetScript("OnUpdate", RefSpellTip)
				end)
				SpellEB[num]:SetScript("OnLeave", function()
					SpellEB[num]:SetScript("OnUpdate", nil)
					GameTooltip:Hide()
				end)

				-- Create editbox for stack size
				SpellEB[num .. "Stack"] = LeaPlusLC:CreateEditBox("Spell" .. num .. "Stack", CooldownPanel, 30, 2, "TOPLEFT", x + 80, y - 20, "Spell" .. tab, "Spell" .. num)
				SpellEB[num .. "Stack"]:SetNumeric(true)

				-- Set initial value (for current spec)
				SpellEB[num .. "Stack"]:SetText(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. num .. "Stk"] or "")

				-- Create checkbox for pet cooldown
				LeaPlusLC:MakeCB(CooldownPanel, "Spell" .. num .."Pet", "", 504, y - 20, false, "")
				LeaPlusCB["Spell" .. num .."Pet"]:SetHitRectInsets(0, 0, 0, 0)

			end

			-- Add titles
			LeaPlusLC:MakeTx(CooldownPanel, "Spell ID", 384, -92)
			LeaPlusLC:MakeTx(CooldownPanel, "Stack", 462, -92)
			LeaPlusLC:MakeTx(CooldownPanel, "Pet", 506, -92)

			-- Add editboxes and checkboxes
			MakeSpellEB(1, 386, -92, "2", "5")
			MakeSpellEB(2, 386, -122, "3", "1")
			MakeSpellEB(3, 386, -152, "4", "2")
			MakeSpellEB(4, 386, -182, "5", "3")
			MakeSpellEB(5, 386, -212, "1", "4")

			-- Add checkboxes
			LeaPlusLC:MakeTx(CooldownPanel, "Settings", 16, -72)
			LeaPlusLC:MakeCB(CooldownPanel, "CooldownTips", "Show tooltips for the cooldown icons", 16, -92, false, "If checked, cooldown icon tooltips will be shown.")
			LeaPlusLC:MakeCB(CooldownPanel, "ShowCooldownID", "Show the spell ID in buff icon tooltips", 16, -112, false, "If checked, spell IDs will be shown in buff icon tooltips located in the buff frame and under the target frame.");
			LeaPlusLC:MakeCB(CooldownPanel, "NoCooldownDuration", "Hide cooldown duration numbers (if enabled)", 16, -132, false, "If checked, cooldown duration numbers will not be shown over the cooldowns.\n\nIf unchecked, cooldown duration numbers will be shown over the cooldowns if they are enabled in the game options panel ('ActionBars' menu).")
			LeaPlusLC:MakeCB(CooldownPanel, "CooldownsOnPlayer", "Anchor the cooldown icons to the player frame", 16, -152, false, "If checked, cooldown icons will be shown above the player frame instead of the target frame.\n\nIf unchecked, cooldown icons will be shown above the target frame.")

			-- Function to save the panel control settings and refresh the cooldown icons
			local function SavePanelControls()
				for i = 1, iCount do

					-- Refresh the cooldown texture
					icon[i].c:SetCooldown(0,0)

					-- Show icons above target or player frame
					icon[i]:ClearAllPoints()
					if LeaPlusLC["CooldownsOnPlayer"] == "On" then
						icon[i]:SetPoint("TOPLEFT", PlayerFrame, "TOPLEFT", 116 + (22 * (i - 1)), 5)
						icon[i]:SetScale(PlayerFrame:GetScale())
					else
						icon[i]:SetPoint("TOPLEFT", TargetFrame, "TOPLEFT", 6 + (22 * (i - 1)), 5)
						icon[i]:SetScale(TargetFrame:GetScale())
					end

					-- Save control states to globals
					LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Idn"] = SpellEB[i]:GetText()
					LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Stk"] = SpellEB[i .. "Stack"]:GetText()
					LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"] = LeaPlusCB["Spell" .. i .."Pet"]:GetChecked()

					-- Set cooldowns
					if LeaPlusCB["Spell" .. i .."Pet"]:GetChecked() then
						ShowIcon(i, SpellEB[i]:GetText(), "pet")
					else
						ShowIcon(i, SpellEB[i]:GetText(), "player")
					end

					-- Hide cooldown duration
					if LeaPlusLC["NoCooldownDuration"] == "On" then
						icon[i].c:SetHideCountdownNumbers(true)
					else
						icon[i].c:SetHideCountdownNumbers(false)
					end

					-- Show or hide cooldown icons depending on current buffs
					local newowner
					local newspell = GetSpellInfo(SpellEB[i]:GetText())
					if newspell then
						if LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"] then 
							newowner = "pet" 
						else
							newowner = "player"
						end
						-- Hide cooldown icon
						icon[i]:Hide()

						-- If buff matches spell we want, show cooldown icon
						local buff, void, void, stack, void, length, expire = UnitBuff(newowner, newspell)
						if buff then
							local stackval = tonumber(SpellEB[i .. "Stack"]:GetText())
							if (stackval and stack >= stackval) or (not stackval) then
								icon[i]:Show()

								-- Set the cooldown to the buff cooldown
								CooldownFrame_Set(icon[i].c, expire - length, length, 1)
							end
						end
					end

				end

			end

			-- Update cooldown icons when checkboxes are clicked
			LeaPlusCB["CooldownTips"]:HookScript("OnClick", SavePanelControls)
			LeaPlusCB["NoCooldownDuration"]:HookScript("OnClick", SavePanelControls)
			LeaPlusCB["CooldownsOnPlayer"]:HookScript("OnClick", SavePanelControls)

			-- Help button tooltip
			CooldownPanel.h.tiptext = LeaPlusLC:Translate("Enter the spell IDs for the cooldown icons that you want to see.\n\nIf you want a cooldown icon to show only when it is stacked, enter the minimum stack size (otherwise leave it blank).\n\nIf a cooldown icon normally appears under the pet frame, check the pet checkbox.\n\nCooldown icons are saved to your class and specialisation.")

			-- Back button handler
			CooldownPanel.b:SetScript("OnClick", function()
				CooldownPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page5"]:Show()
				return
			end) 

			-- Reset button handler
			CooldownPanel.r:SetScript("OnClick", function()
				-- Reset the checkboxes
				LeaPlusLC["CooldownTips"] = "On"
				LeaPlusLC["ShowCooldownID"] = "On"
				LeaPlusLC["NoCooldownDuration"] = "On"
				LeaPlusLC["CooldownsOnPlayer"] = "Off"
				for i = 1, iCount do
					-- Reset the panel controls
					SpellEB[i]:SetText("");
					SpellEB[i.."Stack"]:SetText("");
					LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"] = false
					-- Hide cooldowns and clear scripts
					icon[i]:Hide()
					icon[i]:UnregisterEvent("UNIT_AURA")
					icon[i]:SetScript("OnEvent", nil)
					icon[i].z:SetScript("OnUpdate", nil)
					icon[i]:SetScript("OnEnter", nil)
					icon[i]:SetScript("OnLeave", nil)
				end
				CooldownPanel:Hide(); CooldownPanel:Show()
			end)

			-- Save editboxes when changed
			for i = 1, iCount do
				-- Set initial checkbox states
				LeaPlusCB["Spell" .. i .."Pet"]:SetChecked(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"])
				-- Set checkbox states when shown
				LeaPlusCB["Spell" .. i .."Pet"]:SetScript("OnShow", function()
					LeaPlusCB["Spell" .. i .."Pet"]:SetChecked(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"])
				end)
				-- Set states when changed
				SpellEB[i]:SetScript("OnTextChanged", SavePanelControls)
				SpellEB[i.."Stack"]:SetScript("OnTextChanged", SavePanelControls)
				LeaPlusCB["Spell" .. i .."Pet"]:SetScript("OnClick", SavePanelControls)
			end

			-- Show cooldowns on startup
			SavePanelControls();

			-- Show panel when configuration button is clicked
			LeaPlusCB["CooldownsButton"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- No preset profile
				else
					-- Show panel
					CooldownPanel:Show()
					LeaPlusLC:HideFrames()
				end
			end)

			-- Create spec tag banner fontstring
			local specTagSpecID = GetSpecialization()
			local specTagSpecInfoID, specTagName = GetSpecializationInfo(specTagSpecID)
			local specTagBanner = CooldownPanel:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
			specTagBanner:SetPoint("TOPLEFT", 384, -72)
			specTagBanner:SetText(specTagName)

            -- Set controls when spec changes
            local swapFrame = CreateFrame("FRAME")
            swapFrame:RegisterEvent("PLAYER_SPECIALIZATION_CHANGED")
            swapFrame:SetScript("OnEvent", function()
				-- Store new spec
				activeSpec = GetSpecialization()
				-- Update controls for new spec
				for i = 1, iCount do
					SpellEB[i]:SetText(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Idn"] or "")
					SpellEB[i.."Stack"]:SetText(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Stk"] or "")
					LeaPlusCB["Spell" .. i .. "Pet"]:SetChecked(LeaPlusDB["Cooldowns"][PlayerClass]["S" .. activeSpec .. "R" .. i .. "Pet"] or false)
				end
				-- Update spec tag banner with new spec
				local specTagSpecInfoID, specTagName = GetSpecializationInfo(activeSpec)
				specTagBanner:SetText(specTagName)
				-- Refresh configuration panel
				if CooldownPanel:IsShown() then 
					CooldownPanel:Hide(); CooldownPanel:Show()
				end
				-- Save settings
				SavePanelControls()
            end)

			-- Function to show spell ID in tooltips
			local function CooldownIDFunc(unit, target, index)
				if LeaPlusLC["ShowCooldownID"] == "On" then
					local spellid = select(11, UnitAura(target, index))
					if spellid then
						GameTooltip:AddLine(LeaPlusLC:Translate("Spell ID") .. ": " .. spellid)
						GameTooltip:Show()
					end
				end
			end

			-- Add spell ID to tooltip when buff frame buffs are hovered
			hooksecurefunc(GameTooltip, 'SetUnitAura', CooldownIDFunc)   

			-- Add spell ID to tooltip when target frame buffs are hovered
			hooksecurefunc(GameTooltip, 'SetUnitBuff', CooldownIDFunc)

		end

		----------------------------------------------------------------------
		-- Lockout sharing
		----------------------------------------------------------------------

		if LeaPlusLC["LockoutSharing"] == "On" then
			-- Check the display menu option, update the game options panel and lockout changes
			ShowAccountAchievements(true)
			InterfaceOptionsPanel_CheckButton_Update(InterfaceOptionsSocialPanelShowAccountAchievments)
			LeaPlusLC:LockItem(InterfaceOptionsSocialPanelShowAccountAchievments, true)
			InterfaceOptionsSocialPanelShowAccountAchievmentsText:SetText(InterfaceOptionsSocialPanelShowAccountAchievmentsText:GetText() .. "\n" .. LeaPlusLC:Translate("Managed by Leatrix Plus"))
		end

		----------------------------------------------------------------------
		-- Combat plates
		----------------------------------------------------------------------

		if LeaPlusLC["CombatPlates"] == "On" then

			-- Toggle nameplates with combat
			local f = CreateFrame("Frame")
			f:RegisterEvent("PLAYER_REGEN_DISABLED")
			f:RegisterEvent("PLAYER_REGEN_ENABLED")
			f:SetScript("OnEvent", function(self, event)
				SetCVar("nameplateShowEnemies", event == "PLAYER_REGEN_DISABLED" and 1 or 0)
			end)

			-- Run combat check on startup
			SetCVar("nameplateShowEnemies", UnitAffectingCombat("player") and 1 or 0)

		end

		----------------------------------------------------------------------
		-- Manage tooltip
		----------------------------------------------------------------------

		if LeaPlusLC["TipModEnable"] == "On" then

			----------------------------------------------------------------------
			--	Position the tooltip
			----------------------------------------------------------------------

			-- Position general tooltip
			hooksecurefunc("GameTooltip_SetDefaultAnchor", function()
				GameTooltip:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"]);
			end)

			-- Position pet battle ability tooltips
			hooksecurefunc("PetBattleAbilityTooltip_Show", function(tooltip, parent)
				if parent == UIParent then
					PetBattlePrimaryAbilityTooltip:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"]);
				end
			end)

			----------------------------------------------------------------------
			--	Tooltip Configuration
			----------------------------------------------------------------------

			local LT = {}

			-- Create locale specific level string
			LT["LevelLocale"] = strtrim(strtrim(string.gsub(TOOLTIP_UNIT_LEVEL, "%%s", "")))

			-- Tooltip
			LT["ColorBlind"] = GetCVar("colorblindMode")

			-- 	Create drag frame
			local TipDrag = CreateFrame("Frame", nil, UIParent)
			TipDrag:SetToplevel(true);
			TipDrag:SetClampedToScreen(false);
			TipDrag:SetSize(130, 64);
			TipDrag:Hide();
			TipDrag:SetFrameStrata("TOOLTIP")
			TipDrag:SetMovable(true)
			TipDrag:SetBackdropColor(0.0, 0.5, 1.0);
			TipDrag:SetBackdrop({ 
				edgeFile = "Interface/Tooltips/UI-Tooltip-Border",
				tile = false, tileSize = 0, edgeSize = 16,
				insets = { left = 0, right = 0, top = 0, bottom = 0 }});

			-- Show text in drag frame
			TipDrag.f = TipDrag:CreateFontString(nil, 'ARTWORK', 'GameFontNormalLarge')
			TipDrag.f:SetPoint("CENTER", 0, 0)
			TipDrag.f:SetText(LeaPlusLC:Translate("Tooltip"))

			-- Create texture
			TipDrag.t = TipDrag:CreateTexture();
			TipDrag.t:SetAllPoints();
			TipDrag.t:SetColorTexture(0.0, 0.5, 1.0, 0.5);
			TipDrag.t:SetAlpha(0.5);

			---------------------------------------------------------------------------------------------------------
			-- Tooltip movement settings
			---------------------------------------------------------------------------------------------------------

			-- Create tooltip customisation side panel
			local SideTip = LeaPlusLC:CreatePanel("Tooltip", "SideTip")

			-- Add controls
			LeaPlusLC:MakeTx(SideTip, "Settings", 16, -72)
			LeaPlusLC:MakeCB(SideTip, "TipShowRank", "Show guild ranks for your guild", 16, -92, false, "If checked, guild ranks will be shown for players in your guild.")
			LeaPlusLC:MakeCB(SideTip, "TipShowTarget", "Show the unit's target", 16, -112, false, "If checked, unit targets will be shown.")
			LeaPlusLC:MakeCB(SideTip, "TipBackSimple", "Color the backdrops based on faction", 16, -132, false, "If checked, backdrops will be tinted blue (friendly) or red (hostile).")
			LeaPlusLC:MakeCB(SideTip, "TipHideInCombat", "Hide tooltips for world units during combat", 16, -152, false, "If checked, tooltips for world units will be hidden during combat.\n\nYou can hold the shift key down to over-ride this setting.")

			LeaPlusLC:MakeTx(SideTip, "Tooltip scale", 356, -72)
			LeaPlusLC:MakeSL(SideTip, "LeaPlusTipSize", "", 0.50, 2.00, 0.05, 356, -92, "%.2f")

			-- Help button tooltip
			SideTip.h.tiptext = LeaPlusLC:Translate("Drag the tooltip overlay to position it.\n\nScale and style the tooltip using the settings on this page.")

			-- Back button handler
			SideTip.b:SetScript("OnClick", function() 
				SideTip:Hide();
				if TipDrag:IsShown() then
					TipDrag:Hide();
				end
				LeaPlusLC["PageF"]:Show();
				LeaPlusLC["Page5"]:Show();
				return
			end) 

			-- Reset button handler
			SideTip.r:SetScript("OnClick", function()
				LeaPlusLC["TipShowRank"] = "On";
				LeaPlusLC["TipShowTarget"] = "On";
				LeaPlusLC["TipBackSimple"] = "Off";
				LeaPlusLC["TipHideInCombat"] = "Off";
				LeaPlusLC["LeaPlusTipSize"] = 1.00
				LeaPlusLC["TipOffsetX"] = -13
				LeaPlusLC["TipOffsetY"] = 94
				TipDrag:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"]);
				LeaPlusLC:SetTipScale()
				SideTip:Hide(); SideTip:Show();
			end)

			-- Show drag frame with configuration panel
			SideTip:HookScript("OnShow", function() TipDrag:Show() end)
			SideTip:HookScript("OnHide", function() TipDrag:Hide() end)

			-- Control movement functions
			local void, LTax, LTay, LTbx, LTby, LTcx, LTcy
			TipDrag:SetScript("OnMouseDown", function(self, btn)
				if btn == "LeftButton" then
					void, void, void, LTax, LTay = TipDrag:GetPoint()
					TipDrag:StartMoving()
					void, void, void, LTbx, LTby = TipDrag:GetPoint()
				end
			end)
			TipDrag:SetScript("OnMouseUp", function(self, btn)
				if btn == "LeftButton" then
					void, void, void, LTcx, LTcy = TipDrag:GetPoint()
					TipDrag:StopMovingOrSizing();
					LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"] = LTcx - LTbx + LTax, LTcy - LTby + LTay
					TipDrag:ClearAllPoints()
					TipDrag:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"])
				end
			end)

			--	Move the tooltip
			LeaPlusCB["MoveTooltipButton"]:SetScript("OnClick", function()
				if IsShiftKeyDown() and IsControlKeyDown() then
					-- Preset profile
					LeaPlusLC["TipShowRank"] = "On";
					LeaPlusLC["TipShowTarget"] = "On";
					LeaPlusLC["TipBackSimple"] = "On";
					LeaPlusLC["TipHideInCombat"] = "Off";
					LeaPlusLC["LeaPlusTipSize"] = 1.25
					LeaPlusLC["TipOffsetX"] = -13
					LeaPlusLC["TipOffsetY"] = 94
					TipDrag:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"]);
					LeaPlusLC:SetTipScale()
					LeaPlusLC:SetDim();
					LeaPlusLC:ReloadCheck();
					SideTip:Show(); SideTip:Hide(); -- Needed to update tooltip scale
					LeaPlusLC["PageF"]:Hide(); LeaPlusLC["PageF"]:Show();
				else
					-- Show tooltip configuration panel
					LeaPlusLC:HideFrames();
					SideTip:Show();

					-- Set scale
					TipDrag:SetScale(LeaPlusLC["LeaPlusTipSize"])

					-- Set position of the drag frame
					TipDrag:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", LeaPlusLC["TipOffsetX"], LeaPlusLC["TipOffsetY"])
				end			

			end)
					
			---------------------------------------------------------------------------------------------------------
			-- Tooltip scale settings
			---------------------------------------------------------------------------------------------------------

			-- Function to set the tooltip scale
			local function SetTipScale()
				if LeaPlusLC["TipModEnable"] == "On" then

					-- General tooltip
					if GameTooltip then GameTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- Friends
					if FriendsTooltip then FriendsTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- Pet battles and battle pets
					if PetBattlePrimaryAbilityTooltip then PetBattlePrimaryAbilityTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if PetBattlePrimaryUnitTooltip then PetBattlePrimaryUnitTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if BattlePetTooltip then BattlePetTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if FloatingBattlePetTooltip then FloatingBattlePetTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- Garrison
					if FloatingGarrisonFollowerTooltip then FloatingGarrisonFollowerTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if FloatingGarrisonFollowerAbilityTooltip then FloatingGarrisonFollowerAbilityTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if FloatingGarrisonMissionTooltip then FloatingGarrisonMissionTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if FloatingGarrisonShipyardFollowerTooltip then FloatingGarrisonShipyardFollowerTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- Order Hall
					if GarrisonFollowerMissionAbilityWithoutCountersTooltip then GarrisonFollowerMissionAbilityWithoutCountersTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if GarrisonFollowerAbilityWithoutCountersTooltip then GarrisonFollowerAbilityWithoutCountersTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- Items (links, comparisons)
					if ItemRefTooltip then ItemRefTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if ItemRefShoppingTooltip1 then ItemRefShoppingTooltip1:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if ItemRefShoppingTooltip2 then ItemRefShoppingTooltip2:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if ShoppingTooltip1 then ShoppingTooltip1:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if ShoppingTooltip2 then ShoppingTooltip2:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- World map (objectives, story, comparisons)
					if WorldMapTooltip then WorldMapTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if WorldMapCompareTooltip1 then WorldMapCompareTooltip1:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if WorldMapCompareTooltip2 then WorldMapCompareTooltip2:SetScale(LeaPlusLC["LeaPlusTipSize"]) end
					if QuestScrollFrame.StoryTooltip then
						QuestScrollFrame.StoryTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
						QuestScrollFrame.StoryTooltip:SetFrameStrata("TOOLTIP")
					end

					-- Minimap (PVP queue status)
					if QueueStatusFrame then QueueStatusFrame:SetScale(LeaPlusLC["LeaPlusTipSize"]) end

					-- Leatrix Plus
					TipDrag:SetScale(LeaPlusLC["LeaPlusTipSize"])

					-- Set slider formatted text
					LeaPlusCB["LeaPlusTipSize"].f:SetFormattedText("%.0f%%", LeaPlusLC["LeaPlusTipSize"] * 100)

				end
				return
			end

			-- Give function a file level scope
			LeaPlusLC.SetTipScale = SetTipScale

			-- Set tooltip scale when slider or checkbox changes and on startup
			LeaPlusCB["LeaPlusTipSize"]:HookScript("OnValueChanged", SetTipScale)
			SetTipScale()

			----------------------------------------------------------------------
			-- Pet Journal tooltips
			----------------------------------------------------------------------

			local function PetJournalTipFunc()

				-- Function to set tooltip scale
				local function SetPetJournalTipScale()
					PetJournalPrimaryAbilityTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
				end

				-- Set tooltip scale when slider changes and on startup
				LeaPlusCB["LeaPlusTipSize"]:HookScript("OnValueChanged", SetPetJournalTipScale)
				SetPetJournalTipScale()

			end

			-- Run function when Blizzard addon has loaded
			if IsAddOnLoaded("Blizzard_Collections") then
				PetJournalTipFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_Collections" then
						PetJournalTipFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			----------------------------------------------------------------------
			-- Encounter Journal tooltips
			----------------------------------------------------------------------

			local function EncounterJournalTipFunc()

				-- Function to set tooltip scale
				local function SetEncounterJournalTipScale()
					EncounterJournalTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
				end

				-- Set tooltip scale when slider changes and on startup
				LeaPlusCB["LeaPlusTipSize"]:HookScript("OnValueChanged", SetEncounterJournalTipScale)
				SetEncounterJournalTipScale()

			end

			-- Run function when Blizzard addon has loaded
			if IsAddOnLoaded("Blizzard_EncounterJournal") then
				EncounterJournalTipFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_EncounterJournal" then
						EncounterJournalTipFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			----------------------------------------------------------------------
			-- Death Recap frame tooltips
			----------------------------------------------------------------------

			local function DeathRecapFrameFunc()

				-- Simple fix to prevent mousing over units behind the frame
				DeathRecapFrame:EnableMouse(true)

			end

			-- Run function when Blizzard addon has loaded
			if IsAddOnLoaded("Blizzard_DeathRecap") then
				DeathRecapFrameFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_DeathRecap" then
						DeathRecapFrameFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			----------------------------------------------------------------------
			-- PVP UI tooltips
			----------------------------------------------------------------------

			local function PVPRewardTipFunc()

				-- Function to set tooltip scale
				local function PVPRewardSetTip()
					PVPRewardTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
				end

				-- Set tooltip scale when slider changes and on startup
				LeaPlusCB["LeaPlusTipSize"]:HookScript("OnValueChanged", PVPRewardSetTip)
				PVPRewardSetTip()

			end

			-- Run function when Blizzard addon has loaded
			if IsAddOnLoaded("Blizzard_PVPUI") then
				PVPRewardTipFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_PVPUI" then
						PVPRewardTipFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			----------------------------------------------------------------------
			-- Garrison tooltips
			----------------------------------------------------------------------

			local function GarrisonFunc()

				-- Function to set tooltip scale
				local function SetGarrisonTipScale()
					GarrisonFollowerTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonFollowerAbilityTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonMissionMechanicTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonMissionMechanicFollowerCounterTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonBuildingFrame.BuildingLevelTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonBonusAreaTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonShipyardMapMissionTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
					GarrisonShipyardFollowerTooltip:SetScale(LeaPlusLC["LeaPlusTipSize"])
				end

				-- Set tooltip scale when slider changes and on startup
				LeaPlusCB["LeaPlusTipSize"]:HookScript("OnValueChanged", SetGarrisonTipScale)
				SetGarrisonTipScale()

			end

			-- Run function when Blizzard addon has loaded
			if IsAddOnLoaded("Blizzard_GarrisonUI") then
				GarrisonFunc()
			else
				local waitFrame = CreateFrame("FRAME")
				waitFrame:RegisterEvent("ADDON_LOADED")
				waitFrame:SetScript("OnEvent", function(self, event, arg1)
					if arg1 == "Blizzard_GarrisonUI" then
						GarrisonFunc()
						waitFrame:UnregisterAllEvents()
					end
				end)
			end

			---------------------------------------------------------------------------------------------------------
			-- Other tooltip code
			---------------------------------------------------------------------------------------------------------

			-- Colorblind setting change
			TipDrag:RegisterEvent("CVAR_UPDATE");
			TipDrag:SetScript("OnEvent", function(self, event, arg1, arg2)
				if (arg1 == "USE_COLORBLIND_MODE") then
					LT["ColorBlind"] = arg2;
				end
			end)

			-- Store locals
			local TipMClass = LOCALIZED_CLASS_NAMES_MALE
			local TipFClass = LOCALIZED_CLASS_NAMES_FEMALE
			local LevelString = string.lower(TOOLTIP_UNIT_LEVEL:gsub("%%s",".+"));
			local BOSS = BOSS

			--	Show tooltip
			local function ShowTip()

				-- Do nothing if CTRL, SHIFT and ALT are being held
				if IsControlKeyDown() and IsAltKeyDown() and IsShiftKeyDown() then 
					return
				end

				-- Get unit information
				if GetMouseFocus() == WorldFrame then
					LT["Unit"] = "mouseover"
					-- Hide and quit if tips should be hidden during combat 
					if LeaPlusLC["TipHideInCombat"] == "On" and UnitAffectingCombat("player") and not IsShiftKeyDown() then
						GameTooltip:Hide()
						return
					end
				else
					LT["Unit"] = select(2, GameTooltip:GetUnit())
					if not (LT["Unit"]) then return end
				end

				-- Quit if unit has no reaction to player
				LT["Reaction"] = UnitReaction(LT["Unit"], "player") or nil
				if not LT["Reaction"] then 
					return
				end

				-- Quit if unit is a wild pet
				if UnitIsWildBattlePet(LT["Unit"]) then return end

				-- Setup variables
				LT["TipUnitName"], LT["TipUnitRealm"] = UnitName(LT["Unit"])
				LT["TipIsPlayer"] = UnitIsPlayer(LT["Unit"])
				LT["UnitLevel"] = UnitEffectiveLevel(LT["Unit"])
				LT["RealLevel"] = UnitLevel(LT["Unit"])
				LT["UnitClass"] = select(2, UnitClassBase(LT["Unit"]))
				LT["PlayerControl"] = UnitPlayerControlled(LT["Unit"])
				LT["PlayerRace"] = UnitRace(LT["Unit"])

				-- Get guild information
				if LT["TipIsPlayer"] then
					if GetGuildInfo(LT["Unit"]) then
						-- Unit is guilded
						if LT["ColorBlind"] == "1" then
							LT["GuildLine"], LT["InfoLine"] = 2, 4
						else
							LT["GuildLine"], LT["InfoLine"] = 2, 3
						end
						LT["GuildName"], LT["GuildRank"] = GetGuildInfo(LT["Unit"])
					else
						-- Unit is not guilded
						LT["GuildName"] = nil
						if LT["ColorBlind"] == "1" then
							LT["GuildLine"], LT["InfoLine"] = 0, 3
						else
							LT["GuildLine"], LT["InfoLine"] = 0, 2
						end
					end
					-- Lower information line if unit is charmed
					if UnitIsCharmed(LT["Unit"]) then
						LT["InfoLine"] = LT["InfoLine"] + 1
					end
				end

				-- Determine class color
				if LT["UnitClass"] then
					-- Define male or female (for certain locales)
					LT["Sex"] = UnitSex(LT["Unit"])
					if LT["Sex"] == 2 then
						LT["Class"] = TipMClass[LT["UnitClass"]]
					else
						LT["Class"] = TipFClass[LT["UnitClass"]]
					end
					-- Define class color
					LT["ClassCol"] = LeaPlusLC["RaidColors"][LT["UnitClass"]]
					LT["LpTipClassColor"] = "|cff" .. string.format("%02x%02x%02x", LT["ClassCol"].r * 255, LT["ClassCol"].g * 255, LT["ClassCol"].b * 255)
				end

				----------------------------------------------------------------------
				-- Name line
				----------------------------------------------------------------------

				if ((LT["TipIsPlayer"]) or (LT["PlayerControl"])) or LT["Reaction"] > 4 then

					-- If it's a player show name in class color
					if LT["TipIsPlayer"] then
						LT["NameColor"] = LT["LpTipClassColor"]
					else
						-- If not, set to green or blue depending on PvP status
						if UnitIsPVP(LT["Unit"]) then
							LT["NameColor"] = "|cff00ff00"
						else
							LT["NameColor"] = "|cff00aaff"
						end
					end

					-- Show name
					LT["NameText"] = UnitPVPName(LT["Unit"]) or LT["TipUnitName"]

					-- Show realm
					if LT["TipUnitRealm"] then
						LT["NameText"] = LT["NameText"] .. " - " .. LT["TipUnitRealm"]
					end

					-- Show dead units in grey
					if UnitIsDeadOrGhost(LT["Unit"]) then
						LT["NameColor"] = "|c88888888"
					end

					-- Show name line
					_G["GameTooltipTextLeft1"]:SetText(LT["NameColor"] .. LT["NameText"] .. "|cffffffff|r")
					
				elseif UnitIsDeadOrGhost(LT["Unit"]) then

					-- Show grey name for other dead units
					_G["GameTooltipTextLeft1"]:SetText("|c88888888" .. (_G["GameTooltipTextLeft1"]:GetText() or "") .. "|cffffffff|r")
					return

				end

				----------------------------------------------------------------------
				-- Guild line
				----------------------------------------------------------------------

				if LT["TipIsPlayer"] and LT["GuildName"] then
					
					-- Show guild line
					if LeaPlusLC["TipShowRank"] == "On" then
						if UnitIsInMyGuild(LT["Unit"]) then
							_G["GameTooltipTextLeft" .. LT["GuildLine"]]:SetText("|c00aaaaff" .. LT["GuildName"] .. " - " .. LT["GuildRank"] .. "|r")
						else
							_G["GameTooltipTextLeft" .. LT["GuildLine"]]:SetText("|c00aaaaff" .. LT["GuildName"] .. "|cffffffff|r")
						end
					else
						_G["GameTooltipTextLeft" .. LT["GuildLine"]]:SetText("|c00aaaaff" .. LT["GuildName"] .. "|cffffffff|r")
					end

				end

				----------------------------------------------------------------------
				-- Information line (level, class, race)
				----------------------------------------------------------------------

				if LT["TipIsPlayer"] then

					-- Show level
					if LT["Reaction"] < 5 then
						if LT["UnitLevel"] == -1 then
							LT["InfoText"] = ("|cffff3333Level ??|cffffffff")
						else
							LT["LevelColor"] = GetCreatureDifficultyColor(LT["UnitLevel"])
							LT["LevelColor"] = string.format('%02x%02x%02x', LT["LevelColor"].r * 255, LT["LevelColor"].g * 255, LT["LevelColor"].b * 255)
							LT["InfoText"] = ("|cff" .. LT["LevelColor"] .. LT["LevelLocale"] .. " " .. LT["UnitLevel"] .. "|cffffffff")
						end
					else
						if LT["UnitLevel"] ~= LT["RealLevel"] then 
							LT["InfoText"] = LT["LevelLocale"] .. " " .. LT["UnitLevel"] .. " (" .. LT["RealLevel"] .. ")"
						else
							LT["InfoText"] = LT["LevelLocale"] .. " " .. LT["UnitLevel"]
						end
					end

					-- Show race
					if LT["PlayerRace"] then
						LT["InfoText"] = LT["InfoText"] .. " " .. LT["PlayerRace"]
					end

					-- Show class
					LT["InfoText"] = LT["InfoText"] .. " " .. LT["LpTipClassColor"] .. LT["Class"] or LT["InfoText"]

					-- Show information line
					_G["GameTooltipTextLeft" .. LT["InfoLine"]]:SetText(LT["InfoText"] .. "|cffffffff|r")

				end

				----------------------------------------------------------------------
				-- Mob name in brighter red (alive) and steel blue (tap denied)
				----------------------------------------------------------------------

				if not (LT["TipIsPlayer"]) and LT["Reaction"] < 4 and not (LT["PlayerControl"]) then
					if UnitIsTapDenied(LT["Unit"]) then
						LT["NameText"] = "|c8888bbbb" .. LT["TipUnitName"] .. "|r"
					else
						LT["NameText"] = "|cffff3333" .. LT["TipUnitName"] .. "|r"
					end
					_G["GameTooltipTextLeft1"]:SetText(LT["NameText"])
				end

				----------------------------------------------------------------------
				-- Mob level in color (neutral or lower)
				----------------------------------------------------------------------

				if UnitCanAttack(LT["Unit"], "player") and not (LT["TipIsPlayer"]) and LT["Reaction"] < 5 and not (LT["PlayerControl"]) then

					-- Find the level line
					LT["MobInfoLine"] = 0
					local line2, line3, line4 = _G["GameTooltipTextLeft2"]:GetText(), _G["GameTooltipTextLeft3"]:GetText(), _G["GameTooltipTextLeft4"]:GetText()
					if line2 and string.lower(line2):find(LevelString) then LT["MobInfoLine"] = 2 end
					if line3 and string.lower(line3):find(LevelString) then LT["MobInfoLine"] = 3 end
					if line4 and string.lower(line4):find(LevelString) then LT["MobInfoLine"] = 4 end

					-- Show level line
					if LT["MobInfoLine"] > 1 then

						-- Level ?? mob
						if LT["UnitLevel"] == -1 then
							LT["InfoText"] = "|cffff3333Level ??|cffffffff "

						-- Mobs within level range
						else
							LT["MobColor"] = GetCreatureDifficultyColor(LT["UnitLevel"])
							LT["MobColor"] = string.format('%02x%02x%02x', LT["MobColor"].r * 255, LT["MobColor"].g * 255, LT["MobColor"].b * 255)
							LT["InfoText"] = "|cff" .. LT["MobColor"] .. LT["LevelLocale"] .. " " .. LT["UnitLevel"] .. "|cffffffff "
						end

						-- Show creature type and classification
						LT["CreatureType"] = UnitCreatureType(LT["Unit"])
						if (LT["CreatureType"]) and not (LT["CreatureType"] == "Not specified") then
							LT["InfoText"] = LT["InfoText"] .. "|cffffffff" .. LT["CreatureType"] .. "|cffffffff "
						end

						-- Rare, elite and boss mobs
						LT["Special"] = UnitClassification(LT["Unit"])
						if LT["Special"] then
							if LT["Special"] == "elite" then
								if strfind(_G["GameTooltipTextLeft" .. LT["MobInfoLine"]]:GetText(), "(" .. BOSS .. ")") then 
									LT["Special"] = "(" .. BOSS .. ")"
								else
									LT["Special"] = "(Elite)"
								end
							elseif LT["Special"] == "rare" then
								LT["Special"] = "|c00e066ff(Rare)"
							elseif LT["Special"] == "rareelite" then
								if strfind(_G["GameTooltipTextLeft" .. LT["MobInfoLine"]]:GetText(), "(" .. BOSS .. ")") then 
									LT["Special"] = "|c00e066ff(Rare " .. BOSS .. ")"
								else
									LT["Special"] = "|c00e066ff(Rare Elite)"
								end
							elseif LT["Special"] == "worldboss" then
								LT["Special"] = "(Boss)"
							elseif LT["UnitLevel"] == -1 and LT["Special"] == "normal" and strfind(_G["GameTooltipTextLeft" .. LT["MobInfoLine"]]:GetText(), "(" .. BOSS .. ")") then
								LT["Special"] = "(" .. BOSS .. ")"
							else
								LT["Special"] = nil 
							end

							if (LT["Special"]) then
								LT["InfoText"] = LT["InfoText"] .. LT["Special"]
							end
						end

						-- Show mob info line
						_G["GameTooltipTextLeft" .. LT["MobInfoLine"]]:SetText(LT["InfoText"])

					end

				end

				----------------------------------------------------------------------
				-- Backdrop color
				----------------------------------------------------------------------

				LT["TipFaction"] = UnitFactionGroup(LT["Unit"])

				if UnitCanAttack("player", LT["Unit"]) and not (UnitIsDeadOrGhost(LT["Unit"])) and not (LT["TipFaction"] == nil) and not (LT["TipFaction"] == UnitFactionGroup("player")) then
					-- Hostile faction
					if LeaPlusLC["TipBackSimple"] == "On" then
						GameTooltip:SetBackdropColor(0.5, 0.0, 0.0);
					else
						GameTooltip:SetBackdropColor(0.0, 0.0, 0.0);
					end
				else
					-- Friendly faction
					if LeaPlusLC["TipBackSimple"] == "On" then
						GameTooltip:SetBackdropColor(0.0, 0.0, 0.5);
					else
						GameTooltip:SetBackdropColor(0.0, 0.0, 0.0);
					end
				end

				----------------------------------------------------------------------
				--	Show target
				----------------------------------------------------------------------

				if LeaPlusLC["TipShowTarget"] == "On" then

					-- Get target
					LT["Target"] = UnitName(LT["Unit"] .. "target");

					-- If target doesn't exist, quit
					if LT["Target"] == nil or LT["Target"] == "" then return end

					-- If target is you, set target to YOU
					if (UnitIsUnit(LT["Target"], "player")) then 
						LT["Target"] = ("|c12ff4400YOU")

					-- If it's not you, but it's a player, show target in class color
					elseif UnitIsPlayer(LT["Unit"] .. "target") then
						LT["TargetBase"] = select(2, UnitClassBase(LT["Unit"] .. "target"))
						LT["TargetCol"] = LeaPlusLC["RaidColors"][LT["TargetBase"]]
						LT["TargetCol"] = "|cff" .. string.format('%02x%02x%02x', LT["TargetCol"].r * 255, LT["TargetCol"].g * 255, LT["TargetCol"].b * 255)
						LT["Target"] = (LT["TargetCol"] .. LT["Target"])

					end
					
					-- Add target line
					GameTooltip:AddLine("Target: " .. LT["Target"])

				end

			end

			GameTooltip:HookScript("OnTooltipSetUnit", ShowTip)
			
		end

		----------------------------------------------------------------------
		--	Move chat editbox to top
		----------------------------------------------------------------------

		if LeaPlusLC["MoveChatEditBoxToTop"] == "On" then

			-- Set options for normal chat frames
			for i = 1, 50 do
				if _G["ChatFrame" .. i] then
					-- Position the editbox
					_G["ChatFrame" .. i .. "EditBox"]:ClearAllPoints();
					_G["ChatFrame" .. i .. "EditBox"]:SetPoint("TOPLEFT", _G["ChatFrame" .. i], 0, 0);
					_G["ChatFrame" .. i .. "EditBox"]:SetWidth(_G["ChatFrame" .. i]:GetWidth());
					-- Ensure editbox width matches chatframe width
					_G["ChatFrame" .. i]:HookScript("OnSizeChanged", function()
						_G["ChatFrame" .. i .. "EditBox"]:SetWidth(_G["ChatFrame" .. i]:GetWidth())
					end)
				end
			end

			-- Do the functions above for other chat frames (pet battles, whispers, etc)
			hooksecurefunc("FCF_OpenTemporaryWindow", function()

				local cf = FCF_GetCurrentChatFrame():GetName() or nil
				if cf then

					-- Position the editbox
					_G[cf .. "EditBox"]:ClearAllPoints();
					_G[cf .. "EditBox"]:SetPoint("TOPLEFT", cf, "TOPLEFT", 0, 0);
					_G[cf .. "EditBox"]:SetWidth(_G[cf]:GetWidth());

					-- Ensure editbox width matches chatframe width
					_G[cf]:HookScript("OnSizeChanged", function()
						_G[cf .. "EditBox"]:SetWidth(_G[cf]:GetWidth())
					end)

				end
			end)

		end

		----------------------------------------------------------------------
		-- Viewport
		----------------------------------------------------------------------

		if LeaPlusLC["ViewPortEnable"] == "On" then

			-- Create border textures
			local BordTop = WorldFrame:CreateTexture(nil, "ARTWORK"); BordTop:SetColorTexture(0, 0, 0, 1); BordTop:SetPoint("TOPLEFT", UIParent, "TOPLEFT", 0, 0); BordTop:SetPoint("TOPRIGHT", UIParent, "TOPRIGHT", 0, 0)
			local BordBot = WorldFrame:CreateTexture(nil, "ARTWORK"); BordBot:SetColorTexture(0, 0, 0, 1); BordBot:SetPoint("BOTTOMLEFT", UIParent, "BOTTOMLEFT", 0, 0); BordBot:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", 0, 0)
			local BordLeft = WorldFrame:CreateTexture(nil, "ARTWORK"); BordLeft:SetColorTexture(0, 0, 0, 1); BordLeft:SetPoint("TOPLEFT", UIParent, "TOPLEFT", 0, 0); BordLeft:SetPoint("BOTTOMLEFT", UIParent, "BOTTOMLEFT", 0, 0)
			local BordRight = WorldFrame:CreateTexture(nil, "ARTWORK"); BordRight:SetColorTexture(0, 0, 0, 1); BordRight:SetPoint("TOPRIGHT", UIParent, "TOPRIGHT", 0, 0); BordRight:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", 0, 0)

			-- Function to set viewport parameters
			local function RefreshViewport()

				if LeaPlusLC["ViewPortResize"] == "On" then
					-- Resize is on, remove top and bottom borders and resize game world
					BordTop:SetHeight(0)
					BordBot:SetHeight(0)
					WorldFrame:SetPoint("TOPLEFT", 0, -LeaPlusLC["ViewPortTop"])
					WorldFrame:SetPoint("BOTTOMRIGHT", 0, LeaPlusLC["ViewPortBottom"])
				else
					-- Resize is off, set top and bottom border height and maximise game world
					BordTop:SetHeight(LeaPlusLC["ViewPortTop"])
					BordBot:SetHeight(LeaPlusLC["ViewPortBottom"])
					WorldFrame:SetPoint("TOPLEFT", 0, 0)
					WorldFrame:SetPoint("BOTTOMRIGHT", 0, 0)
				end

				-- Set top and bottom border transparency
				BordTop:SetAlpha(1 - LeaPlusLC["ViewPortAlpha"])
				BordBot:SetAlpha(1 - LeaPlusLC["ViewPortAlpha"])

				-- Set left and right border width and transparency
				BordLeft:SetWidth(LeaPlusLC["ViewPortLeft"]); BordLeft:SetAlpha(1 - LeaPlusLC["ViewPortAlpha"])
				BordRight:SetWidth(LeaPlusLC["ViewPortRight"]); BordRight:SetAlpha(1 - LeaPlusLC["ViewPortAlpha"])

				-- Hide borders if they aren't being used
				if LeaPlusLC["ViewPortTop"] == 0 or LeaPlusLC["ViewPortResize"] == "On" then BordTop:Hide() else BordTop:Show() end
				if LeaPlusLC["ViewPortBottom"] == 0 or LeaPlusLC["ViewPortResize"] == "On" then BordBot:Hide() else BordBot:Show() end
				if LeaPlusLC["ViewPortLeft"] == 0 then BordLeft:Hide() else BordLeft:Show() end
				if LeaPlusLC["ViewPortRight"] == 0 then BordRight:Hide() else BordRight:Show() end

				-- Show formatted slider value
				LeaPlusCB["ViewPortAlpha"].f:SetFormattedText("%.0f%%", LeaPlusLC["ViewPortAlpha"] * 100)

			end

			-- Create viewport configuration panel
			local SideViewport = LeaPlusLC:CreatePanel("Viewport", "SideViewport")

			-- Create slider controls
			LeaPlusLC:MakeTx(SideViewport, "Top", 16, -72)
			LeaPlusLC:MakeSL(SideViewport, "ViewPortTop", "", 0, 300, 5, 16, -92, "%.0f")
			LeaPlusCB["ViewPortTop"]:HookScript("OnValueChanged", RefreshViewport)

			LeaPlusLC:MakeTx(SideViewport, "Bottom", 16, -132)
			LeaPlusLC:MakeSL(SideViewport, "ViewPortBottom", "", 0, 300, 5, 16, -152, "%.0f")
			LeaPlusCB["ViewPortBottom"]:HookScript("OnValueChanged", RefreshViewport)

			LeaPlusLC:MakeTx(SideViewport, "Left", 186, -72)
			LeaPlusLC:MakeSL(SideViewport, "ViewPortLeft", "", 0, 300, 5, 186, -92, "%.0f")
			LeaPlusCB["ViewPortLeft"]:HookScript("OnValueChanged", RefreshViewport)

			LeaPlusLC:MakeTx(SideViewport, "Right", 186, -132)
			LeaPlusLC:MakeSL(SideViewport, "ViewPortRight", "", 0, 300, 5, 186, -152, "%.0f")
			LeaPlusCB["ViewPortRight"]:HookScript("OnValueChanged", RefreshViewport)

			LeaPlusLC:MakeTx(SideViewport, "Transparency", 356, -132)
			LeaPlusLC:MakeSL(SideViewport, "ViewPortAlpha", "", 0, 1, 0.1, 356, -152, "%.1f")
			LeaPlusCB["ViewPortAlpha"]:HookScript("OnValueChanged", RefreshViewport)

			-- Add resize game world checkbox
			LeaPlusLC:MakeTx(SideViewport, "Settings", 16, -192)
			LeaPlusLC:MakeCB(SideViewport, "ViewPortResize", "Resize the game world", 16, -212, false, "If checked, the game world will be resized to fit between the top and bottom borders.\n\nNote that if you enable this setting, the transparency slider will no longer affect the top and bottom borders.")

			-- Help button tooltip
			SideViewport.h.tiptext = LeaPlusLC:Translate("Configure the viewport using the controls on this page.\n\nThis panel will close automatically if you enter combat.")

			-- Back button handler
			SideViewport.b:SetScript("OnClick", function() 
				SideViewport:Hide()
				LeaPlusLC["PageF"]:Show()
				LeaPlusLC["Page7"]:Show()
				return
			end) 

			-- Reset button handler
			SideViewport.r:SetScript("OnClick", function()
				LeaPlusLC["ViewPortTop"] = 0 
				LeaPlusLC["ViewPortBottom"] = 0
				LeaPlusLC["ViewPortLeft"] = 0
				LeaPlusLC["ViewPortRight"] = 0
				LeaPlusLC["ViewPortAlpha"] = 0
				LeaPlusLC["ViewPortResize"] = "Off"
				SideViewport:Hide(); SideViewport:Show()
				RefreshViewport()
			end)

			-- Configuration button handler
			LeaPlusCB["ModViewportBtn"]:SetScript("OnClick", function()
				if LeaPlusLC:PlayerInCombat() then
					return
				else
					if IsShiftKeyDown() and IsControlKeyDown() then
						-- Preset profile
						LeaPlusLC["ViewPortTop"] = 0 
						LeaPlusLC["ViewPortBottom"] = 0
						LeaPlusLC["ViewPortLeft"] = 0
						LeaPlusLC["ViewPortRight"] = 0
						LeaPlusLC["ViewPortAlpha"] = 0.7
						LeaPlusLC["ViewPortResize"] = "On"
						RefreshViewport()
					else
						SideViewport:Show()
						LeaPlusLC:HideFrames()
					end
				end
			end)

			-- Refresh viewport when resize checkbox is clicked and on startup
			LeaPlusCB["ViewPortResize"]:HookScript("OnClick", RefreshViewport)
			RefreshViewport()

			-- Hide the configuration panel if combat starts
			SideViewport:RegisterEvent("PLAYER_REGEN_DISABLED")
			SideViewport:SetScript("OnEvent", SideViewport.Hide)

		end

		----------------------------------------------------------------------
		-- Universal group chat color
		----------------------------------------------------------------------

		-- Universal group chat color (ColorPickerFrame:GetColorRGB())
		if LeaPlusLC["UnivGroupColor"] == "On" then
			-- Set raid and instance to party colors
			ChangeChatColor("RAID", 0.67, 0.67, 1)
			ChangeChatColor("RAID_LEADER", 0.46, 0.78, 1)
			ChangeChatColor("INSTANCE_CHAT", 0.67, 0.67, 1)
			ChangeChatColor("INSTANCE_CHAT_LEADER", 0.46, 0.78, 1)
		end

		----------------------------------------------------------------------
		-- Silence rested emotes
		----------------------------------------------------------------------

		-- Manage emotes
		if LeaPlusLC["NoRestedEmotes"] == "On" then

			-- Zone table 		English					, French					, German					, Italian						, Russian					, S Chinese	, Spanish					, T Chinese	,
			local zonetable = {	"The Halfhill Market"	, "Marché de Micolline"		, "Der Halbhügelmarkt"		, "Il Mercato di Mezzocolle"	, "Рынок Полугорья"			, "半山市集"	, "El Mercado del Alcor"	, "半丘市集"	,
								"The Grim Guzzler"		, "Le Sinistre écluseur"	, "Zum Grimmigen Säufer"	, "Torvo Beone"					, "Трактир Угрюмый обжора"	, "黑铁酒吧"	, "Tragapenas"				, "黑鐵酒吧"	,
								"The Summer Terrace"	, "La terrasse Estivale"	, "Die Sommerterrasse"		, "Terrazza Estiva"				, "Летняя терраса"			, "夏之台"	, "El Bancal del Verano"	, "夏日露臺"	,
			}

			-- Function to set rested state
			local function UpdateEmoteSound()

				-- Find character's current zone
				local szone = GetSubZoneText() or "None"

				-- Find out if emote sounds are disabled or enabled
				local emoset = GetCVar("Sound_EnableEmoteSounds")

				if IsResting() then
					-- Character is resting so silence emotes
					if emoset ~= "0" then
						SetCVar("Sound_EnableEmoteSounds", "0")
					end
					return
				end

				-- Traverse zone table and silence emotes if character is in a designated zone
				for k, v in next, zonetable do
					if szone == zonetable[k] then
						if emoset ~= "0" then
							SetCVar("Sound_EnableEmoteSounds", "0")
						end
						return
					end
				end

				-- Silence emotes if character is in a pet battle
				if C_PetBattles.IsInBattle() then
					if emoset ~= "0" then
						SetCVar("Sound_EnableEmoteSounds", "0")
					end
					return
				end

				-- If the above didn't return, emote sounds should be enabled
				if emoset ~= "1" then
					SetCVar("Sound_EnableEmoteSounds", "1")
				end
				return
			
			end

			-- Set emote sound when pet battles start and end
			hooksecurefunc("PetBattleFrame_Display", UpdateEmoteSound) 
			hooksecurefunc("PetBattleFrame_Remove",	UpdateEmoteSound)

			-- Set emote sound when rest state or zone changes
			local RestEvent = CreateFrame("FRAME")
			RestEvent:RegisterEvent("PLAYER_UPDATE_RESTING")
            RestEvent:RegisterEvent("ZONE_CHANGED_NEW_AREA")
			RestEvent:RegisterEvent("ZONE_CHANGED")
			RestEvent:RegisterEvent("ZONE_CHANGED_INDOORS")
            RestEvent:RegisterEvent("SUBZONE_CHANGED_NEW_AREA")
			RestEvent:SetScript("OnEvent", UpdateEmoteSound)

			-- Set sound setting at startup
			UpdateEmoteSound()

			-- Lock emote sounds checkbox in the game options panel
			AudioOptionsSoundPanelEmoteSounds.Enable = AudioOptionsSoundPanelEmoteSounds.Disable

		end

		----------------------------------------------------------------------
		-- Manage class colors
		----------------------------------------------------------------------

		if LeaPlusLC["Manageclasscolors"] == "On" then

			-- Set local channel colors and lock checkboxes
			for i=1, 18 do
				if _G["ChatConfigChatSettingsLeftCheckBox" .. i .. "Check"] then
					ToggleChatColorNamesByClassGroup(true, _G["ChatConfigChatSettingsLeftCheckBox" .. i .. "Check"]:GetParent().type);
					LeaPlusLC:LockItem(_G["ChatConfigChatSettingsLeftCheckBox" .. i .. "ColorClasses"],true)
				end
			end

			-- Set global channel colors
			for i=1, 50 do
				ToggleChatColorNamesByClassGroup(true, "CHANNEL"..i)
			end

			-- Lock global channel checkboxes on startup
			hooksecurefunc("ChatConfig_CreateCheckboxes", function(self, checkBoxTable, checkBoxTemplate, title)
				if ChatConfigChannelSettingsLeft.checkBoxTable then
					for i=1,50 do
						if _G["ChatConfigChannelSettingsLeftCheckBox" .. i .. "ColorClasses"] then
							LeaPlusLC:LockItem(_G["ChatConfigChannelSettingsLeftCheckBox" .. i .. "ColorClasses"],true)
						end
					end
				end
			end)

		end

		----------------------------------------------------------------------
		-- Final code for Player
		----------------------------------------------------------------------

		-- Register logout event to save settings
		LpEvt:RegisterEvent("PLAYER_LOGOUT")

		-- Unregister the player section (since it should only be run once)
		LpEvt:UnregisterEvent("PLAYER_ENTERING_WORLD")

		-- Release memory
		LeaPlusLC.Player = nil

	end

----------------------------------------------------------------------
-- 	L60: RunOnce
----------------------------------------------------------------------

	function LeaPlusLC:RunOnce()

		-- Music player
		function LeaPlusLC:MusicFunc()

			-- Create tables for list data and zone listing
			local ListData, ZoneList, playlist, timelist = {}, {}, {}, {}
			local scrollFrame, willPlay, musicHandle, ZonePage, LastPlayed, LastFolder, TempFolder, HeadingOfClickedTrack
			local numButtons = 19
			local uframe = CreateFrame("FRAME")

			-- Create a table for each heading
			ZoneList = {"Eastern Kingdoms", "Kalimdor", "Outland", "Northrend", "Maelstrom", "Pandaria", "Draenor", "Broken Isles", "Various"}
			for k, v in pairs(ZoneList) do
				ZoneList[v] = {}
			end

			-- Function to create a table for each zone
			local function Zn(where, zone, tracklist)
				tinsert(ZoneList[where], {zone = zone, tracks = tracklist})
			end

			-- Debug
			-- Zn("Eastern Kingdoms", "Debug", {"|cffffd800Eastern Kingdoms: Debug", "ZoneMusic\\Forest\\DayForest01#10", "ZoneMusic\\Forest\\DayForest02#10", "ZoneMusic\\Forest\\DayForest03#3", "ZoneMusic\\Forest\\NightForest01#3", "ZoneMusic\\Forest\\NightForest02#3", "ZoneMusic\\Forest\\NightForest03#10",})

			-- Eastern Kingdoms
			Zn("Eastern Kingdoms", "|cffffd800Eastern Kingdoms", {""})
			Zn("Eastern Kingdoms", "Arathi Highlands"		, {	"|cffffd800Eastern Kingdoms: Arathi Highlands", "Cataclysm\\MUS_ArathiHighlandsA_GD01#68", "Cataclysm\\MUS_ArathiHighlandsA_GN01#68", "Cataclysm\\MUS_ArathiHighlandsA_GN02#68", "Cataclysm\\MUS_ArathiHighlandsB_GD01#69", "Cataclysm\\MUS_ArathiHighlandsB_GN01#69", "Cataclysm\\MUS_ArathiHighlandsB_GN02#69", "Cataclysm\\MUS_ArathiHighlandsC_GD01#90", "Cataclysm\\MUS_ArathiHighlandsC_GN01#86", "Cataclysm\\MUS_ArathiHighlandsC_GN02#86", "ZoneMusic\\Mountain\\DayMountain01#120", "ZoneMusic\\Mountain\\DayMountain02#67", "ZoneMusic\\Mountain\\DayMountain03#80", "ZoneMusic\\Mountain\\NightMountain01#64", "ZoneMusic\\Mountain\\NightMountain02#63", "ZoneMusic\\Mountain\\NightMountain03#69", "ZoneMusic\\Mountain\\NightMountain04#64", "Musical Moments\\gloomy\\gloomy01#36", "Musical Moments\\gloomy\\gloomy02#40",})
			Zn("Eastern Kingdoms", "Burning Steppes"		, {	"|cffffd800Eastern Kingdoms: Burning Steppes", "Cataclysm\\MUS_BurningSteppes_GU01#134", "Cataclysm\\MUS_BurningSteppes_GU02#52", "Cataclysm\\MUS_BurningSteppes_GU03#80", "Cataclysm\\MUS_BurningSteppes_GU04#101", "ZoneMusic\\Volcanic\\DayVolcanic01#73", "ZoneMusic\\Volcanic\\DayVolcanic02#87", "ZoneMusic\\Volcanic\\NightVolcanic01#71", "ZoneMusic\\Volcanic\\NightVolcanic02#64",})
			Zn("Eastern Kingdoms", "Dun Morogh"				, {	"|cffffd800Eastern Kingdoms: Dun Morogh", "ZoneMusic\\Mountain\\DayMountain01#120", "ZoneMusic\\Mountain\\DayMountain02#67", "ZoneMusic\\Mountain\\DayMountain03#80", "ZoneMusic\\Mountain\\NightMountain01#64", "ZoneMusic\\Mountain\\NightMountain02#63", "ZoneMusic\\Mountain\\NightMountain03#69", "ZoneMusic\\Mountain\\NightMountain04#64", "CityMusic\\Gnomeragon\\gnomeragon01-zone#65", "CityMusic\\Gnomeragon\\gnomeragon02-zone#65", "CityMusic\\Ironforge\\IronForge Intro#86", "CityMusic\\Ironforge\\IronForge Walking 01#123", "CityMusic\\Ironforge\\IronForge Walking 02#51", "CityMusic\\Ironforge\\Ironforge Walking 03 (Glenn)#81", "CityMusic\\Ironforge\\Ironforge Walking 04#70", "CityMusic\\Ironforge\\tinkertownintro_moment#52", "Event\\gnomeregan_event_B#62", "Event\\gnomeregan_event_C#36", "Event\\gnomeregan_event_complete#63", "Event\\gnomeregan_event_D#38", "Event\\gnomeregan_event_E#35", "Event\\gnomeregan_event_intro#88",})
			Zn("Eastern Kingdoms", "Duskwood"				, {	"|cffffd800Eastern Kingdoms: Duskwood", "Cataclysm\\MUS_Crypt_UU01#106", "ZoneMusic\\EvilForest\\DayEvilForest01#71", "ZoneMusic\\EvilForest\\DayEvilForest02#72", "ZoneMusic\\EvilForest\\DayEvilForest03#71", "ZoneMusic\\EvilForest\\NightEvilForest01#57", "ZoneMusic\\EvilForest\\NightEvilForest02#76", "ZoneMusic\\EvilForest\\NightEvilForest03#71",})
			Zn("Eastern Kingdoms", "Eastern Plaguelands"	, {	"|cffffd800Eastern Kingdoms: Eastern Plaguelands", "ZoneMusic\\Ebon Hold\\EH_AssaultUni01#65", "ZoneMusic\\Ebon Hold\\EH_AssaultUni02#70", "ZoneMusic\\Ebon Hold\\EH_AssaultUni03#65", "ZoneMusic\\Ebon Hold\\EH_AssaultUni04#67", "ZoneMusic\\Ebon Hold\\EH_AssaultUni05#117", "ZoneMusic\\Ebon Hold\\EH_AssaultUni06#94", "ZoneMusic\\Ebon Hold\\EH_AssaultUni07#96", "ZoneMusic\\Ebon Hold\\EH_GeneralWalkUni01#83", "ZoneMusic\\Ebon Hold\\EH_GeneralWalkUni02#79", "ZoneMusic\\Ebon Hold\\EH_GeneralWalkUni03#82",})
			Zn("Eastern Kingdoms", "Elwynn Forest"			, {	"|cffffd800Eastern Kingdoms: Elwynn Forest", "ZoneMusic\\Forest\\DayForest01#56", "ZoneMusic\\Forest\\DayForest02#73", "ZoneMusic\\Forest\\DayForest03#65", "ZoneMusic\\Forest\\NightForest01#53", "ZoneMusic\\Forest\\NightForest02#43", "ZoneMusic\\Forest\\NightForest03#59", "ZoneMusic\\Forest\\NightForest04#54", "Cataclysm\\MUS_Stormwind_GU01#73", "Cataclysm\\MUS_Stormwind_GU02#38", "Cataclysm\\MUS_Stormwind_GU03#116", "Cataclysm\\MUS_Stormwind_GU04#66", "CityMusic\\Stormwind\\stormwind01-moment#55", "CityMusic\\Stormwind\\stormwind02-moment#36", "CityMusic\\Stormwind\\stormwind03-moment#70", "CityMusic\\Stormwind\\stormwind04-zone#62", "CityMusic\\Stormwind\\stormwind05-zone#61", "CityMusic\\Stormwind\\stormwind06-zone#54", "CityMusic\\Stormwind\\stormwind07-zone#87", "CityMusic\\Stormwind\\stormwind08-zone#77", "CityMusic\\Stormwind\\stormwind_highSeas-moment#133", "CityMusic\\Stormwind\\stormwind_intro-moment#67",})
			Zn("Eastern Kingdoms", "Eversong Woods"			, {	"|cffffd800Eastern Kingdoms: Eversong Woods", "ZoneMusic\\Eversong\\ES_BuildingWalkDay01#65", "ZoneMusic\\Eversong\\ES_BuildingWalkDay02#69", "ZoneMusic\\Eversong\\ES_BuildingWalkNight01#84", "ZoneMusic\\Eversong\\ES_BuildingWalkNight02#84", "ZoneMusic\\Eversong\\ES_RuinsWalkDay01#48", "ZoneMusic\\Eversong\\ES_RuinsWalkDay02#72", "ZoneMusic\\Eversong\\ES_RuinsWalkDay03#71", "ZoneMusic\\Eversong\\ES_RuinsWalkNight01#51", "ZoneMusic\\Eversong\\ES_RuinsWalkNight02#83", "ZoneMusic\\Eversong\\ES_RuinsWalkNight03#67", "ZoneMusic\\Eversong\\ES_ScenicIntroNight01#97", "ZoneMusic\\Eversong\\ES_ScortchedWalkDay01#117", "ZoneMusic\\Eversong\\ES_ScortchedWalkDay02#103", "ZoneMusic\\Eversong\\ES_ScortchedWalkNight01#69", "ZoneMusic\\Eversong\\ES_ScortchedWalkNight02#61", "ZoneMusic\\Eversong\\ES_SilvermoonIntro01#132", "ZoneMusic\\Eversong\\ES_SilvermoonWalkDay01#64", "ZoneMusic\\Eversong\\ES_SilvermoonWalkDay02#80", "ZoneMusic\\Eversong\\ES_SilvermoonWalkDay03#65", "ZoneMusic\\Eversong\\ES_SilvermoonWalkNight01#178", "ZoneMusic\\Eversong\\ES_SilvermoonWalkNight02#72", "ZoneMusic\\Eversong\\ES_SilvermoonWalkNight03#80", "ZoneMusic\\Eversong\\ES_SunstriderWalkDay01#81", "ZoneMusic\\Eversong\\ES_SunstriderWalkDay02#58", "ZoneMusic\\Eversong\\ES_SunstriderWalkDay03#67", "ZoneMusic\\Eversong\\ES_SunstriderWalkNight01#100", "ZoneMusic\\Eversong\\ES_SunstriderWalkNight02#101", "ZoneMusic\\Eversong\\ES_SunstriderWalkNight03#86",})
			Zn("Eastern Kingdoms", "Ghostlands"				, {	"|cffffd800Eastern Kingdoms: Ghostlands", "ZoneMusic\\Ghostlands\\GL_EversongDarkWalkUni01#62", "ZoneMusic\\Ghostlands\\GL_EversongDarkWalkUni02#62", "ZoneMusic\\Ghostlands\\GL_EversongDarkWalkUni03#64", "ZoneMusic\\Ghostlands\\GL_EversongDarkWalkUni04#61", "ZoneMusic\\Ghostlands\\GL_Forest1WalkDay01#67", "ZoneMusic\\Ghostlands\\GL_Forest1WalkDay02#70", "ZoneMusic\\Ghostlands\\GL_Forest1WalkNight01#67", "ZoneMusic\\Ghostlands\\GL_Forest2WalkDay01#83", "ZoneMusic\\Ghostlands\\GL_Forest2WalkNight01#83", "ZoneMusic\\Ghostlands\\GL_Forest2WalkNight02#61", "ZoneMusic\\Ghostlands\\GL_Forest3WalkDay01#154", "ZoneMusic\\Ghostlands\\GL_Forest3WalkNight01#51", "ZoneMusic\\Ghostlands\\GL_Forest3WalkNight02#28", "ZoneMusic\\Ghostlands\\GL_Forest3WalkNight03#44", "ZoneMusic\\Ghostlands\\GL_ScenicWalkUni01#90", "ZoneMusic\\Ghostlands\\GL_ScenicWalkUni02#81", "ZoneMusic\\Ghostlands\\GL_ScenicWalkUni03#78", "ZoneMusic\\Ghostlands\\GL_ShalandisWalkUni01#132", "ZoneMusic\\Ghostlands\\GL_ShalandisWalkUni02#104", "ZoneMusic\\Ghostlands\\GL_ShalandisWalkUni03#68", "ZoneMusic\\GhostMusic\\GhostMusic03#62",})
			Zn("Eastern Kingdoms", "Isle of Quel'Danas"		, {	"|cffffd800Eastern Kingdoms: Isle of Quel'Danas", "ZoneMusic\\Sunwell\\SW_AssemblyChamberWalkUni01#83", "ZoneMusic\\Sunwell\\SW_AssemblyChamberWalkUni02#88", "ZoneMusic\\Sunwell\\SW_FelEnergyWalkUni01#126", "ZoneMusic\\Sunwell\\SW_IsleDarkWalkUni01#140", "ZoneMusic\\Sunwell\\SW_IsleDarkWalkUni02#137", "ZoneMusic\\Sunwell\\SW_IsleDarkWalkUni03#127", "ZoneMusic\\Sunwell\\SW_IsleLightWalkUni01#116", "ZoneMusic\\Sunwell\\SW_IsleLightWalkUni02#120", "ZoneMusic\\Sunwell\\SW_IsleLightWalkUni03#90", "ZoneMusic\\Sunwell\\SW_IsleMedWalkUni01#118", "ZoneMusic\\Sunwell\\SW_IsleMedWalkUni02#126", "ZoneMusic\\Sunwell\\SW_IsleMedWalkUni03#88", "ZoneMusic\\Sunwell\\SW_MagistersArrivalWalkUni01#88", "ZoneMusic\\Sunwell\\SW_MagistersAsylumWalkUni01#97", "ZoneMusic\\Sunwell\\SW_MagistersAsylumWalkUni02#95", "ZoneMusic\\Sunwell\\SW_MagistersAsylumWalkUni03#66", "ZoneMusic\\Sunwell\\SW_MagistersTerraceWalkUni01#89", "ZoneMusic\\Sunwell\\SW_MagistersTerraceWalkUni02#91", "ZoneMusic\\Sunwell\\SW_MagistersTerraceWalkUni03#90",  "ZoneMusic\\Sunwell\\SW_MagistersTerraceWalkUni04#92", "ZoneMusic\\Sunwell\\SW_MagistersTerraceWalkUni05#124", "ZoneMusic\\Sunwell\\SW_PlateauSunwellArrivalWalkUni01#138", "ZoneMusic\\Sunwell\\SW_PlateauSunwellWalkUni01#85", "ZoneMusic\\Sunwell\\SW_PlateauSunwellWalkUni02#79", "ZoneMusic\\Sunwell\\SW_PlateauSunwellWalkUni03#90", "ZoneMusic\\Sunwell\\SW_PlateauSunwellWalkUni04#92", "ZoneMusic\\Sunwell\\SW_PlateauSunwellWalkUni05#94", "ZoneMusic\\Sunwell\\SW_PlateauSunwellWalkUni06#87", "ZoneMusic\\Sunwell\\SW_QuelDanasWalkUni01#109", "ZoneMusic\\Sunwell\\SW_QuelDanasWalkUni02#84", "ZoneMusic\\Sunwell\\SW_SanctumWalkUni01#86", "ZoneMusic\\Sunwell\\SW_ShorelAranWalkUni01#88", "ZoneMusic\\Sunwell\\SW_SunwellBombingRunUni01#260", "ZoneMusic\\Sunwell\\SW_SunwellFlybyUni01#58", "ZoneMusic\\Sunwell\\SW_TheWellWalkUni01#98", "ZoneMusic\\Sunwell\\SW_TheWellWalkUni02#95", "ZoneMusic\\Sunwell\\SW_TheWellWalkUni03#95",})
			Zn("Eastern Kingdoms", "Ruins of Gilneas"		, {	"|cffffd800Eastern Kingdoms: Ruins of Gilneas", "Cataclysm\\MUS_AllianceHero_UU01#196", "Cataclysm\\MUS_Cataclysm_UU01#80", "Cataclysm\\MUS_Cataclysm_UU02#72", "Cataclysm\\MUS_Cataclysm_UU03#62", "Cataclysm\\MUS_Cataclysm_UU04#112", "Cataclysm\\MUS_Cataclysm_UU05#74", "Cataclysm\\MUS_Cataclysm_UU06#49", "Cataclysm\\MUS_GilneasEvent_E01#33", "Cataclysm\\MUS_GilneasEvent_E02#24", "Cataclysm\\MUS_GilneasEvent_E03#28", "Cataclysm\\MUS_GilneasEvent_E04#109", "Cataclysm\\MUS_Scarred_UU01#79", "Cataclysm\\MUS_Scarred_UU02#27", "Cataclysm\\MUS_Scarred_UU03#36", "Cataclysm\\MUS_Scarred_UU04#52", "Cataclysm\\MUS_Shadows_UU01#91", "Cataclysm\\MUS_Shadows_UU02#30", "Cataclysm\\MUS_Shadows_UU03#53", "Cataclysm\\MUS_Shadows_UU04#70", "Cataclysm\\MUS_Shadows_UU05#60", "Cataclysm\\MUS_Rift_UU01#90", "Cataclysm\\MUS_Rift_UU02#63", "Cataclysm\\MUS_Rift_UU03#32", "Cataclysm\\MUS_Rift_UU04#62",})
			Zn("Eastern Kingdoms", "Searing Gorge"			, {	"|cffffd800Eastern Kingdoms: Searing Gorge", "ZoneMusic\\Volcanic\\DayVolcanic01#73", "ZoneMusic\\Volcanic\\DayVolcanic02#87", "ZoneMusic\\Volcanic\\NightVolcanic01#71", "ZoneMusic\\Volcanic\\NightVolcanic02#64",})
			Zn("Eastern Kingdoms", "Silverpine Forest"		, {	"|cffffd800Eastern Kingdoms: Silverpine Forest", "ZoneMusic\\EvilForest\\DayEvilForest01#71", "ZoneMusic\\EvilForest\\DayEvilForest02#72", "ZoneMusic\\EvilForest\\DayEvilForest03#71", "ZoneMusic\\EvilForest\\NightEvilForest01#57", "ZoneMusic\\EvilForest\\NightEvilForest02#76", "ZoneMusic\\EvilForest\\NightEvilForest03#71",})
			Zn("Eastern Kingdoms", "Stranglethorn"			, {	"|cffffd800Eastern Kingdoms: Stranglethorn", "Cataclysm\\MUS_PiratesSurrender_UU01#128", "Cataclysm\\MUS_StranglethornVale_GU01#78", "Cataclysm\\MUS_StranglethornVale_GU02#93", "Cataclysm\\MUS_StranglethornVale_GU03#91", "Cataclysm\\MUS_StranglethornVale_GU04#102", "Cataclysm\\MUS_Stranglethorn_GU01#64", "Cataclysm\\MUS_Stranglethorn_GU02#91", "Cataclysm\\MUS_Stranglethorn_GU03#85", "Cataclysm\\MUS_Stranglethorn_GU04#90", "ZoneMusic\\Jungle\\DayJungle01#46", "ZoneMusic\\Jungle\\DayJungle02#99", "ZoneMusic\\Jungle\\DayJungle03#48", "ZoneMusic\\Jungle\\NightJungle01#55","ZoneMusic\\Jungle\\NightJungle02#53", "ZoneMusic\\Jungle\\NightJungle03#89",})
			Zn("Eastern Kingdoms", "Swamp of Sorrows"		, {	"|cffffd800Eastern Kingdoms: Swamp of Sorrows", "ZoneMusic\\SoggyPlace\\soggyplace-zone1#97", "ZoneMusic\\SoggyPlace\\soggyplace-zone2#98", "ZoneMusic\\SoggyPlace\\soggyplace-zone3#91", "ZoneMusic\\SoggyPlace\\soggyplace-zone4#90", "ZoneMusic\\SoggyPlace\\soggyplace-zone5#71",})
			Zn("Eastern Kingdoms", "Tanaris"				, {	"|cffffd800Eastern Kingdoms: Tanaris", "Cataclysm\\MUS_Tanaris_GU01#88", "Cataclysm\\MUS_Tanaris_GU02#88", "Cataclysm\\MUS_Tanaris_GU03#84", "Cataclysm\\MUS_Tanaris_GU04#66", "Cataclysm\\MUS_Tanaris_GU05#82", "Cataclysm\\MUS_Tanaris_GU06#72", "Cataclysm\\MUS_Tanaris_GU07#72", "Cataclysm\\MUS_Tanaris_GU08#61", "Cataclysm\\MUS_Tanaris_GU09#34", "Cataclysm\\MUS_Tanaris_GU10#84",})
			Zn("Eastern Kingdoms", "Tirisfal Glades"		, {	"|cffffd800Eastern Kingdoms: Tirisfal Glades", "Cataclysm\\MUS_41_faeriedragon_UE01#132", "CityMusic\\Undercity\\undercity01-zone#67", "CityMusic\\Undercity\\undercity02-zone#86", "CityMusic\\Undercity\\undercity03-zone#76", "CityMusic\\Undercity\\undercityintro-moment#29", "ZoneMusic\\EvilForest\\DayEvilForest01#71", "ZoneMusic\\EvilForest\\DayEvilForest02#72", "ZoneMusic\\EvilForest\\DayEvilForest03#71", "ZoneMusic\\EvilForest\\NightEvilForest01#57", "ZoneMusic\\EvilForest\\NightEvilForest02#76", "ZoneMusic\\EvilForest\\NightEvilForest03#71",})
			Zn("Eastern Kingdoms", "Twilight Highlands"		, {	"|cffffd800Eastern Kingdoms: Twilight Highlands", "Cataclysm\\MUS_TwilightHighlands_GU01#68", "Cataclysm\\MUS_TwilightHighlands_GU02#67", "Cataclysm\\MUS_TwilightHighlands_GU03#67", "Cataclysm\\MUS_TwilightHighlands_GU04#78", "Cataclysm\\MUS_TwilightHighlands_GU05#67", "Cataclysm\\MUS_TwilightsHammer_UU01#92", "Cataclysm\\MUS_TwilightsHammer_UU02#48", "Cataclysm\\MUS_TwilightsHammer_UU03#49", "Cataclysm\\MUS_TwilightVale_GU01#111", "Cataclysm\\MUS_TwilightVale_GU02#81", "Cataclysm\\MUS_TwilightVale_GU03#81", "Cataclysm\\MUS_TwilightVale_GU04#63", "Cataclysm\\MUS_TwilightVale_GU05#46",})
			Zn("Eastern Kingdoms", "Vashj'ir"				, {	"|cffffd800Eastern Kingdoms: Vashj'ir", "Cataclysm\\MUS_Rift_UU01#90", "Cataclysm\\MUS_Rift_UU02#63", "Cataclysm\\MUS_Rift_UU03#32", "Cataclysm\\MUS_Rift_UU04#62", "Cataclysm\\MUS_VashjirNagaThrone_GU01#43", "Cataclysm\\MUS_VashjirNagaThrone_GU02#90", "Cataclysm\\MUS_VashjirNagaThrone_GU03#97", "Cataclysm\\MUS_VashjirNagaThrone_GU04#97", "Cataclysm\\MUS_VashjirNagaThrone_GU05#92", "Cataclysm\\MUS_VashjirNagaThrone_GU06#93", "Cataclysm\\MUS_VashjirNaga_GU01#88", "Cataclysm\\MUS_VashjirNaga_GU02#97", "Cataclysm\\MUS_VashjirNaga_GU03#97", "Cataclysm\\MUS_VashjirNaga_GU04#97", "Cataclysm\\MUS_VashjirNaga_GU05#127", "Cataclysm\\MUS_VashjirNaga_GU06#114", "Cataclysm\\MUS_Vashjir_GU01#98", "Cataclysm\\MUS_Vashjir_GU02#98", "Cataclysm\\MUS_Vashjir_GU03#154", "Cataclysm\\MUS_Vashjir_GU04#48", "Cataclysm\\MUS_Vashjir_GU05#93", "Cataclysm\\MUS_Vashjir_GU06#154", "Cataclysm\\MUS_Vashjir_GU07#91", "Cataclysm\\MUS_Vashjir_GU08#47", "Cataclysm\\MUS_Vashjir_GU09#133",})
			Zn("Eastern Kingdoms", "Western Plaguelands"	, {	"|cffffd800Eastern Kingdoms: Western Plaguelands", "Cataclysm\\MUS_WestPlagueA_GD01#51", "Cataclysm\\MUS_WestPlagueA_GN01#51", "Cataclysm\\MUS_WestPlagueA_GN02#51", "Cataclysm\\MUS_WestPlagueB_GD01#51", "Cataclysm\\MUS_WestPlagueB_GN01#51", "Cataclysm\\MUS_WestPlagueB_GN02#51", "Cataclysm\\MUS_WestPlagueB_GN03#51", "Cataclysm\\MUS_WestPlagueC_GD01#51", "Cataclysm\\MUS_WestPlagueC_GN01#51", "Cataclysm\\MUS_WestPlagueC_GN02#51",})
			Zn("Eastern Kingdoms", "Westfall"				, {	"|cffffd800Eastern Kingdoms: Westfall", "Cataclysm\\MUS_Westfall_GU01#123", "Cataclysm\\MUS_Westfall_GU02#123", "Cataclysm\\MUS_Westfall_GU03#123", "Cataclysm\\MUS_Westfall_GU04#115", "Cataclysm\\MUS_Westfall_GU05#48",})
			Zn("Eastern Kingdoms", "Wetlands"				, {	"|cffffd800Eastern Kingdoms: Wetlands", "ZoneMusic\\SoggyPlace\\soggyplace-zone1#97", "ZoneMusic\\SoggyPlace\\soggyplace-zone2#98", "ZoneMusic\\SoggyPlace\\soggyplace-zone3#91", "ZoneMusic\\SoggyPlace\\soggyplace-zone4#90", "ZoneMusic\\SoggyPlace\\soggyplace-zone5#71",})

			-- Kalimdor
			Zn("Kalimdor", "|cffffd800Kalimdor", {""})
			Zn("Kalimdor", "Ashenvale"						, {	"|cffffd800Kalimdor: Ashenvale", "ZoneMusic\\EnchantedForest\\EnchantedForest01#50", "ZoneMusic\\EnchantedForest\\EnchantedForest02#67", "ZoneMusic\\EnchantedForest\\EnchantedForest03#235", "ZoneMusic\\EnchantedForest\\EnchantedForest04#61", "ZoneMusic\\EnchantedForest\\EnchantedForest05#71",})
			Zn("Kalimdor", "Azshara"						, {	"|cffffd800Kalimdor: Azshara", "Cataclysm\\MUS_Azshara_GD01#70", "Cataclysm\\MUS_Azshara_GN01#70",})
			Zn("Kalimdor", "Azuremyst Isle"					, {	"|cffffd800Kalimdor: Azuremyst Isle", "ZoneMusic\\Azuremyst\\AI_DraeneiWalkUni05#192", "ZoneMusic\\Azuremyst\\AI_DraeneiWalkUni06#111", "ZoneMusic\\Azuremyst\\AI_DraeneiWalkUni07r#110", "ZoneMusic\\Azuremyst\\AI_DraeneiWalkUni08r#99", "ZoneMusic\\Azuremyst\\AI_ExodarIntro01#83", "ZoneMusic\\Azuremyst\\AI_ExodarWalkUni01#109", "ZoneMusic\\Azuremyst\\AI_ExodarWalkUni02#108", "ZoneMusic\\Azuremyst\\AI_ExodarWalkUni03#93", "ZoneMusic\\Azuremyst\\AI_NagaWalkUni01#103", "ZoneMusic\\Azuremyst\\AI_NagaWalkUni02#74", "ZoneMusic\\Azuremyst\\AI_NagaWalkUni03#150", "ZoneMusic\\Azuremyst\\AI_NagaWalkUni04#74", "ZoneMusic\\Azuremyst\\AI_NagaWalkUni05#99", "ZoneMusic\\Azuremyst\\AI_OwlkinWalkUni01#49", "ZoneMusic\\Azuremyst\\AI_OwlkinWalkUni02#46", "ZoneMusic\\Azuremyst\\AV_DraeneiWalkUni01#206", "ZoneMusic\\Azuremyst\\AV_DraeneiWalkUni02#125", "ZoneMusic\\Azuremyst\\AV_DraeneiWalkUni03#188", "ZoneMusic\\Azuremyst\\AV_DraeneiWalkUni04#158", "ZoneMusic\\Azuremyst\\AV_DraeneiWalkUni02r#129", "ZoneMusic\\Azuremyst\\AV_DraeneiWalkUni03r#189",})
			Zn("Kalimdor", "Barrens"						, {	"|cffffd800Kalimdor: Barrens", "Cataclysm\\MUS_SouthernBarrens_GU01#78", "Cataclysm\\MUS_SouthernBarrens_GU02#56", "Cataclysm\\MUS_SouthernBarrens_GU03#20", "Cataclysm\\MUS_SouthernBarrens_GU04#23", "Cataclysm\\MUS_SouthernBarrens_GU05#36", "Cataclysm\\MUS_SouthernBarrens_GU06#28", "ZoneMusic\\BarrenDry\\DayBarrenDry01#64", "ZoneMusic\\BarrenDry\\DayBarrenDry02#64", "ZoneMusic\\BarrenDry\\DayBarrenDry03#55", "ZoneMusic\\BarrenDry\\NightBarrenDry01#67", "ZoneMusic\\BarrenDry\\NightBarrenDry02#41","ZoneMusic\\BarrenDry\\NightBarrenDry03#47",})
			Zn("Kalimdor", "Bloodmyst Isle"					, {	"|cffffd800Kalimdor: Bloodmyst Isle", "ZoneMusic\\Bloodmyst\\BI_NagaIntro01#32", "ZoneMusic\\Bloodmyst\\BI_NagaIntro01r#26", "ZoneMusic\\Bloodmyst\\BI_SatyrWalkUni01r#127", "ZoneMusic\\Bloodmyst\\BI_SatyrWalkUni02#130", "ZoneMusic\\Bloodmyst\\BI_SatyrWalkUni03#115","ZoneMusic\\Bloodmyst\\BI_SatyrWalkUni04#70", "ZoneMusic\\Bloodmyst\\BI_SatyrWalkUni05#144",})
			Zn("Kalimdor", "Darkshore"						, {	"|cffffd800Kalimdor: Darkshore", "Cataclysm\\MUS_EyeOfTheVortex_GU01#98", "Cataclysm\\MUS_EyeOfTheVortex_GU02#50", "Cataclysm\\MUS_EyeOfTheVortex_GU03#70", "Cataclysm\\MUS_GroveOfTheAncients_GU01#89", "Cataclysm\\MUS_GroveOfTheAncients_GU02#88", "Cataclysm\\MUS_GroveOfTheAncients_GU03#63", "Cataclysm\\MUS_GroveOfTheAncients_GU04#62", "Cataclysm\\MUS_RuinsOfAuberdine_GU01#100", "Cataclysm\\MUS_RuinsOfAuberdine_GU02#83", "Cataclysm\\MUS_RuinsOfAuberdine_GU03#83", "Cataclysm\\MUS_RuinsOfAuberdine_GU04#77", "Cataclysm\\MUS_RuinsOfAuberdine_GU05#77",})
			Zn("Kalimdor", "Durotar"						, {	"|cffffd800Kalimdor: Durotar", "Cataclysm\\MUS_DurotarA_GU01#125", "Cataclysm\\MUS_DurotarA_GU02#102", "Cataclysm\\MUS_DurotarA_GU03#102", "Cataclysm\\MUS_DurotarB_GU01#73", "Cataclysm\\MUS_DurotarB_GU02#72", "Cataclysm\\MUS_DurotarB_GU03#95", "Cataclysm\\MUS_DurotarB_GU04#95", "Cataclysm\\MUS_DurotarC_GU01#85", "Cataclysm\\MUS_DurotarC_GU02#85", "Cataclysm\\MUS_DurotarC_GU03#61", "Cataclysm\\MUS_DurotarC_GU04#61", "Cataclysm\\MUS_DurotarD_GU01#85", "Cataclysm\\MUS_DurotarD_GU02#85", "Cataclysm\\MUS_OrgrimmarLegacy_GU01#92", "Cataclysm\\MUS_Orgrimmar_GU01#108", "Cataclysm\\MUS_WarMarch_UU01#136", "CityMusic\\Orgrimmar\\orgrimmar_intro-moment#40", "CityMusic\\Orgrimmar\\orgrimmar01-moment#69", "CityMusic\\Orgrimmar\\orgrimmar02-moment#62", "CityMusic\\Orgrimmar\\orgrimmar01-zone#69", "CityMusic\\Orgrimmar\\orgrimmar02-zone#62",})
			Zn("Kalimdor", "Dustwallow Marsh"				, {	"|cffffd800Kalimdor: Dustwallow Marsh", "Cataclysm\\MUS_Grimtotem_UU01#79", "Cataclysm\\MUS_Grimtotem_UU02#79", "Cataclysm\\MUS_Grimtotem_UU03#79", "Cataclysm\\MUS_Grimtotem_UU04#71",})
			Zn("Kalimdor", "Felwood"						, {	"|cffffd800Kalimdor: Felwood", "Cataclysm\\MUS_Cursed_UU01#22", "Cataclysm\\MUS_Cursed_UU02#85", "Cataclysm\\MUS_Cursed_UU03#85", "Cataclysm\\MUS_Cursed_UU04#75", "Cataclysm\\MUS_Cursed_UU05#76", "Cataclysm\\MUS_Cursed_UU06#79", "Cataclysm\\MUS_Cursed_UU07#79", "Cataclysm\\MUS_Cursed_UU08#79", "Cataclysm\\MUS_Cursed_UU09#43", "Cataclysm\\MUS_Cursed_UU10#30", "Cataclysm\\MUS_Cursed_UU11#46", "Cataclysm\\MUS_Cursed_UU12#80", "ZoneMusic\\CursedLand\\CursedLand01#55", "ZoneMusic\\CursedLand\\CursedLand02#59", "ZoneMusic\\CursedLand\\CursedLand03#64", "ZoneMusic\\CursedLand\\CursedLand04#79", "ZoneMusic\\CursedLand\\CursedLand05#83", "ZoneMusic\\CursedLand\\CursedLand06#74", "Musical Moments\\haunted\\haunted01#62", "Musical Moments\\haunted\\haunted02#60",})
			Zn("Kalimdor", "Feralas"						, {	"|cffffd800Kalimdor: Feralas", "Cataclysm\\MUS_Feralas_GU01#82", "Cataclysm\\MUS_Feralas_GU02#85", "Cataclysm\\MUS_Feralas_GU03#84", "Cataclysm\\MUS_Feralas_GU04#85", "Cataclysm\\MUS_Feralas_GU05#81", "Cataclysm\\MUS_Feralas_GU06#83", "Cataclysm\\MUS_Feralas_GU07#84", "Cataclysm\\MUS_Feralas_GU08#62",})
			Zn("Kalimdor", "Moonglade"						, {	"|cffffd800Kalimdor: Moonglade", "Cataclysm\\MUS_Moonglade_GU01#91", "Cataclysm\\MUS_Moonglade_GU02#39", "Cataclysm\\MUS_Moonglade_GU03#32", "Cataclysm\\MUS_Moonglade_GU04#89", "Cataclysm\\MUS_Moonglade_GU05#87", "Cataclysm\\MUS_Moonglade_GU06#73", "Cataclysm\\MUS_Moonglade_GU07#91", "Musical Moments\\magic\\magic01-moment#64", "Musical Moments\\magic\\magic01-zone1#33", "Musical Moments\\magic\\magic01-zone2#39",})
			Zn("Kalimdor", "Mount Hyjal"					, {	"|cffffd800Kalimdor: Mount Hyjal", "Cataclysm\\MUS_BarrowDens_GU01#64", "Cataclysm\\MUS_BarrowDens_GU02#50", "Cataclysm\\MUS_BarrowDens_GU03#66", "Cataclysm\\MUS_BarrowDens_GU04#51", "Cataclysm\\MUS_BarrowDens_GU05#59", "Cataclysm\\MUS_DarkwhisperGorge_GU01#120", "Cataclysm\\MUS_DarkwhisperGorge_GU02#119", "Cataclysm\\MUS_Fire_UU01#62", "Cataclysm\\MUS_Fire_UU02#44", "Cataclysm\\MUS_GuardiansofHyjal_GU01#134", "Cataclysm\\MUS_GuardiansofHyjal_GU02#138", "Cataclysm\\MUS_GuardiansofHyjal_GU03#80", "Cataclysm\\MUS_GuardiansofHyjal_GU04#144", "Cataclysm\\MUS_Hyjal_GU01#85", "Cataclysm\\MUS_Hyjal_GU02#85", "Cataclysm\\MUS_Hyjal_GU03#84", "Cataclysm\\MUS_Hyjal_GU04#116", "Cataclysm\\MUS_LandWillWeep_UU01#53", "Cataclysm\\MUS_LandWillWeep_UU02#53", "Cataclysm\\MUS_Mysterious_UU01#99", "Cataclysm\\MUS_NightElves_GU01#160", "Cataclysm\\MUS_NightElves_GU02#85", "Cataclysm\\MUS_NightElves_GU03#85", "Cataclysm\\MUS_NightElves_GU04#81", "Cataclysm\\MUS_NightElves_GU05#81", "Cataclysm\\MUS_Nordrassil_GU01#118", "Cataclysm\\MUS_Nordrassil_GU02#115", "Cataclysm\\MUS_Nordrassil_GU03#117",})
			Zn("Kalimdor", "Mulgore"						, {	"|cffffd800Kalimdor: Mulgore", "Cataclysm\\MUS_MulgorePlains_GU01#90", "Cataclysm\\MUS_MulgorePlains_GU02#74", "Cataclysm\\MUS_Mulgore_GU01#94", "Cataclysm\\MUS_Mulgore_GU02#95", "Cataclysm\\MUS_Mulgore_GU03#94", "Cataclysm\\MUS_Tauren_UU01#76", "Cataclysm\\MUS_Tauren_UU02#71", "Cataclysm\\MUS_ThunderBluff_GU01#93", "Cataclysm\\MUS_ThunderBluff_GU02#86", "Cataclysm\\MUS_ThunderBluff_GU03#85", "CityMusic\\Thunderbluff\\Thunderbluff Intro#46", "CityMusic\\Thunderbluff\\Thunderbluff Walking 01#117", "CityMusic\\Thunderbluff\\Thunderbluff Walking 02#116", "CityMusic\\Thunderbluff\\Thunderbluff Walking 03#122",})
			Zn("Kalimdor", "Silithus"						, {	"|cffffd800Kalimdor: Silithus", "Cataclysm\\MUS_Silithus_GU01#100", "Cataclysm\\MUS_Silithus_GU02#62", "Cataclysm\\MUS_Silithus_GU03#98", "Cataclysm\\MUS_Silithus_GU04#111", "Cataclysm\\MUS_Silithus_GU05#98", "Cataclysm\\MUS_Silithus_GU06#141", "ZoneMusic\\Desert\\DayDesert01#66", "ZoneMusic\\Desert\\DayDesert02#81", "ZoneMusic\\Desert\\DayDesert03#54", "ZoneMusic\\Desert\\NightDesert01#78", "ZoneMusic\\Desert\\NightDesert02#62", "ZoneMusic\\Desert\\NightDesert03#58",})
			Zn("Kalimdor", "Stonetalon Mountains"			, {	"|cffffd800Kalimdor: Stonetalon Mountains", "Cataclysm\\MUS_Stonetalon_GU01#88", "Cataclysm\\MUS_Stonetalon_GU02#81", "Cataclysm\\MUS_Stonetalon_GU03#80", "Cataclysm\\MUS_Stonetalon_GU04#80",})
			Zn("Kalimdor", "Teldrassil"						, {	"|cffffd800Kalimdor: Teldrassil", "Cataclysm\\MUS_Shadowglen_GU01#87", "Cataclysm\\MUS_Shadowglen_GU02#87", "Cataclysm\\MUS_Shadowglen_GU03#111", "Cataclysm\\MUS_Darnassus_GI01#48", "Cataclysm\\MUS_Darnassus_GI02#45", "CityMusic\\Darnassus\\Darnassus Intro#40", "CityMusic\\Darnassus\\Darnassus Walking 1#85", "CityMusic\\Darnassus\\Darnassus Walking 2#69", "CityMusic\\Darnassus\\Darnassus Walking 3#68", "CityMusic\\Darnassus\\Druid Grove#45", "CityMusic\\Darnassus\\Warrior Terrace#53", "ZoneMusic\\EnchantedForest\\EnchantedForest01#50", "ZoneMusic\\EnchantedForest\\EnchantedForest02#67", "ZoneMusic\\EnchantedForest\\EnchantedForest03#235", "ZoneMusic\\EnchantedForest\\EnchantedForest04#61", "ZoneMusic\\EnchantedForest\\EnchantedForest05#71",})
			Zn("Kalimdor", "Thousand Needles"				, {	"|cffffd800Kalimdor: Thousand Needles", "ZoneMusic\\Plains\\DayPlains01#54", "ZoneMusic\\Plains\\DayPlains02#77", "ZoneMusic\\Plains\\NightPlains01#58", "ZoneMusic\\Plains\\NightPlains02#69",})
			Zn("Kalimdor", "Uldum"							, {	"|cffffd800Kalimdor: Uldum", "Cataclysm\\MUS_LostCity_GU01#134", "Cataclysm\\MUS_LostCity_GU02#118", "Cataclysm\\MUS_LostCity_GU03#80", "Cataclysm\\MUS_LostCity_GU04#99", "Cataclysm\\MUS_LostCity_GU05#73", "Cataclysm\\MUS_Skywall_GU01#159", "Cataclysm\\MUS_Skywall_GU02#208", "Cataclysm\\MUS_Skywall_GU03#110", "Cataclysm\\MUS_Skywall_GU04#117", "Cataclysm\\MUS_Skywall_GU05#141", "Cataclysm\\MUS_Skywall_GU06#43", "Cataclysm\\MUS_Skywall_GU07#43", "Cataclysm\\MUS_Skywall_GU08#43", "Cataclysm\\MUS_Skywall_GU09#208", "Cataclysm\\MUS_Skywall_GU10#110", "Cataclysm\\MUS_Treasure_UU01#159", "Cataclysm\\MUS_Treasure_UU02#91", "Cataclysm\\MUS_Treasure_UU03#64", "Cataclysm\\MUS_Treasure_UU04#70", "Cataclysm\\MUS_Treasure_UU05#78", "Cataclysm\\MUS_Treasure_UU06#71", "Cataclysm\\MUS_UldumA_GU01#135", "Cataclysm\\MUS_UldumA_GU02#44", "Cataclysm\\MUS_UldumA_GU03#95", "Cataclysm\\MUS_UldumA_GU04#111", "Cataclysm\\MUS_UldumA_GU05#111", "Cataclysm\\MUS_UldumB_GU01#127", "Cataclysm\\MUS_UldumB_GU02#128", "Cataclysm\\MUS_UldumB_GU03#128", "Cataclysm\\MUS_UldumB_GU04#57", "Cataclysm\\MUS_UldumB_GU05#57", "Cataclysm\\MUS_UldumB_GU06#93", "Cataclysm\\MUS_UldumEvent_E01#80",})
			Zn("Kalimdor", "Un'Goro Crater"					, {	"|cffffd800Kalimdor: Un'Goro Crater", "Cataclysm\\MUS_Marsh_UU01#111", "Cataclysm\\MUS_Marsh_UU02#89", "Cataclysm\\MUS_Marsh_UU03#85", "Cataclysm\\MUS_Marsh_UU04#68", "Cataclysm\\MUS_Marsh_UU05#104", "Cataclysm\\MUS_Marsh_UU06#112", "Cataclysm\\MUS_Marsh_UU07#111", "Cataclysm\\MUS_Marsh_UU08#99",})
			Zn("Kalimdor", "Winterspring"					, {	"|cffffd800Kalimdor: Winterspring", "Cataclysm\\MUS_Winterspring_GU01#66", "Cataclysm\\MUS_Winterspring_GU02#66", "Cataclysm\\MUS_Winterspring_GU03#66", "Cataclysm\\MUS_Winterspring_GU04#77", "Cataclysm\\MUS_Winterspring_GU05#107", "ZoneMusic\\Mountain\\DayMountain01#120", "ZoneMusic\\Mountain\\DayMountain02#67", "ZoneMusic\\Mountain\\DayMountain03#80", "ZoneMusic\\Mountain\\NightMountain01#64", "ZoneMusic\\Mountain\\NightMountain02#63", "ZoneMusic\\Mountain\\NightMountain03#69", "ZoneMusic\\Mountain\\NightMountain04#64",})

			-- Outland
			Zn("Outland", "|cffffd800Outland", {""})
			Zn("Outland", "Blade's Edge Mountains"			, {	"|cffffd800Outland: Blade's Edge Mountains", "ZoneMusic\\BladesEdge\\BL_DryForestWalkUni01#89", "ZoneMusic\\BladesEdge\\BL_DryForestWalkUni02#128", "ZoneMusic\\BladesEdge\\BL_DryForestWalkUni03#132", "ZoneMusic\\BladesEdge\\BL_GeneralWalkUni01#80", "ZoneMusic\\BladesEdge\\BL_GeneralWalkUni02#75", "ZoneMusic\\BladesEdge\\BL_GeneralWalkUni03#159", "ZoneMusic\\BladesEdge\\BL_GeneralWalkUni04#110", "ZoneMusic\\BladesEdge\\BL_GeneralWalkUni05#110", "ZoneMusic\\BladesEdge\\BL_OgreWalkUni01#75", "ZoneMusic\\BladesEdge\\BL_OgreWalkUni02#110",})
			Zn("Outland", "Hellfire Peninsula"				, {	"|cffffd800Outland: Hellfire Peninsula", "ZoneMusic\\HellfirePeninsula\\BL_HE_OgreWalkUni01#75", "ZoneMusic\\HellfirePeninsula\\BL_HE_OgreWalkUni02#110", "ZoneMusic\\HellfirePeninsula\\HE_ArmouryIntroUni01#14", "ZoneMusic\\HellfirePeninsula\\HE_CitadelDemonWalkUni01#54", "ZoneMusic\\HellfirePeninsula\\HE_CitadelDemonWalkUni02#63", "ZoneMusic\\HellfirePeninsula\\HE_CitadelIntroUni01#20", "ZoneMusic\\HellfirePeninsula\\HE_GeneralWalkUni01#130", "ZoneMusic\\HellfirePeninsula\\HE_GeneralWalkUni02#67", "ZoneMusic\\HellfirePeninsula\\HE_GeneralWalkUni03#59", "ZoneMusic\\HellfirePeninsula\\HE_GeneralWalkUni04#96", "ZoneMusic\\HellfirePeninsula\\HE_GeneralWalkUni05#127", "ZoneMusic\\HellfirePeninsula\\HE_PathOfGloryIntroUni01#18", "ZoneMusic\\HellfirePeninsula\\HE_RampartsWalkUni01#63", "ZoneMusic\\HellfirePeninsula\\HE_RampartsWalkUni02#69", "ZoneMusic\\HellfirePeninsula\\HE_StairsIntroUni01#18", "ZoneMusic\\HellfirePeninsula\\HE_WistfulIntroUni01#26", "ZoneMusic\\HellfirePeninsula\\HE_WistfulIntroUni02#17",})
			Zn("Outland", "Nagrand"							, {	"|cffffd800Outland: Nagrand", "ZoneMusic\\Nagrand\\NA_DiamondIntroUni01#73", "ZoneMusic\\Nagrand\\NA_GeneralWalkDay01#73", "ZoneMusic\\Nagrand\\NA_GeneralWalkDay02#100", "ZoneMusic\\Nagrand\\NA_GeneralWalkDay03#63", "ZoneMusic\\Nagrand\\NA_GeneralWalkNight01#88", "ZoneMusic\\Nagrand\\NA_GeneralWalkNight02#80", "ZoneMusic\\Nagrand\\NA_GeneralWalkNight03#167",})
			Zn("Outland", "Netherstorm"						, {	"|cffffd800Outland: Netherstorm", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni01#151", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni02#176", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni03#179", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni04#181", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni05#184", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni06#192", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni07#193", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni08#169", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni09#199", "ZoneMusic\\Netherstorm\\NS_GeneralWalkUni10#223", "ZoneMusic\\Netherstorm\\NS_MushroomIntroUni01#39", "ZoneMusic\\Netherstorm\\NS_MushroomIntroUni02#34", "ZoneMusic\\Netherstorm\\NS_MushroomIntroUni03#37", "ZoneMusic\\Netherstorm\\NS_NetherplantIntroUni01#45", "ZoneMusic\\Netherstorm\\NS_NetherplantIntroUni02#51", "ZoneMusic\\Netherstorm\\NS_NetherplantIntroUni03#48", "ZoneMusic\\Netherstorm\\NS_NetherplantIntroUni04#45",})
			Zn("Outland", "Shadowmoon Valley"				, {	"|cffffd800Outland: Shadowmoon Valley", "ZoneMusic\\ShadowmoonValley\\SV_GeneralWalkUni01#68", "ZoneMusic\\ShadowmoonValley\\SV_GeneralWalkUni02#113", "ZoneMusic\\ShadowmoonValley\\SV_GeneralWalkUni03#106", "ZoneMusic\\ShadowmoonValley\\SV_GeneralWalkUni04#93", "ZoneMusic\\ShadowmoonValley\\SV_GeneralWalkUni05#93", "ZoneMusic\\ShadowmoonValley\\SV_GeneralWalkUni06#68",})
			Zn("Outland", "Terokkar Forest"					, {	"|cffffd800Outland: Terokkar Forest", "ZoneMusic\\Terokkar\\TF_AuchindounWalkUni01#120", "ZoneMusic\\Terokkar\\TF_AuchindounWalkUni02#150", "ZoneMusic\\Terokkar\\TF_AuchindounWalkUni03#120", "ZoneMusic\\Terokkar\\TF_BoneWalkUni01#65", "ZoneMusic\\Terokkar\\TF_BoneWalkUni02#63", "ZoneMusic\\Terokkar\\TF_BoneWalkUni03#57", "ZoneMusic\\Terokkar\\TF_BoneWalkUni04#190", "ZoneMusic\\Terokkar\\TF_ForestWalkUni01#151", "ZoneMusic\\Terokkar\\TF_ForestWalkUni02#190", "ZoneMusic\\Terokkar\\TF_ForestWalkUni03#188", "ZoneMusic\\Terokkar\\TF_ShattrathWalkUni01#138", "ZoneMusic\\Terokkar\\TF_ShattrathWalkUni02#100", "ZoneMusic\\Terokkar\\TF_ShattrathWalkUni03#92", "ZoneMusic\\Terokkar\\TF_ShattrathWalkUni04#82", "ZoneMusic\\Terokkar\\TF_ShattrathWalkUni05#118", "ZoneMusic\\Terokkar\\TF_ShattrathWalkUni06#138",})
			Zn("Outland", "Zangarmarsh"						, {	"|cffffd800Outland: Zangarmarsh", "ZoneMusic\\ZangarMarsh\\ZA_CoilfangWalkUni01#133", "ZoneMusic\\ZangarMarsh\\ZA_CoilfangWalkUni02#100", "ZoneMusic\\ZangarMarsh\\ZA_CoilfangWalkUni03#110", "ZoneMusic\\ZangarMarsh\\ZA_GeneralWalkUni01#82", "ZoneMusic\\ZangarMarsh\\ZA_GeneralWalkUni02#120", "ZoneMusic\\ZangarMarsh\\ZA_GeneralWalkUni03#60", "ZoneMusic\\ZangarMarsh\\ZA_GeneralWalkUni04#103", "ZoneMusic\\ZangarMarsh\\ZA_GeneralWalkUni05#72", "ZoneMusic\\ZangarMarsh\\ZA_GeneralWalkUni06#90",})

			-- Northrend
			Zn("Northrend", "|cffffd800Northrend", {""})
			Zn("Northrend", "Borean Tundra"					, {	"|cffffd800Northrend: Borean Tundra", "ZoneMusic\\BoreanTundra\\BO_ColdarraWalkUni01#65", "ZoneMusic\\BoreanTundra\\BO_ColdarraWalkUni02#64", "ZoneMusic\\BoreanTundra\\BO_ColdarraWalkUni03#124", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day01#74", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day02#101", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day03#79", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day04#112", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day05#73", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day06#115", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day07#87", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Day08#72", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night01#74", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night02#115", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night03#89", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night04#70", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night05#78", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night06#100", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night07#79", "ZoneMusic\\BoreanTundra\\BO_GeneralWalk_Night08#112", "ZoneMusic\\BoreanTundra\\BO_GeyserField_General01#58", "ZoneMusic\\BoreanTundra\\BO_GeyserField_General02#49", "ZoneMusic\\BoreanTundra\\BO_GeyserField_General03#63", "ZoneMusic\\BoreanTundra\\BO_Riplash_Day01#152", "ZoneMusic\\BoreanTundra\\BO_Riplash_Day02#187", "ZoneMusic\\BoreanTundra\\BO_Riplash_Day03#162", "ZoneMusic\\BoreanTundra\\BO_Riplash_Intro01#154", "ZoneMusic\\BoreanTundra\\BO_Riplash_Intro02#178", "ZoneMusic\\BoreanTundra\\BO_Riplash_Night01#160", "ZoneMusic\\BoreanTundra\\BO_Riplash_Night02#79", "ZoneMusic\\BoreanTundra\\BO_Riplash_Night03#76", "ZoneMusic\\BoreanTundra\\BO_Riplash_Night04#95", "ZoneMusic\\BoreanTundra\\BO_Tusk_KaskalaDay01#101", "ZoneMusic\\BoreanTundra\\BO_Tusk_KaskalaDay02#80", "ZoneMusic\\BoreanTundra\\BO_Tusk_KaskalaNight01#99", "ZoneMusic\\BoreanTundra\\BO_Tusk_KaskalaNight02#60",})
			Zn("Northrend", "Crystalsong Forest"			, {	"|cffffd800Northrend: Crystalsong Forest", "ZoneMusic\\Crystalsong\\CS_CrystalsongWalkUni01#113", "ZoneMusic\\Crystalsong\\CS_CrystalsongWalkUni02#99", "ZoneMusic\\Crystalsong\\CS_CrystalsongWalkUni03#73", "ZoneMusic\\Crystalsong\\CS_CrystalsongWalkUni04#113", "ZoneMusic\\Crystalsong\\CS_CrystalsongWalkUni05#107", "ZoneMusic\\Dalaran\\DC_GeneralWalkUni01#68", "ZoneMusic\\Dalaran\\DC_GeneralWalkUni02#43", "ZoneMusic\\Dalaran\\DC_GeneralWalkUni03#70", "ZoneMusic\\Dalaran\\DC_GeneralWalkUni04#89", "ZoneMusic\\Dalaran\\DC_IntroUni01#69", "ZoneMusic\\Dalaran\\DC_SewerWalkUni01#67", "ZoneMusic\\Dalaran\\DC_SewerWalkUni02#102", "ZoneMusic\\Dalaran\\DC_SewerWalkUni03#72", "ZoneMusic\\Dalaran\\DC_SewerWalkUni04#65", "ZoneMusic\\Dalaran\\DC_SpireWalkUni01#92",})
			Zn("Northrend", "Dragonblight"					, {	"|cffffd800Northrend: Dragonblight", "ZoneMusic\\Dragonblight\\DB_GeneralIntro_01#93", "ZoneMusic\\Dragonblight\\DB_GeneralIntro_02#93", "ZoneMusic\\Dragonblight\\DB_GeneralIntro_03#92", "ZoneMusic\\Dragonblight\\DB_GeneralIntro_04#93", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day01#75", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day02#57", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day03#120", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day04#76", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day05#93", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day06#94", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day07#93", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Day08#93", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night01#74", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night02#57", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night03#119", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night04#76", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night05#93", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night06#93", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night07#94", "ZoneMusic\\Dragonblight\\DB_GeneralWalk_Night08#94", "ZoneMusic\\Dragonblight\\DB_Tusk_InduleDay01#130", "ZoneMusic\\Dragonblight\\DB_Tusk_InduleDay02#60", "ZoneMusic\\Dragonblight\\DB_Tusk_InduleDay03#39", "ZoneMusic\\Dragonblight\\DB_Tusk_InduleNight01#133", "ZoneMusic\\Dragonblight\\DB_Tusk_InduleNight02#64", "ZoneMusic\\Dragonblight\\DB_Tusk_InduleNight03#39", "ZoneMusic\\Dragonblight\\DB_Tusk_Indule_Day01#130", "ZoneMusic\\Dragonblight\\DB_Tusk_Indule_Day02#63",})
			Zn("Northrend", "Grizzly Hills"					, {	"|cffffd800Northrend: Grizzly Hills", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_A_Day01#94", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_A_Day02#144", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_A_Day03#89", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_A_Day04#95", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_A_Night01#130", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_A_Night02#142", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_B_Day01#108", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_B_Day02#108", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_B_Night01#101", "ZoneMusic\\GrizzlyHills\\GH_GeneralWalk_B_Night02#116", "ZoneMusic\\GrizzlyHills\\GH_Intro1Uni01#285", "ZoneMusic\\GrizzlyHills\\GH_Intro2Uni01#149", "ZoneMusic\\GrizzlyHills\\GH_WalkDay01#142", "ZoneMusic\\GrizzlyHills\\GH_WalkDay02#138", "ZoneMusic\\GrizzlyHills\\GH_WalkDay03#238", "ZoneMusic\\GrizzlyHills\\GH_WalkDay04#111", "ZoneMusic\\GrizzlyHills\\GH_WalkDay05#98", "ZoneMusic\\GrizzlyHills\\GH_WalkDay06#155", "ZoneMusic\\GrizzlyHills\\GH_WalkDay07#155", "ZoneMusic\\GrizzlyHills\\GH_WalkDay08#88", "ZoneMusic\\GrizzlyHills\\GH_WalkDay09#88", "ZoneMusic\\GrizzlyHills\\GH_WalkNight01#101", "ZoneMusic\\GrizzlyHills\\GH_WalkNight02#111", "ZoneMusic\\GrizzlyHills\\GH_WalkNight03#99", "ZoneMusic\\GrizzlyHills\\GH_WalkNight04#155", "ZoneMusic\\GrizzlyHills\\GH_WalkNight05#149", "ZoneMusic\\GrizzlyHills\\GH_WalkNight06#134",})
			Zn("Northrend", "Howling Fjord"					, {	"|cffffd800Northrend: Howling Fjord", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni01#31", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni02#47", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni03#53", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni04#26", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni05#22", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni06#41", "ZoneMusic\\HowlingFjord\\HF_DistWalkUni07#23", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day01#110", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day02#75", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day03#91", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day04#64", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day05#124", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day06#115", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Day07#149", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Night01#107", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Night02#91", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Night03#85", "ZoneMusic\\HowlingFjord\\HF_GeneralWalk_Night04#158", "ZoneMusic\\HowlingFjord\\HF_Tusk_KamaguaDay01#95", "ZoneMusic\\HowlingFjord\\HF_Tusk_KamaguaDay02#55", "ZoneMusic\\HowlingFjord\\HF_Tusk_KamaguaNight01#100", "ZoneMusic\\HowlingFjord\\HF_Tusk_KamaguaNight02#80",})
			Zn("Northrend", "Icecrown"						, {	"|cffffd800Northrend: Icecrown", "ZoneMusic\\IcecrownGlacier\\IC_GeneralIntro_01#58", "ZoneMusic\\IcecrownGlacier\\IC_GeneralIntro_02#57", "ZoneMusic\\IcecrownGlacier\\IC_GeneralIntro_03#57", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Day01#76", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Day02#102", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Day03#62", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Day04#99", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Night01#100", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Night02#81", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Night03#94", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Night04#65", "ZoneMusic\\IcecrownGlacier\\IC_GeneralWalk_Night05#103",})
			Zn("Northrend", "Sholazar Basin"				, {	"|cffffd800Northrend: Sholazar Basin", "ZoneMusic\\SholazarBasin\\SB_CrystalsWalkUni01#130", "ZoneMusic\\SholazarBasin\\SB_CrystalsWalkUni02#143", "ZoneMusic\\SholazarBasin\\SB_FireWalkUni01#107", "ZoneMusic\\SholazarBasin\\SB_FireWalkUni02#94", "ZoneMusic\\SholazarBasin\\SB_FireWalkUni03#58", "ZoneMusic\\SholazarBasin\\SB_FireWalkUni04#107", "ZoneMusic\\SholazarBasin\\SB_LifebloodCaveWalkUni01#82", "ZoneMusic\\SholazarBasin\\SB_LifebloodCaveWalkUni02#99", "ZoneMusic\\SholazarBasin\\SB_LifebloodCaveWalkUni03#99", "ZoneMusic\\SholazarBasin\\SB_MakersTerraceWalkUni01#76", "ZoneMusic\\SholazarBasin\\SB_MakersTerraceWalkUni02#95", "ZoneMusic\\SholazarBasin\\SB_PathofLifeWardenWalkUni01#136", "ZoneMusic\\SholazarBasin\\SB_PathofLifeWardenWalkUni02#162", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkDay01#176", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkDay02#115", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkDay03#106", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkDay04#112", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkDay05#123", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkDay06#142", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkNight01#115", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkNight02#138", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkNight03#132", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkNight04#92", "ZoneMusic\\SholazarBasin\\SB_SholazarWalkNight05#100",})
			Zn("Northrend", "Storm Peaks"					, {	"|cffffd800Northrend: Storm Peaks", "ZoneMusic\\StormPeaks\\SP_GeneralWalkA_Day01#87", "ZoneMusic\\StormPeaks\\SP_GeneralWalkB_Day02#82", "ZoneMusic\\StormPeaks\\SP_GeneralWalkC_Day03#64", "ZoneMusic\\StormPeaks\\SP_GeneralWalkD_Day04#55", "ZoneMusic\\StormPeaks\\SP_GeneralWalkE_Day05#83", "ZoneMusic\\StormPeaks\\SP_GeneralWalkA_Night01#88", "ZoneMusic\\StormPeaks\\SP_GeneralWalkB_Night02#82", "ZoneMusic\\StormPeaks\\SP_GeneralWalkC_Night03#58", "ZoneMusic\\StormPeaks\\SP_GeneralWalkD_Night04#52", "ZoneMusic\\StormPeaks\\SP_GeneralWalkE_Night05#75", "ZoneMusic\\StormPeaks\\SP_GeneralWalkADark_Uni01#120", "ZoneMusic\\StormPeaks\\SP_GeneralWalkB_Uni02#83", "ZoneMusic\\StormPeaks\\SP_GeneralWalkC_Uni03#58", "ZoneMusic\\StormPeaks\\SP_GeneralWalkD_Uni04#55", "ZoneMusic\\StormPeaks\\SP_GeneralWalkE_Uni05#83",})
			Zn("Northrend", "Wintergrasp"					, {	"|cffffd800Northrend: Wintergrasp", "ZoneMusic\\LakeWintergrasp\\WG_Contested_01#41", "ZoneMusic\\LakeWintergrasp\\WG_Contested_02#93", "ZoneMusic\\LakeWintergrasp\\WG_Contested_03#57", "ZoneMusic\\LakeWintergrasp\\WG_GeneralWalk_01#93", "ZoneMusic\\LakeWintergrasp\\WG_GeneralWalk_02#62", "ZoneMusic\\LakeWintergrasp\\WG_GeneralWalk_03#93", "ZoneMusic\\LakeWintergrasp\\WG_GeneralWalk_04#43", "ZoneMusic\\LakeWintergrasp\\WG_GeneralWalk_05#57",})
			Zn("Northrend", "Zul'Drak"						, {	"|cffffd800Northrend: Zul'Drak", "ZoneMusic\\ZulDrak\\ZD_GeneralIntro_01#98", "ZoneMusic\\ZulDrak\\ZD_GeneralIntro_02#98", "ZoneMusic\\ZulDrak\\ZD_GeneralIntro_03#129", "ZoneMusic\\ZulDrak\\ZD_GeneralIntro_04#126", "ZoneMusic\\ZulDrak\\ZD_GeneralIntro_05#130", "ZoneMusic\\ZulDrak\\ZD_GeneralIntro_06#126", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Day01#90", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Day02#91", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Day03#102", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Day04#93", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Night01#90", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Night02#90", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Night03#102", "ZoneMusic\\ZulDrak\\ZD_GeneralWalk_Night04#93", "ZoneMusic\\ZulDrak\\ZD_HarKoa_Intro01#28", "ZoneMusic\\ZulDrak\\ZD_HarKoa_Intro02#28", "ZoneMusic\\ZulDrak\\ZD_MamToth_Intro01#31", "ZoneMusic\\ZulDrak\\ZD_MamToth_Intro02#28", "ZoneMusic\\ZulDrak\\ZD_QuetzLun_Intro01#32", "ZoneMusic\\ZulDrak\\ZD_QuetzLun_Intro02#28", "ZoneMusic\\ZulDrak\\ZD_Rhunok_Intro01#30", "ZoneMusic\\ZulDrak\\ZD_Rhunok_Intro02#28", "ZoneMusic\\ZulDrak\\ZD_Sseratus_Intro01#28", "ZoneMusic\\ZulDrak\\ZD_Sseratus_Intro02#28",})

			-- Maelstrom
			Zn("Maelstrom", "|cffffd800Maelstrom", {""})
			Zn("Maelstrom", "Deepholm"						, {	"|cffffd800Maelstrom: Deepholm", "Cataclysm\\MUS_DeepholmEvent_E01#114", "Cataclysm\\MUS_DeepholmEvent_E02#137", "Cataclysm\\MUS_Deepholm_GU01#123", "Cataclysm\\MUS_Deepholm_GU02#126", "Cataclysm\\MUS_Elemental_UU01#59", "Cataclysm\\MUS_Elemental_UU02#40", "Cataclysm\\MUS_Elemental_UU03#38", "Cataclysm\\MUS_Elemental_UU04#131", "Cataclysm\\MUS_Elemental_UU05#73", "Cataclysm\\MUS_Elemental_UU06#47", "Cataclysm\\MUS_Elemental_UU07#70", "Cataclysm\\MUS_Scarred_UU01#79", "Cataclysm\\MUS_Scarred_UU02#27", "Cataclysm\\MUS_Scarred_UU03#36", "Cataclysm\\MUS_Scarred_UU04#52",})
			Zn("Maelstrom", "Lost Isles & Kezan"			, {	"|cffffd800Maelstrom: Lost Isles & Kazan", "Cataclysm\\MUS_GoblinHotRodRadioLoop_EU01#164", "Cataclysm\\MUS_Goblin_UU08#48", "Cataclysm\\MUS_Goblin_UU09#87", "Cataclysm\\MUS_Goblin_UU10#47", "Cataclysm\\MUS_Goblin_UU11#46", "Cataclysm\\MUS_Goblin_UU12#46", "Cataclysm\\MUS_Goblin_UU13#48", "Cataclysm\\MUS_Goblin_UU14#47", "Cataclysm\\MUS_Goblin_UU15#47", "Cataclysm\\MUS_Goblin_UU16#88", "Cataclysm\\MUS_Goblin_UU17#87", "Cataclysm\\MUS_Goblin_UU18#85", "Cataclysm\\MUS_Goblin_UU47#52", "Cataclysm\\MUS_LIRescue_EU01#37", "Cataclysm\\MUS_LIRescue_EU03#53", "Cataclysm\\MUS_LIRescue_EU04#87",})

			-- Pandaria
			Zn("Pandaria", "|cffffd800Pandaria", {""})
			Zn("Pandaria", "Dread Wastes"					, {	"|cffffd800Pandaria: Dread Wastes", "Pandaria\\MUS_50_DreadWastes_A_Hero_01#85", "Pandaria\\MUS_50_DreadWastes_A_Hero_02#73", "Pandaria\\MUS_50_Mantid_A_Hero_01#95", "Pandaria\\MUS_50_Mantid_A_01#35", "Pandaria\\MUS_50_Mantid_A_02#89", "Pandaria\\MUS_50_Mantid_A_03#109",})
			Zn("Pandaria", "Jade Forest"					, {	"|cffffd800Pandaria: Jade Forest", "Pandaria\\MUS_50_Monk_Mistweaver_A_Hero_01#49", "Pandaria\\MUS_50_Monk_Mistweaver_A_Hero_02#79", "Pandaria\\MUS_50_Monk_Mistweaver_A_01#124", "Pandaria\\MUS_50_Monk_Mistweaver_A_02#91", "Pandaria\\MUS_50_Monk_Mistweaver_A_03#92", "Pandaria\\MUS_50_Monk_Mistweaver_A_Walk_01#70", "Pandaria\\MUS_50_Monk_Mistweaver_A_Walk_02#60", "Pandaria\\MUS_50_Monk_Windwalker_A_Hero_01#94", "Pandaria\\MUS_50_Monk_Windwalker_A_Hero_02#82", "Pandaria\\MUS_50_Monk_Windwalker_A_01#158", "Pandaria\\MUS_50_Monk_Windwalker_A_02#105", "Pandaria\\MUS_50_Monk_Windwalker_A_03#68", "Pandaria\\MUS_50_Monk_Windwalker_A_Walk_01#109", "Pandaria\\MUS_50_Monk_Windwalker_A_Walk_02#118", "Pandaria\\MUS_50_Monk_Windwalker_A_Walk_03#95", "Pandaria\\MUS_50_Monk_Windwalker_A_Walk_04#72", "Pandaria\\MUS_50_Pandaria_B_Hero_01#80", "Pandaria\\MUS_50_Pandaria_B_Hero_02#71", "Pandaria\\MUS_50_Pandaria_B_01#55", "Pandaria\\MUS_50_Pandaria_C_Hero_03#67", "Pandaria\\MUS_50_Pandaria_C_Walk_01#69", "Pandaria\\MUS_50_Pandaria_C_Walk_02#63", "Pandaria\\MUS_50_Pandaria_C_Walk_03#110", "Pandaria\\MUS_50_SerpentsHeart_Hero_01#94", "Pandaria\\MUS_50_SerpentsHeart_Hero_02#84", "Pandaria\\MUS_50_SerpentsHeart_Hero_03#93", "Pandaria\\MUS_50_SerpentsHeart_Night_Hero_01#111", "Pandaria\\MUS_50_SerpentsHeart_Night_Hero_02#91", "Pandaria\\MUS_50_SerpentsHeart_Night_Walk_01#131", "Pandaria\\MUS_50_SerpentsHeart_Night_Walk_02#72", "Pandaria\\MUS_50_SerpentsHeart_Night_Walk_03#103", "Pandaria\\MUS_50_Windspire_Hero_01#87", "Pandaria\\MUS_50_Windspire_01#87", "Pandaria\\MUS_50_Windspire_02#117", "Pandaria\\MUS_50_Windspire_03#115",})
			Zn("Pandaria", "Krasarang Wilds"				, {	"|cffffd800Pandaria: Krasarang Wilds", "Pandaria\\MUS_50_KrasarangWilds_A_Hero_01#91", "Pandaria\\MUS_50_KrasarangWilds_A_Hero_02#76", "Pandaria\\MUS_50_KrasarangWilds_B_Hero_01#82", "Pandaria\\MUS_50_KrasarangWilds_B_Hero_02#61", "Pandaria\\MUS_50_KrasarangWilds_B_Hero_03#70", "Pandaria\\MUS_50_TempleoftheJadeSerpent_Hero_01#75", "Pandaria\\MUS_50_TempleoftheJadeSerpent_Hero_02#88", "Pandaria\\MUS_50_TempleoftheJadeSerpent_Hero_03#73",})
			Zn("Pandaria", "Kun-Lai Summit"					, {	"|cffffd800Pandaria: Kun-Lai Summit", "Pandaria\\MUS_50_KunLaiSummit_A_Hero_01#51", "Pandaria\\MUS_50_KunLaiSummit_A_Hero_02#64", "Pandaria\\MUS_50_KunLaiSummit_A_Hero_03#80", "Pandaria\\MUS_50_KunLaiSummit_A_Hero_04#46", "Pandaria\\MUS_50_ShaWalk_Hero_01#85", "Pandaria\\MUS_50_ShaWalk_Hero_02#57", "Pandaria\\MUS_50_VEB_D_Hero_01#73", "Pandaria\\MUS_50_VEB_D_Hero_02#71", "Pandaria\\MUS_50_VEB_D_Hero_03#52", "Pandaria\\MUS_50_VEB_D_Hero_04#50",})
			Zn("Pandaria", "Townlong Steppes"				, {	"|cffffd800Pandaria: Townlong Steppes", "Pandaria\\MUS_50_TownlongSteppes_A_Hero_01#95", "Pandaria\\MUS_50_TownlongSteppes_A_Hero_02#114", "Pandaria\\MUS_50_TownlongSteppes_B_01#98", "Pandaria\\MUS_50_TownlongSteppes_B_02#91", "Pandaria\\MUS_50_TownlongSteppes_C_Hero_01#81", "Pandaria\\MUS_50_TownlongSteppes_C_Hero_02#58", "Pandaria\\MUS_50_TownlongSteppes_C_Hero_03#67", "Pandaria\\MUS_50_TownlongSteppes_C_Night_Hero_01#58", "Pandaria\\MUS_50_TownlongSteppes_C_Night_Hero_02#71", "Pandaria\\MUS_50_TownlongSteppes_C_Night_Hero_03#70", "Pandaria\\MUS_50_TownlongSteppes_D_01#64", "Pandaria\\MUS_50_TownlongSteppes_D_Hero_01#42", "Pandaria\\MUS_50_TownlongSteppes_D_Hero_02#71",})
			Zn("Pandaria", "Valley of the Four Winds"		, {	"|cffffd800Pandaria: Valley of the Four Winds", "Pandaria\\MUS_50_VFW_A_Hero_01#52", "Pandaria\\MUS_50_VFW_A_Hero_02#82", "Pandaria\\MUS_50_VFW_A_01#53", "Pandaria\\MUS_50_VFW_A_02#82", "Pandaria\\MUS_50_VFW_A_03#54", "Pandaria\\MUS_50_VFW_A_04#82", "Pandaria\\MUS_50_VFW_A_05#54", "Pandaria\\MUS_50_VFW_A_06#82", "Pandaria\\MUS_50_VFW_A_07#54", "Pandaria\\MUS_50_VFW_A_08#102", "Pandaria\\MUS_50_Bamboo_Hero_01#89", "Pandaria\\MUS_50_Bamboo_01#47", "Pandaria\\MUS_50_Bamboo_02#53", "Pandaria\\MUS_50_Bamboo_03#69", "Pandaria\\MUS_50_Bamboo_04#98", "Pandaria\\MUS_50_Bamboo_Night_Hero_01#102", "Pandaria\\MUS_50_Bamboo_Night_01#61", "Pandaria\\MUS_50_TheHeartland_Hero_01#85", "Pandaria\\MUS_50_TheHeartland_Hero_02#58", "Pandaria\\MUS_50_TheHeartland_Hero_03#87", "Pandaria\\MUS_50_TheHeartland_Hero_04#147",})
			Zn("Pandaria", "Wandering Isle"					, {	"|cffffd800Pandaria: Wandering Isle", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleA_Hero_UU01#101","ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleA_UU01#98", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleA_UU02#108", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleA_UU03#69", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleA_UU04#108", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleA_UU05#54", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleB_Hero_UU01#135", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleB_UU01#87", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleC_Hero_UU01#85", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleC_UU01#89", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleC_UU02#76", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleC_UU03#89", "ZONEMUSIC\\WanderingIsle\\MUS_50_WanderingIsleC_UU04#82",})

			-- Draenor
			Zn("Draenor", "|cffffd800Draenor", {""})
			Zn("Draenor", "Ashran"							, {	"|cffffd800Draenor: Ashran", "Draenor\\MUS_60_Army_Stinger1#12", "Draenor\\MUS_60_Blackrock_C#39", "Draenor\\MUS_60_Eagle_A#127", "Draenor\\MUS_60_Eagle_D#27", "Draenor\\MUS_60_Mobilize_A#142", "Draenor\\MUS_60_Mobilize_H#157", "Draenor\\MUS_60_Shakedown_C#102", "Draenor\\MUS_60_Village_C1#63", "Draenor\\MUS_60_Village_C2#88", "Draenor\\MUS_60_Vows_A3#102", "Draenor\\MUS_60_Vows_H1#100", "Draenor\\MUS_60_Vows_H2#85", "Draenor\\MUS_60_WarriorsJourney_C#18", "Draenor\\MUS_60_WarriorsJourney_H1#93", "Draenor\\MUS_60_WarriorsJourney_H3#72", "Draenor\\MUS_60_Warsong_v1#153", "Draenor\\MUS_60_WorldExpo_A1#55", "Draenor\\MUS_60_WorldExpo_A2#55",})
			Zn("Draenor", "Frostfire Ridge"					, {	"|cffffd800Draenor: Frostfire Ridge", "Draenor\\MUS_60_BFreedom_H1#68", "Draenor\\MUS_60_BFreedom_H2#107", "Draenor\\MUS_60_Grinspiration_C#124", "Draenor\\MUS_60_MagnificentDesolation2_A1#83", "Draenor\\MUS_60_MagnificentDesolation2_A2#97", "Draenor\\MUS_60_MagnificentDesolation2_H#239", "Draenor\\MUS_60_MagnificentDesolation2_H1#130", "Draenor\\MUS_60_MagnificentDesolation2_H2#111", "Draenor\\MUS_60_MagnificentDesolation_A#237", "Draenor\\MUS_60_ManDown_B#82", "Draenor\\MUS_60_ManDown_D#169", "Draenor\\MUS_60_Nagrand_v6#134", "Draenor\\MUS_60_WarriorsJourney_B1#66", "Draenor\\MUS_60_WarriorsJourney_B2#54",})
			Zn("Draenor", "Gorgrond"						, {	"|cffffd800Draenor: Gorgrond", "Draenor\\MUS_60_IronDawn_v4#154", "Draenor\\MUS_60_Nagrand_v3B#58", "Draenor\\MUS_60_Nagrand_v4#87", "Draenor\\MUS_60_Nagrand_v5#80", "Draenor\\MUS_60_TsHaveIt_A#116", "Draenor\\MUS_60_WorldExpo_E1#56", "Draenor\\MUS_60_WorldExpo_E2#65", "Draenor\\MUS_60_WorldExpo_F1#64", "Draenor\\MUS_60_WorldExpo_F2#65", "Draenor\\MUS_60_WorldExpo_F3#39",})
			Zn("Draenor", "Nagrand (Draenor)"				, {	"|cffffd800Draenor: Nagrand", "Draenor\\MUS_60_GrommashHellscreamv_3#73", "Draenor\\MUS_60_GrommashHellscream_v2B#55", "Draenor\\MUS_60_Mobilize_B2#108", "Draenor\\MUS_60_MountainsIntro_A1#224", "Draenor\\MUS_60_MountainsIntro_A2#107", "Draenor\\MUS_60_Mountains_Ambient2#72", "Draenor\\MUS_60_Mountains_Ambient3#82", "Draenor\\MUS_60_Mystic_B2#64", "Draenor\\MUS_60_Nagrand_v1#149", "Draenor\\MUS_60_WarriorsJourney_E#18", "Draenor\\MUS_60_Warsong_v3A#84", "Draenor\\MUS_60_WorldExpo_A3#61", "Draenor\\MUS_60_WorldExpo_C#23", "Draenor\\MUS_60_WorldExpo_D#23", "Draenor\\MUS_60_WorldExpo_H#169",})
			Zn("Draenor", "Shadowmoon Valley (Draenor)"		, {	"|cffffd800Draenor: Shadowmoon Valley", "Draenor\\MUS_60_AHerosSacrifice_v1#117", "Draenor\\MUS_60_AHerosSacrifice_v3A#55", "Draenor\\MUS_60_AHerosSacrifice_v3B#60", "Draenor\\MUS_60_EtherealEmbers_D#79", "Draenor\\MUS_60_EtherealEmbers_E#81", "Draenor\\MUS_60_Malach_H1#128", "Draenor\\MUS_60_Malach_H2#140", "Draenor\\MUS_60_Malach_H3#46", "Draenor\\MUS_60_Malach_H4#66", "Draenor\\MUS_60_ManDown_A1#63", "Draenor\\MUS_60_ManDown_A2#60", "Draenor\\MUS_60_ManDown_A3#61", "Draenor\\MUS_60_ManDown_C#83", "Draenor\\MUS_60_ManDown_H1#60", "Draenor\\MUS_60_Mystic_H#135", "Draenor\\MUS_60_PatiencePoint_A2#97", "Draenor\\MUS_60_PatiencePoint_B1#77", "Draenor\\MUS_60_ShadowmoonRising_H#155", "Draenor\\MUS_60_Shadowmoon_v1#129", "Draenor\\MUS_60_Shadowmoon_v2#127", "Draenor\\MUS_60_Shadowmoon_v3#123", "Draenor\\MUS_60_Shadowmoon_v4#62", "Draenor\\MUS_60_Shadowmoon_v5#95", "Draenor\\MUS_60_Tome_A#55", "Draenor\\MUS_60_Tome_H#56", "Draenor\\MUS_60_Voce_C#49", "Draenor\\MUS_60_Vows_B#119",})
			Zn("Draenor", "Spires of Arak"					, {	"|cffffd800Draenor: Spires of Arak", "Draenor\\MUS_60_Eagle_B#59", "Draenor\\MUS_60_Eagle_C#30", "Draenor\\MUS_60_EtherealEmbers_H#80", "Draenor\\MUS_60_MalevolentMystique_A#78", "Draenor\\MUS_60_MalevolentMystique_C#90", "Draenor\\MUS_60_MalevolentMystique_H#124", "Draenor\\MUS_60_NightSpires_v2#115", "Draenor\\MUS_60_NightSpires_v4#122", "Draenor\\MUS_60_Vows_D1#89",})
			Zn("Draenor", "Talador"							, {	"|cffffd800Draenor: Talador", "Draenor\\MUS_60_AHerosSacrifice_v2#102", "Draenor\\MUS_60_AHerosSacrifice_v5#67", "Draenor\\MUS_60_KhadgarsPlan_v2#128", "Draenor\\MUS_60_KhadgarsPlan_v4#114", "Draenor\\MUS_60_Sacrifice_B#89", "Draenor\\MUS_60_ShadowmoonPt1_A#111", "Draenor\\MUS_60_ShadowmoonPt1_H#139", "Draenor\\MUS_60_ShadowmoonSunsetReprise_H#46", "Draenor\\MUS_60_Tome_B#56", "Draenor\\MUS_60_Village_B#91", "Draenor\\MUS_60_Village_D#92", "Draenor\\MUS_60_Village_H#150",})
			Zn("Draenor", "Tanaan Jungle"					, {	"|cffffd800Draenor: Tanaan Jungle", "Draenor\\MUS_60_GrommashHellscream_v2A#48", "Draenor\\MUS_60_HerdingClans_H#132", "Draenor\\MUS_60_IronDawn_v2#97", "Draenor\\MUS_60_Mystic_D1#65",})

			-- Broken Isles
			Zn("Broken Isles", "|cffffd800Broken Isles", {""})
			Zn("Broken Isles", "Azsuna"						, {	"|cffffd800Broken Isles: Azsuna", "Legion\\MUS_70_WindsOutoftheEast_H#90", "Legion\\MUS_70_WindsOutoftheEast_A#96", "Legion\\MUS_70_Passage_H1#102", "Legion\\MUS_70_Passage_H2#85", "Legion\\MUS_70_Passage_A1#77", "Legion\\MUS_70_Passage_A2#110", "Legion\\MUS_70_Passage_B#75", "Legion\\MUS_70_Passage_C#79", "Legion\\MUS_70_Passage_D#184", "Legion\\MUS_70_SacredStone_A#120", "Legion\\MUS_70_SacredStone_B#113", "Legion\\MUS_70_SacredStone_H#124", "Legion\\MUS_70_LeyLines_A#70", "Legion\\MUS_70_LeyLines_B#70", "Legion\\MUS_70_LeyLines_C#65", "Legion\\MUS_70_LeyLines_H#93",})
			Zn("Broken Isles", "Broken Shore"				, {	"|cffffd800Broken Isles: Broken Shore", "Legion\\MUS_70_Tempest_A#146", "Legion\\MUS_70_Tempest_B#40", "Legion\\MUS_70_Tempest_B_Stinger_01#17", "Legion\\MUS_70_Tempest_C#77", "Legion\\MUS_70_Tempest_D#76", "Legion\\MUS_70_Tempest_E#16", "Legion\\MUS_70_Tempest_F#16", "Legion\\MUS_70_Tempest_G#25", "Legion\\MUS_70_Tempest_H1#75", "Legion\\MUS_70_Tempest_H2#78",})
			Zn("Broken Isles", "Dalaran"					, {	"|cffffd800Broken Isles: Dalaran", "Legion\\MUS_70_DalaranDawn_A#95", "Legion\\MUS_70_DalaranDawn_B#92", "Legion\\MUS_70_DalaranDawn_H#93", "Legion\\MUS_70_DalaranDusk_A#98", "Legion\\MUS_70_DalaranDusk_B#95", "Legion\\MUS_70_DalaranDusk_C#97", "Legion\\MUS_70_DalaranDusk_H#98", "Legion\\MUS_70_DalaranHalls1_A#134", "Legion\\MUS_70_DalaranHalls1_B#127", "Legion\\MUS_70_DalaranHalls1_C#132", "Legion\\MUS_70_DalaranHalls1_H#138", "Legion\\MUS_70_DalaranHalls2_A#110", "Legion\\MUS_70_DalaranHalls2_B#111", "Legion\\MUS_70_DalaranHalls2_H#111", "Legion\\MUS_70_DalaranJaina_A#102", "Legion\\MUS_70_DalaranJaina_B#115", "Legion\\MUS_70_DalaranJaina_C#65", "Legion\\MUS_70_DalaranJaina_H#66", "Legion\\MUS_70_DalaranKhadgar_Day_A#68", "Legion\\MUS_70_DalaranKhadgar_Day_B#50", "Legion\\MUS_70_DalaranKhadgar_Day_C#67", "Legion\\MUS_70_DalaranKhadgar_Day_H#68", "Legion\\MUS_70_DalaranKhadgar_Night_A#73", "Legion\\MUS_70_DalaranKhadgar_Night_B#78", "Legion\\MUS_70_DalaranKhadgar_Night_C#67", "Legion\\MUS_70_DalaranKhadgar_Night_H#74", "Legion\\MUS_70_DalaranSewers1_A#131", "Legion\\MUS_70_DalaranSewers1_B#95", "Legion\\MUS_70_DalaranSewers1_C#70", "Legion\\MUS_70_DalaranSewers1_H#131", "Legion\\MUS_70_DalaranSewers2_A#154", "Legion\\MUS_70_DalaranSewers2_B#129", "Legion\\MUS_70_DalaranSewers2_H#155",})
			Zn("Broken Isles", "Highmountain"				, {	"|cffffd800Broken Isles: Highmountain", "Legion\\MUS_70_HighMountain10_A#111", "Legion\\MUS_70_HighMountain10_B#111", "Legion\\MUS_70_HighMountain10_H#111", "Legion\\MUS_70_HighMountain1_A#84", "Legion\\MUS_70_HighMountain1_B#92", "Legion\\MUS_70_HighMountain1_H#92", "Legion\\MUS_70_HighMountain2_A#84", "Legion\\MUS_70_HighMountain2_B#84", "Legion\\MUS_70_HighMountain2_H#84", "Legion\\MUS_70_HighMountain3_A#66", "Legion\\MUS_70_HighMountain3_B#66", "Legion\\MUS_70_HighMountain3_H#66", "Legion\\MUS_70_HighMountain4_A#104", "Legion\\MUS_70_HighMountain4_B#105", "Legion\\MUS_70_HighMountain4_H#106", "Legion\\MUS_70_HighMountain5_A#62", "Legion\\MUS_70_HighMountain5_B#62", "Legion\\MUS_70_HighMountain5_H#63", "Legion\\MUS_70_HighMountain6_A#79", "Legion\\MUS_70_HighMountain6_B#81", "Legion\\MUS_70_HighMountain6_H#81", "Legion\\MUS_70_HighMountain7_A#43", "Legion\\MUS_70_HighMountain7_B#44", "Legion\\MUS_70_HighMountain7_H#43", "Legion\\MUS_70_HighMountain8_A#51", "Legion\\MUS_70_HighMountain8_B#52", "Legion\\MUS_70_HighMountain8_H#51", "Legion\\MUS_70_HighMountain9_A#38", "Legion\\MUS_70_HighMountain9_H#37",})
			Zn("Broken Isles", "Val'sharah"					, {	"|cffffd800Broken Isles: Val'sharah", "Legion\\MUS_70_EnrapturedWoodlands_A#124", "Legion\\MUS_70_EnrapturedWoodlands_B#102", "Legion\\MUS_70_EnrapturedWoodlands_C#93", "Legion\\MUS_70_EnrapturedWoodlands_H#124", "Legion\\MUS_70_EnchantedNightElves_A#100", "Legion\\MUS_70_EnchantedNightElves_B#101", "Legion\\MUS_70_EnchantedNightElves_C#101", "Legion\\MUS_70_EnchantedNightElves_H#101", "Legion\\MUS_70_NosSharah_A#76", "Legion\\MUS_70_NosSharah_B#63", "Legion\\MUS_70_NosSharah_C#46", "Legion\\MUS_70_NosSharah_D#127", "Legion\\MUS_70_NosSharah_E#76", "Legion\\MUS_70_NosSharah_H#127", "Legion\\MUS_70_EmeraldNightmareOrch_A#70", "Legion\\MUS_70_EmeraldNightmareOrch_B#63", "Legion\\MUS_70_EmeraldNightmareOrch_H#138", "Legion\\MUS_70_EmeraldNightmareSyn_A#112", "Legion\\MUS_70_EmeraldNightmareSyn_H#129", "Legion\\MUS_70_EmeraldNightmare_C#131", "Legion\\MUS_70_EmeraldNightmare_D#119", "Legion\\MUS_70_EmeraldNightmare_E#34", "Legion\\MUS_70_EmeraldNightmare_F#34", "Legion\\MUS_70_EmeraldNightmare_G#114", "Legion\\MUS_70_EmeraldNightmare_J#101", "Legion\\MUS_70_EmeraldNightmare_K#114", "Legion\\MUS_70_EmeraldNightmare_L#97", "Legion\\MUS_70_EmeraldNightmare_M#92",})
			Zn("Broken Isles", "Stormheim"					, {	"|cffffd800Broken Isles: Stormheim", "Legion\\MUS_70_Stormheim_H#198", "Legion\\MUS_70_HighMountain6_A#79", "Legion\\MUS_70_HighMountain6_B#81", "Legion\\MUS_70_HighMountain6_H#81", "Legion\\MUS_70_Stormheim_A#88", "Legion\\MUS_70_Stormheim_B1#77", "Legion\\MUS_70_Stormheim_B2#124", "Legion\\MUS_70_Stormheim_C#157", "ZoneMusic\\Utgarde Keep\\UK_QuietWalkUni02#109", "ZoneMusic\\BoreanTundra\\BO_Riplash_Night02#79", "ZoneMusic\\BoreanTundra\\BO_Riplash_Day03#76", "Legion\\MUS_70_HolyWarriorsOath_E#132", "Legion\\MUS_70_HolyWarriorsGather_A#61", "Legion\\MUS_70_HolyWarriorsOath_H#132", "Legion\\MUS_70_HolyWarriorsGather_B#137", "Legion\\MUS_70_Preserver_H1#91", "Legion\\MUS_70_HighMountain5_A#62", "Legion\\MUS_70_HighMountain5_B#62", "Legion\\MUS_70_Stormheim_D#42", "Legion\\MUS_70_Stormheim_E#55", "Legion\\MUS_70_Stormheim_F#65", "Legion\\MUS_70_Stormheim_G#66",})
			Zn("Broken Isles", "Suramar"					, {	"|cffffd800Broken Isles: Suramar", "Legion\\MUS_70_EnchantedNightElves_A#100", "Legion\\MUS_70_EnchantedNightElves_B#101", "Legion\\MUS_70_EnchantedNightElves_C#101", "Legion\\MUS_70_EnchantedNightElves_H#101", "Legion\\MUS_70_RequiemfortheLostCities_G#82", "Legion\\MUS_70_RequiemfortheLostCities_H1#92", "Legion\\MUS_70_NosSharah_C#46", "Legion\\MUS_70_NosSharah_D#127", "Legion\\MUS_70_FelGlade_B#82", "Legion\\MUS_70_SacredStone_A#120", "Legion\\MUS_70_SacredStone_B#113", "Legion\\MUS_70_SacredStone_H#124", "Legion\\MUS_70_HighElfTomb_A#69", "Legion\\MUS_70_HighElfTomb_H1#101", "Legion\\MUS_70_HighElfTomb_H2#112", "Cataclysm\\MUS_BarrowDens_GU02#50", "Cataclysm\\MUS_BarrowDens_GU03#66", "Legion\\MUS_70_Suramar_Pt1_A#69", "Legion\\MUS_70_Suramar_Pt1_B#59", "Legion\\MUS_70_Suramar_Pt1_H#70", "Legion\\MUS_70_Suramar_pt2_A#64", "Legion\\MUS_70_Suramar_pt2_B#95", "Legion\\MUS_70_Suramar_Pt2_H#101", "Legion\\MUS_70_Passage_B#75", "Legion\\MUS_70_FelGlade_B#82", "Legion\\MUS_70_FelGlade_C#100", "ZoneMusic\\BlackTemple\\BT_SanctuaryWalkUni04#65", "Legion\\MUS_70_DemonHunterPt2_B1#83", "ZoneMusic\\BlackTemple\\BT_ReliquaryWalkUni04#64", "Legion\\MUS_70_MenaceoftheDarkTitans_H2#66",})

			-- Various
			Zn("Various", "|cffffd800Various", {""})
			Zn("Various", "World of Warcraft"				, {	"|cffffd800Various: World of Warcraft", "GlueScreenMusic\\wow_main_theme#161", "GlueScreenMusic\\BC_main_theme#227", "GlueScreenMusic\\WotLK_main_title#544", "Cataclysm\\MUS_Shattering_UU01#726", "Pandaria\\MUS_50_HeartofPandaria_01#480", "Draenor\\MUS_60_ASiegeofWorlds_MainTitle#727", "Legion\\MUS_70_Kingdomswillburn_MainTitle#650", "Musical Moments\\haunted\\haunted01#62", "GlueScreenMusic\\BCCredits_Lament_of_the_Highborne#171",})

			-- Show relevant list items
			local function UpdateList()
				FauxScrollFrame_Update(scrollFrame, #ListData, numButtons, 16)
				for index = 1, numButtons do
					local offset = index + FauxScrollFrame_GetOffset(scrollFrame)
					local button = scrollFrame.buttons[index]
					button.index = offset
					if offset <= #ListData then
						-- Show zone listing or track listing
						button:SetText(ListData[offset].zone or ListData[offset])
						-- Set width of highlight texture
						if button:GetTextWidth() > 390 then
							button.t:SetSize(390, 16)
						else
							button.t:SetSize(button:GetTextWidth(), 16)
						end
						-- Show the button
						button:Show()
						-- Hide highlight bar texture by default
						button.s:Hide()
						-- Hide highlight bar if the button is a heading
						if strfind(button:GetText(), "|c") then button.t:Hide() end
						-- Show last played track highlight bar texture 
						if LastPlayed == button:GetText() then
							local HeadingOfCurrentFolder = ListData[1]
							if HeadingOfCurrentFolder == HeadingOfClickedTrack then
								button.s:Show()
							end
						end
						-- Show last played folder highlight bar texture
						if LastFolder == button:GetText() then
							button.s:Show()
						end
						-- Set width of highlight bar
						if button:GetTextWidth() > 390 then
							button.s:SetSize(390, 16)
						else
							button.s:SetSize(button:GetTextWidth(), 16)
						end
						-- Limit click to label width
						button:SetHitRectInsets(0, 454 - button:GetFontString():GetStringWidth() or 0, 0, 0)
						-- Disable label click movement
						button:SetPushedTextOffset(0, 0)
						-- Disable word wrap and set width
						button:GetFontString():SetWidth(390)
						button:GetFontString():SetWordWrap(false)
					else
						button:Hide()
					end
				end
			end

			-- Give function file level scope (it's used in SetPlusScale)
			LeaPlusLC.UpdateList = UpdateList

			-- Function to return to the zone list for the current tracklist continent
			local function BackClickFunc()
				if type(ListData[1]) == "string" then
					-- Strip the color code from the list data
					local nocol = string.gsub(ListData[1], "|cffffd800", "")
					-- Strip the zone
					local backzone = strsplit(":", nocol, 2)
					-- Show the tracklist continent 
					if ZoneList[backzone] then ListData = ZoneList[backzone] end
					UpdateList()
					scrollFrame:SetVerticalScroll(ZonePage or 0)
				end
			end

			-- Create music player frame
			local frame = CreateFrame("Frame", nil, UIParent)

			-- Make it a system frame
			_G["LeaPlusGlobalPanel_MusicPlayer"] = frame
			table.insert(UISpecialFrames, "LeaPlusGlobalPanel_MusicPlayer")

			-- Set frame parameters
			LeaPlusLC["MusicPlayer"] = frame
			frame:SetSize(570, 370)
			frame:Hide()
			frame:SetFrameStrata("FULLSCREEN_DIALOG")
			frame:SetClampedToScreen(false)
			frame:EnableMouse(true)
			frame:SetMovable(true)
			frame:RegisterForDrag("LeftButton")
			frame:SetScript("OnDragStart", frame.StartMoving)
			frame:SetScript("OnDragStop", function()
				frame:StopMovingOrSizing()
				frame:SetUserPlaced(false)
				-- Save panel position
				LeaPlusLC["MainPanelA"], void, LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"] = frame:GetPoint()
			end)

			-- Add right-click to show zone list
			frame:SetScript("OnMouseDown", function(self, btn)
				if btn == "RightButton" then
					BackClickFunc()
				end
			end)

			-- Add background color
			frame.t = frame:CreateTexture(nil, "BACKGROUND")
			frame.t:SetAllPoints()
			frame.t:SetColorTexture(0.05, 0.05, 0.05, 0.9)

			-- Add textures
			LeaPlusLC:CreateBar("MusicFootTexture", frame, 570, 48, "BOTTOM", 0.5, 0.5, 0.5, 1.0, "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")
			LeaPlusLC:CreateBar("MusicMainTexture", frame, 440, 323, "TOPRIGHT", 0.7, 0.7, 0.7, 0.7,  "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")
			LeaPlusLC:CreateBar("MusicMenuTexture", frame, 130, 323, "TOPLEFT", 0.7, 0.7, 0.7, 0.7, "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")

			-- Set panel position when shown
			frame:HookScript("OnShow", function() 
				LeaPlusLC:HideConfigPanels()
				LeaPlusLC["PageF"]:Hide()
				frame:ClearAllPoints()
				frame:SetPoint(LeaPlusLC["MainPanelA"], UIParent, LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"])
			end)

			-- Hide music player when Leatrix Plus is shown
			LeaPlusLC["PageF"]:HookScript("OnShow", function() frame:Hide() end)

			-- Add title and description
			local TitleText = frame:CreateFontString(nil, 'ARTWORK', 'GameFontNormalSmall')
			TitleText:SetPoint("BOTTOMLEFT", 16, 24)
			TitleText:SetText(LeaPlusLC:Translate("Music player for Leatrix Plus"))

			local FooterText = frame:CreateFontString(nil, 'ARTWORK', 'GameFontHighlightSmall')
			FooterText:SetPoint("BOTTOMLEFT", 16, 12)
			FooterText:SetText(LeaPlusLC:Translate("Right-click anywhere to return to the zone list."))

			-- Add close Button
			local CloseB = CreateFrame("Button", nil, frame, "UIPanelCloseButton") 
			CloseB:SetSize(30, 30)
			CloseB:SetPoint("TOPRIGHT", 0, 0)
			CloseB:SetScript("OnClick", function() frame:Hide() end) 

			-- Function to make navigation menu buttons
			local function MakeButton(where, y)
				local mbtn = CreateFrame("Button", nil, frame)
				mbtn:Show()
				mbtn:SetSize(150, 16)
				mbtn:SetAlpha(1.0)
				mbtn:SetPoint("TOPLEFT", 16, y)

				-- Create hover texture
				mbtn.t = mbtn:CreateTexture(nil, "BACKGROUND")
				mbtn.t:SetColorTexture(0.3, 0.3, 0.00, 0.8)
				mbtn.t:SetAlpha(0.7)
				mbtn.t:ClearAllPoints()
				mbtn.t:SetPoint("TOPLEFT", mbtn, "TOPLEFT", -10, 0)
				mbtn.t:SetSize(124, 16)
				mbtn.t:Hide()

				-- Create highlight texture
				mbtn.s = mbtn:CreateTexture(nil, "BACKGROUND")
				mbtn.s:SetColorTexture(0.3, 0.3, 0.00, 0.8)
				mbtn.s:SetAlpha(1.0)
				mbtn.s:ClearAllPoints()
				mbtn.s:SetPoint("TOPLEFT", mbtn, "TOPLEFT", -10, 0)
				mbtn.s:SetSize(124, 16)
				mbtn.s:Hide()

				-- Create fontstring
				mbtn.f = mbtn:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
				mbtn.f:SetPoint('LEFT', 0, 0)
				mbtn.f:SetText(LeaPlusLC:Translate(where))

				mbtn:SetScript("OnEnter", function()
					mbtn.t:Show()
				end)

				mbtn:SetScript("OnLeave", function()
					mbtn.t:Hide()
				end)

				mbtn:SetScript("OnClick", function()
					-- Show zone listing for clicked item
					ListData = ZoneList[where]
					UpdateList()
				end)

				mbtn:SetScript("OnMouseDown", function(self, btn)
					if btn == "RightButton" then
						BackClickFunc()
					end
				end)

				-- Limit click to label width
				mbtn:SetHitRectInsets(0, 32, 0, 0)

				return mbtn, mbtn.s

			end

			-- Create a table for each button
			local conbtn = {}
			for q, w in pairs(ZoneList) do
				conbtn[q] = {}
			end

			conbtn["Eastern Kingdoms"], conbtn["Eastern Kingdoms"].s = MakeButton("Eastern Kingdoms", -8)
			conbtn["Kalimdor"], conbtn["Kalimdor"].s = MakeButton("Kalimdor", -24)
			conbtn["Outland"], conbtn["Outland"].s = MakeButton("Outland", -40)
			conbtn["Northrend"], conbtn["Northrend"].s = MakeButton("Northrend", -56)
			conbtn["Maelstrom"], conbtn["Maelstrom"].s = MakeButton("Maelstrom", -72)
			conbtn["Pandaria"], conbtn["Pandaria"].s = MakeButton("Pandaria", -88)
			conbtn["Draenor"], conbtn["Draenor"].s = MakeButton("Draenor", -104)
			conbtn["Broken Isles"], conbtn["Broken Isles"].s = MakeButton("Broken Isles", -120)
			conbtn["Various"], conbtn["Various"].s = MakeButton("Various", -136)

			-- Show button highlight for clicked button
			for q, w in pairs(ZoneList) do
				if type(w) == "string" and conbtn[w] then
					conbtn[w]:HookScript("OnClick", function()
						-- Hide all button highlights
						for k, v in pairs(ZoneList) do
							if type(v) == "string" and conbtn[v] then
								conbtn[v].s:Hide()
							end
						end
						-- Show clicked button highlight
						conbtn[w].s:Show()
						LeaPlusDB["MusicContinent"] = w
					end)
				end
			end

			-- Create scroll bar
			scrollFrame = CreateFrame("ScrollFrame", "LeaPlusScrollFrame", frame, "FauxScrollFrameTemplate")
			scrollFrame:SetPoint("TOPLEFT", 0, -32)
			scrollFrame:SetPoint("BOTTOMRIGHT", -30, 50)
			scrollFrame:SetScript("OnVerticalScroll", function(self, offset)
				FauxScrollFrame_OnVerticalScroll(self, offset, 16, UpdateList)
			end)

			-- Add stop button
			local stopBtn = LeaPlusLC:CreateButton("StopMusicBtn", frame, "Stop player", "BOTTOMRIGHT", -16, 10, 0, 25, true, "")
			stopBtn:Hide(); stopBtn:Show()
			LeaPlusLC:LockItem(stopBtn, true)
			stopBtn:SetScript("OnClick", function()
				if musicHandle then
					StopSound(musicHandle)
					musicHandle = nil
					-- Hide highlight bars
					LastPlayed = ""
					LastFolder = ""
					UpdateList()
				end
				-- Lock button and cancel update script
				LeaPlusLC:LockItem(stopBtn, true)
				uframe:SetScript("OnUpdate", nil)
			end)

			-- Update function to play tracks sequentially
			local currentTime = GetTime()
			local tracknumber = 1
			local countTime = -1

			-- Function to play a track and show the static highlight bar
			local function PlayTrack()
				-- Play tracks
				if musicHandle then StopSound(musicHandle) end
				local file, void = playlist[tracknumber]:match("([^,]+)%#([^,]+)")
				willPlay, musicHandle = PlaySoundFile("Sound\\Music\\" .. file .. ".mp3")
				LastPlayed = playlist[tracknumber]
				tracknumber = tracknumber + 1
				-- Show static highlight bar
				for index = 1, numButtons do
					local button = scrollFrame.buttons[index]
					local item = button:GetText()
					if item then
						local item, void = item:match("([^,]+)%#([^,]+)")
						if item then
							if strfind(item, "\\") then
								if item == file and LastFolder == TempFolder then
									button.s:Show()
								else
									button.s:Hide()
								end
							end
						end
					end
				end
			end

			-- Update script to play tracks in order and show correct highlight bar
			local function upScript(self, elapsed)
				if countTime > 2 then
					-- Play subsequent tracks
					local trackTime = timelist[tracknumber]
					if not trackTime then
						-- End of the playlist so reset counters
						currentTime = GetTime()
						tracknumber = 1
						countTime = -1
					elseif GetTime() - currentTime > trackTime then
						if tracknumber == #playlist then
							-- End of playlist so reset counters
							currentTime = GetTime()
							tracknumber = 1
							countTime = -1
						else
							-- Play track
							PlayTrack()
						end
					end
					countTime = 0
				end
				countTime = countTime + elapsed
			end

			-- Create list items
			scrollFrame.buttons = {}
			for i = 1, numButtons do
				scrollFrame.buttons[i] = CreateFrame("Button", nil, frame)
				local button = scrollFrame.buttons[i]

				button:SetSize(470 - 14, 16)
				button:SetNormalFontObject("GameFontHighlightLeft")
				button:SetPoint("TOPLEFT", 146, -(i - 1) * 16 - 8)

				-- Create highlight bar texture
				button.t = button:CreateTexture(nil, "BACKGROUND")
				button.t:SetPoint("TOPLEFT", button, 0, 0)
				button.t:SetSize(516, 16)

				button.t:SetColorTexture(0.3, 0.3, 0.0, 0.8)
				button.t:SetAlpha(0.7)
				button.t:Hide()

				-- Create last playing highlight bar texture
				button.s = button:CreateTexture(nil, "BACKGROUND")
				button.s:SetPoint("TOPLEFT", button, 0, 0)
				button.s:SetSize(516, 16)

				button.s:SetColorTexture(0.3, 0.4, 0.00, 0.6)
				button.s:Hide()

				button:SetScript("OnEnter", function()
					-- Highlight links only
					if not string.match(button:GetText() or "", "|c") then
						button.t:Show()
					end
				end)

				button:SetScript("OnLeave", function()
					button.t:Hide()
				end)

				-- Click handler
				button:SetScript("OnMouseDown", function(self, btn)
					if btn == "LeftButton" then
						-- Get clicked track text
						local item = self:GetText()
						-- Do nothing if its a blank line or heading
						if not item or strfind(item, "|c") then return end
						if strfind(item, "\\") then
							-- Enable sound if required
							if GetCVar("Sound_EnableSFX") == "0" then SetCVar("Sound_EnableSFX", "1") end
							if GetCVar("Sound_EnableAllSound") == "0" then SetCVar("Sound_EnableAllSound", "1") end
							-- Disable music if it's currently enabled
							if GetCVar("Sound_EnableMusic") == "1" then	SetCVar("Sound_EnableMusic", "0") end
							-- Add all tracks to playlist
							wipe(playlist)
							local StartItem = 0
							-- Get item clicked row number
							for index = 1, #ListData do
								local item = ListData[index]
								if self:GetText() == item then StartItem = index end
							end
							-- Add all items from clicked item onwards to playlist
							for index = StartItem, #ListData do
								local item = ListData[index]
								if item and strfind(item, "\\") then 
									tinsert(playlist, item)
								end
							end
							-- Add all items up to clicked item to playlist
							for index = 1, StartItem do
								local item = ListData[index]
								if item and strfind(item, "\\") then 
									tinsert(playlist, item)
								end
							end
							-- Erase table for track times
							wipe(timelist)
							-- Traverse playlist, work out track time and queue track
							for k, v in ipairs(playlist) do
								-- Get filename
								local file, void = v:match("([^,]+)%#([^,]+)")
								-- Work out track time by adding preceding track times together
								local realtime = 0
								for q = 2, k  do
									local void, length = playlist[q - 1]:match("([^,]+)%#([^,]+)")
									realtime = realtime + length
								end
								-- Create table with track times
								tinsert(timelist, realtime)
								-- Enable the stop button
								LeaPlusLC:LockItem(stopBtn, false)
							end
							-- Play the tracks
							currentTime = GetTime()
							tracknumber = 1
							countTime = -1
							LastPlayed = item
							LastFolder = TempFolder
							HeadingOfClickedTrack = ListData[1]
							-- Play first track
							PlayTrack()
							-- Play subsequent tracks
							uframe:SetScript("OnUpdate", upScript)
						else
							-- A zone was clicked so show track listing
							ZonePage = scrollFrame:GetVerticalScroll()
							-- Find the track listing for the clicked zone
							for q, w in pairs(ZoneList) do
								for k, v in pairs(ZoneList[w]) do
									if item == v.zone then
										-- Show track listing
										TempFolder = item
										LeaPlusDB["MusicZone"] = item
										ListData = v.tracks
										UpdateList()
										-- Hide hover highlight if track under pointer is a heading
										if strfind(scrollFrame.buttons[i]:GetText(), "|c") then
											scrollFrame.buttons[i].t:Hide()
										end
										-- Show top of track list
										scrollFrame:SetVerticalScroll(0)
										return
									end
								end	

							end
						end
					elseif btn == "RightButton" then
						BackClickFunc()
					end
				end)

			end

			-- Delete the global scroll frame pointer
			_G.LeaPlusScrollFrame = nil

			-- Set zone listing on startup
			if LeaPlusDB["MusicContinent"] and LeaPlusDB["MusicContinent"] ~= "" then
				-- Saved music continent exists
				if conbtn[LeaPlusDB["MusicContinent"]] then
					-- Saved continent is valid button so click it
					conbtn[LeaPlusDB["MusicContinent"]]:Click()
				else
					-- Saved continent is not valid button so click default button
					conbtn["Eastern Kingdoms"]:Click()
				end
			else
				-- Saved music continent does not exist so click default button
				conbtn["Eastern Kingdoms"]:Click()
			end
			UpdateList()

			-- Stop track at reload or logout
			frame:RegisterEvent("PLAYER_LOGOUT")
			frame:SetScript("OnEvent", function()
				if musicHandle then
					StopSound(musicHandle)
				end
			end)

		end

		-- Run on startup
		LeaPlusLC:MusicFunc()

		-- Release memory
		LeaPlusLC.MusicFunc = nil

		----------------------------------------------------------------------
		-- Panel alpha
		----------------------------------------------------------------------

		-- Function to set panel alpha
		local function SetPlusAlpha()
			-- Set panel alpha
			LeaPlusLC["PageF"].t:SetAlpha(1 - LeaPlusLC["PlusPanelAlpha"])
			LeaPlusLC["MusicPlayer"].t:SetAlpha(1 - LeaPlusLC["PlusPanelAlpha"])
			-- Show formatted value
			LeaPlusCB["PlusPanelAlpha"].f:SetFormattedText("%.0f%%", LeaPlusLC["PlusPanelAlpha"] * 100)
		end

		-- Set alpha on startup
		SetPlusAlpha()

		-- Set alpha after changing slider
		LeaPlusCB["PlusPanelAlpha"]:HookScript("OnValueChanged", SetPlusAlpha)

		----------------------------------------------------------------------
		-- Panel scale
		----------------------------------------------------------------------

		-- Function to set panel scale
		local function SetPlusScale()
			-- Reset panel position
			LeaPlusLC["MainPanelA"], LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"] = "CENTER", "CENTER", 0, 0
			if LeaPlusLC["PageF"]:IsShown() then 
				LeaPlusLC["PageF"]:Hide()
				LeaPlusLC["PageF"]:Show()
			end
			if LeaPlusLC["MusicPlayer"]:IsShown() then
				LeaPlusLC["MusicPlayer"]:Hide()
				LeaPlusLC["MusicPlayer"]:Show()
			end
			-- Set panel scale
			LeaPlusLC["PageF"]:SetScale(LeaPlusLC["PlusPanelScale"])
			LeaPlusLC["MusicPlayer"]:SetScale(LeaPlusLC["PlusPanelScale"])
			-- Update music player highlight bar scale
			LeaPlusLC:UpdateList()
		end

		-- Set scale on startup
		LeaPlusLC["PageF"]:SetScale(LeaPlusLC["PlusPanelScale"])
		LeaPlusLC["MusicPlayer"]:SetScale(LeaPlusLC["PlusPanelScale"])

		-- Set scale and reset panel position after changing slider
		LeaPlusCB["PlusPanelScale"]:HookScript("OnMouseUp", SetPlusScale)
		LeaPlusCB["PlusPanelScale"]:HookScript("OnMouseWheel", SetPlusScale)

		-- Show formatted slider value
		LeaPlusCB["PlusPanelScale"]:HookScript("OnValueChanged", function()
			LeaPlusCB["PlusPanelScale"].f:SetFormattedText("%.0f%%", LeaPlusLC["PlusPanelScale"] * 100)
		end)

		----------------------------------------------------------------------
		-- Options panel
		----------------------------------------------------------------------

		-- Hide Leatrix Plus if game options panel is shown
		InterfaceOptionsFrame:HookScript("OnShow", LeaPlusLC.HideFrames);
		VideoOptionsFrame:HookScript("OnShow", LeaPlusLC.HideFrames);

		----------------------------------------------------------------------
		-- Block friend requests
		----------------------------------------------------------------------

		-- Hide toast frame for friend requests
		hooksecurefunc("BNToastFrame_Show", function()
			if LeaPlusLC["NoFriendRequests"] == "On" then
				if BNToastFrame.toastType == 4 or BNToastFrame.toastType == 5 then
					BNToastFrame_Close()
				end
			end
		end)

		-- Function to decline friend requests
		local function DeclineReqs()
			if LeaPlusLC["NoFriendRequests"] == "On" then
				for i = BNGetNumFriendInvites(), 1, -1 do
					local id, player = BNGetFriendInviteInfo(i)
					if id and player then
						BNDeclineFriendInvite(id)
						C_Timer.After(0.1, function()
							LeaPlusLC:Print(LeaPlusLC:Translate("A friend request from") .. " " .. player .. " " .. LeaPlusLC:Translate("was automatically declined."))
						end)
					end
				end
			end
		end

		-- Event frame for incoming friend requests
		local DecEvt = CreateFrame("FRAME")
		DecEvt:SetScript("OnEvent", DeclineReqs)

		-- Function to register or unregister the event
		local function ControlEvent()
			if LeaPlusLC["NoFriendRequests"] == "On" then
				DecEvt:RegisterEvent("BN_FRIEND_INVITE_ADDED")
				DeclineReqs()
			else
				DecEvt:UnregisterEvent("BN_FRIEND_INVITE_ADDED")
			end
		end

		-- Set event status when option is enabled
		LeaPlusCB["NoFriendRequests"]:HookScript("OnClick", ControlEvent)

		-- Set event status on startup
		ControlEvent()

		----------------------------------------------------------------------
		-- Accept resurrection configuration panel
		----------------------------------------------------------------------

		local ResPanel = LeaPlusLC:CreatePanel("Accept Resurrection", "ResPanel")
		LeaPlusLC:MakeTx(ResPanel, "Settings", 16, -72)
		LeaPlusLC:MakeCB(ResPanel, "ResThankYouEmote", "Thank the player who resurrected you", 16, -92, false, "If checked, your character will emote a thank you when a resurrection is automatically accepted.")
		LeaPlusLC:MakeCB(ResPanel, "NoAutoResInCombat", "Exclude combat resurrection requests", 16, -112, false, "If checked, resurrection requests will not be automatically accepted if the player resurrecting you is in combat.")

		-- Help button tooltip
		ResPanel.h.tiptext = LeaPlusLC:Translate("Select the settings that you want to use.")

		-- Back button handler
		ResPanel.b:SetScript("OnClick", function() 
			ResPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page1"]:Show();
			return
		end) 

		-- Reset button handler
		ResPanel.r:SetScript("OnClick", function()
			-- Reset checkboxes
			LeaPlusLC["ResThankYouEmote"] = "On"
			LeaPlusLC["NoAutoResInCombat"] = "Off"
			-- Refresh configuration panel
			ResPanel:Hide(); ResPanel:Show();
		end)

		-- Configuration button handler
		LeaPlusCB["AutoResBtn"]:SetScript("OnClick", function()
			if IsShiftKeyDown() and IsControlKeyDown() then
				-- Preset profile
				LeaPlusLC["ResThankYouEmote"] = "On"
				LeaPlusLC["NoAutoResInCombat"] = "Off"
			else
				-- Show configuration panel
				ResPanel:Show();
				LeaPlusLC:HideFrames();
			end
		end);

		----------------------------------------------------------------------
		-- Release in PvP configuration panel
		----------------------------------------------------------------------

		-- Create configuration panel
		local ReleasePanel = LeaPlusLC:CreatePanel("Release in PvP", "ReleasePanel")

		-- Add checkboxes
		LeaPlusLC:MakeTx(ReleasePanel, "Settings", 16, -72)
		LeaPlusLC:MakeCB(ReleasePanel, "AutoRelBGs", "Battlegrounds", 16, -92, false, "If checked, you will release automatically after you die in a battleground.")
		LeaPlusLC:MakeCB(ReleasePanel, "AutoRelWintergrasp", "Wintergrasp", 16, -112, false, "If checked, you will release automatically after you die in Wintergrasp.")
		LeaPlusLC:MakeCB(ReleasePanel, "AutoRelTolBarad", "Tol Barad (the PvP zone)", 16, -132, false, "If checked, you will release automatically after you die in Tol Barad (the PvP zone).")
		LeaPlusLC:MakeCB(ReleasePanel, "AutoRelAshran", "Ashran", 16, -152, false, "If checked, you will release automatically after you die in Ashran.")

		-- Help button tooltip
		ReleasePanel.h.tiptext = LeaPlusLC:Translate("Select the zones where automatic release should operate.")

		-- Back button handler
		ReleasePanel.b:SetScript("OnClick", function() 
			ReleasePanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page1"]:Show();
			return
		end) 

		-- Reset button handler
		ReleasePanel.r:SetScript("OnClick", function()
			-- Reset checkboxes
			LeaPlusLC["AutoRelBGs"] = "On"
			LeaPlusLC["AutoRelWintergrasp"] = "On"
			LeaPlusLC["AutoRelTolBarad"] = "On";
			LeaPlusLC["AutoRelAshran"] = "On";
			-- Refresh configuration panel
			ReleasePanel:Hide(); ReleasePanel:Show();
		end)

		-- Configuration button handler
		LeaPlusCB["AutoReleaseBtn"]:SetScript("OnClick", function()
			if IsShiftKeyDown() and IsControlKeyDown() then
				-- Preset profile
				LeaPlusLC["AutoRelBGs"] = "On"
				LeaPlusLC["AutoRelWintergrasp"] = "On"
				LeaPlusLC["AutoRelTolBarad"] = "On";
				LeaPlusLC["AutoRelAshran"] = "On";
			else
				-- Show configuration panel
				ReleasePanel:Show();
				LeaPlusLC:HideFrames();
			end
		end);

		----------------------------------------------------------------------
		-- Invite from whisper configuration panel
		----------------------------------------------------------------------

		-- Create configuration panel
		local InvPanel = LeaPlusLC:CreatePanel("Invite from Whispers", "InvPanel")

		-- Add editbox
		LeaPlusLC:MakeTx(InvPanel, "Whisper keyword", 16, -72)
		local KeyBox = LeaPlusLC:CreateEditBox("KeyBox", InvPanel, 140, 10, "TOPLEFT", 20, -92, "KeyBox", "KeyBox");

		-- Function to save the keyword
		local function SetInvKey()
			local keytext = KeyBox:GetText()
			if keytext and keytext ~= "" then
				LeaPlusLC["InvKey"] = KeyBox:GetText()
			else
				LeaPlusLC["InvKey"] = "plus"
			end
		end

		-- Save the keyword when it changes
		KeyBox:SetScript("OnTextChanged", SetInvKey)

		-- Help button tooltip
		InvPanel.h.tiptext = LeaPlusLC:Translate("Enter the keyword that you want to use.")

		-- Back button handler
		InvPanel.b:SetScript("OnClick", function()
			-- Save the keyword
			SetInvKey()
			-- Show the options panel
			InvPanel:Hide(); LeaPlusLC["PageF"]:Show(); LeaPlusLC["Page2"]:Show();
			return
		end) 

		-- Add reset button
		InvPanel.r:SetScript("OnClick", function()
			-- Reset the keyword to default
			LeaPlusLC["InvKey"] = "plus"
			-- Set the editbox to default
			KeyBox:SetText("plus")
			-- Save the keyword
			SetInvKey();
			-- Refresh panel
			InvPanel:Hide(); InvPanel:Show();
		end)

		-- Ensure keyword is a string on startup
		LeaPlusLC["InvKey"] = tostring(LeaPlusLC["InvKey"]) or "plus"

		-- Set editbox value when shown
		KeyBox:HookScript("OnShow", function()
			KeyBox:SetText(LeaPlusLC["InvKey"])
		end)

		-- Configuration button handler
		LeaPlusCB["InvWhisperBtn"]:SetScript("OnClick", function()
			if IsShiftKeyDown() and IsControlKeyDown() then
				-- Preset profile
				LeaPlusLC["InvKey"] = "plus"
				KeyBox:SetText(LeaPlusLC["InvKey"]);
				SetInvKey();
			else
				-- Show panel
				InvPanel:Show()
				LeaPlusLC:HideFrames();
			end
		end)

		----------------------------------------------------------------------
		-- Final code for RunOnce
		----------------------------------------------------------------------

		-- Update addon memory usage (speeds up initial value)
		UpdateAddOnMemoryUsage();

		-- Release memory
		LeaPlusLC.RunOnce = nil

	end

----------------------------------------------------------------------
-- 	L70: Default events
----------------------------------------------------------------------

	local function eventHandler(self, event, arg1, arg2, ...)

		----------------------------------------------------------------------
		-- Invite from whisper
		----------------------------------------------------------------------

		if event == "CHAT_MSG_WHISPER" or event == "CHAT_MSG_BN_WHISPER" then
			if (not UnitExists("party1") or UnitIsGroupLeader("player")) and strlower(arg1) == strlower(LeaPlusLC["InvKey"]) then
				if not LeaPlusLC:IsInLFGQueue() then
					if event == "CHAT_MSG_WHISPER" then
						InviteUnit(arg2)
					elseif event == "CHAT_MSG_BN_WHISPER" then
						local presenceID = select(11, ...)
						if presenceID and BNIsFriend(presenceID) then
							local index = BNGetFriendIndex(presenceID);
							if index then
								local presenceID, presenceName, battleTag, isBattleTagPresence, toonName, toonID = BNGetFriendInfo(index);
								if toonID then
									BNInviteFriend(toonID);
								end
							end
						end
					end
				end
			end
			return
		end

		----------------------------------------------------------------------
		-- Block duel requests
		----------------------------------------------------------------------

		if event == "DUEL_REQUESTED" and not LeaPlusLC:FriendCheck(arg1) then
			CancelDuel();
			StaticPopup_Hide("DUEL_REQUESTED");
			return
		end

		----------------------------------------------------------------------
		-- Block pet battle duel requests
		----------------------------------------------------------------------

		if event == "PET_BATTLE_PVP_DUEL_REQUESTED" and not LeaPlusLC:FriendCheck(arg1) then
			C_PetBattles.CancelPVPDuel()
			return
		end

		----------------------------------------------------------------------
		-- Automatically accept resurrection requests
		----------------------------------------------------------------------

		if event == "RESURRECT_REQUEST" then
			if ((UnitAffectingCombat(arg1)) and LeaPlusLC["NoAutoResInCombat"] == "Off") or not (UnitAffectingCombat(arg1)) then
				AcceptResurrect()
				StaticPopup_Hide("RESURRECT_NO_TIMER")
				if LeaPlusLC["ResThankYouEmote"] == "On" then
					C_Timer.After(1, function()
						if not UnitIsDeadOrGhost("player") then
							DoEmote("thank", arg1)
						end
					end)
				end
			end
			return
		end

		----------------------------------------------------------------------
		-- Accept summon
		----------------------------------------------------------------------

		if event == "CONFIRM_SUMMON" then
			if not UnitAffectingCombat("player") then
				ConfirmSummon()
				StaticPopup_Hide("CONFIRM_SUMMON")
			end
			return
		end

		----------------------------------------------------------------------
		-- Block party invites
		----------------------------------------------------------------------

		if event == "PARTY_INVITE_REQUEST" then

			-- If a friend, accept if you're accepting friends and not in Dungeon Finder
			if (LeaPlusLC["AcceptPartyFriends"] == "On" and LeaPlusLC:FriendCheck(arg1)) then
				if not LeaPlusLC:IsInLFGQueue() then
					AcceptGroup();
					for i=1, STATICPOPUP_NUMDIALOGS do
						if _G["StaticPopup"..i].which == "PARTY_INVITE" then
							_G["StaticPopup"..i].inviteAccepted = 1
							StaticPopup_Hide("PARTY_INVITE");
							break
						elseif _G["StaticPopup"..i].which == "PARTY_INVITE_XREALM" then
							_G["StaticPopup"..i].inviteAccepted = 1
							StaticPopup_Hide("PARTY_INVITE_XREALM");
							break
						end
					end
					return
				end
			end

			-- If not a friend and you're blocking invites, decline
			if LeaPlusLC["NoPartyInvites"] == "On" then
				if LeaPlusLC:FriendCheck(arg1) then
					return
				else
					DeclineGroup();
					StaticPopup_Hide("PARTY_INVITE");
					StaticPopup_Hide("PARTY_INVITE_XREALM");
					return
				end
			end

			return
		end

		----------------------------------------------------------------------
		-- Disable loot warnings
		----------------------------------------------------------------------

		-- Disable warnings for attempting to roll Need or Disenchant on loot
		if event == "CONFIRM_LOOT_ROLL" or event == "CONFIRM_DISENCHANT_ROLL" then
			ConfirmLootRoll(arg1, arg2)
			StaticPopup_Hide("CONFIRM_LOOT_ROLL")
			return
		end

		-- Disable warning for attempting to loot a Bind on Pickup item
		if event == "LOOT_BIND_CONFIRM" then
			ConfirmLootSlot(arg1, arg2)
			StaticPopup_Hide("LOOT_BIND",...)
			return
		end

		-- Disable warning for attempting to vendor an item within its refund window
		if event == "MERCHANT_CONFIRM_TRADE_TIMER_REMOVAL" then
			SellCursorItem()
			return
		end

		-- Disable warning for attempting to mail an item within its refund window
		if event == "MAIL_LOCK_SEND_ITEMS" then
			RespondMailLockSendItem(arg1, true)
			return
		end

		----------------------------------------------------------------------
		-- Automatically release in battlegrounds
		----------------------------------------------------------------------

		if event == "PLAYER_DEAD" then

			-- If player has ability to self-resurrect (soulstone, reincarnation, etc), do nothing and quit
			if HasSoulstone() then return end -- HasSoulstone() affects all self-res abilities, returns valid data only while dead

			-- Resurrect if player is in a battleground
			local InstStat, InstType = IsInInstance();
			if InstStat and InstType == "pvp" then
				RepopMe()
				return
			end

			-- Get current location
			SetMapToCurrentZone()
			local areaID = GetCurrentMapAreaID() or 0

			-- Resurrect if player is in Wintergrasp (501)
			if areaID == 501 and LeaPlusLC["AutoRelWintergrasp"] == "On" then 
				RepopMe()
				return
			end

			-- Resurrect if player is in Tol Barad (708)
			if areaID == 708 and LeaPlusLC["AutoRelTolBarad"] == "On" then 
				RepopMe()
				return
			end

			-- Resurrect if player is in Ashran (978), Stormshield (1009) or Warspear (1011)
			if (areaID == 978 or areaID == 1009 or areaID == 1011) and LeaPlusLC["AutoRelAshran"] == "On" then 
				RepopMe()
				return
			end

			return

		end

		----------------------------------------------------------------------
		-- Hide the combat log
		----------------------------------------------------------------------

		if event == "UPDATE_CHAT_WINDOWS" then
			ChatFrame2Tab:EnableMouse(false)
			ChatFrame2Tab:SetText("")
			ChatFrame2Tab:SetScale(0.01)
			ChatFrame2Tab:SetWidth(0.01)
			ChatFrame2Tab:SetHeight(0.01)
		end

		----------------------------------------------------------------------
		-- L72: Profile events
		----------------------------------------------------------------------

		if event == "ADDON_LOADED" then
			if arg1 == "Leatrix_Plus" then

				-- Automation
				LeaPlusLC:LoadVarChk("AutomateQuests", "Off")				-- Automate quests
				LeaPlusLC:LoadVarChk("AutomateGossip", "Off")				-- Automate gossip
				LeaPlusLC:LoadVarNum("AutoGossipMenu", 1, 1, 3)				-- Automate gossip modifier key
				LeaPlusLC:LoadVarChk("AutoAcceptSummon", "Off")				-- Accept summon
				LeaPlusLC:LoadVarChk("AutoAcceptRes", "Off")				-- Accept resurrection
				LeaPlusLC:LoadVarChk("NoAutoResInCombat", "Off")			-- Exclude combat
				LeaPlusLC:LoadVarChk("ResThankYouEmote", "On")				-- Thanks for resurrect

				LeaPlusLC:LoadVarChk("AutoReleasePvP", "Off")				-- Release in PvP
				LeaPlusLC:LoadVarChk("AutoRelBGs", "On")					-- Release in battlegrounds
				LeaPlusLC:LoadVarChk("AutoRelWintergrasp", "On")			-- Release in Wintergrasp
				LeaPlusLC:LoadVarChk("AutoRelTolBarad", "On")				-- Release in Tol Barad
				LeaPlusLC:LoadVarChk("AutoRelAshran", "On")					-- Release in Ashran

				LeaPlusLC:LoadVarChk("AutoSellJunk", "Off")					-- Sell junk automatically
				LeaPlusLC:LoadVarChk("SellJunkSummary", "On")				-- Sell junk summary
				LeaPlusLC:LoadVarChk("AutoRepairOwnFunds", "Off")			-- Repair automatically
				LeaPlusLC:LoadVarChk("AutoRepairGuildFunds", "On")			-- Repair using guild funds
				LeaPlusLC:LoadVarChk("AutoRepairSummary", "On")				-- Repair summary

				-- Social
				LeaPlusLC:LoadVarChk("NoDuelRequests", "Off")				-- Block duels
				LeaPlusLC:LoadVarChk("NoPetDuels", "Off")					-- Block pet battle duels
				LeaPlusLC:LoadVarChk("NoPartyInvites", "Off")				-- Block party invites
				LeaPlusLC:LoadVarChk("NoFriendRequests", "Off")				-- Block friend requests

				LeaPlusLC:LoadVarChk("AcceptPartyFriends", "Off")			-- Party from friends
				LeaPlusLC:LoadVarChk("AutoConfirmRole", "Off")				-- Queue from friends
				LeaPlusLC:LoadVarChk("InviteFromWhisper", "Off")			-- Invite from whispers
				LeaPlusLC["InvKey"]	= LeaPlusDB["InvKey"] or "plus"

				-- Chat
				LeaPlusLC:LoadVarChk("UseEasyChatResizing", "Off")			-- Use easy resizing
				LeaPlusLC:LoadVarChk("NoCombatLogTab", "Off")				-- Hide the combat log
				LeaPlusLC:LoadVarChk("NoChatButtons", "Off")				-- Hide chat buttons
				LeaPlusLC:LoadVarChk("NoSocialButton", "Off")				-- Hide social button
				LeaPlusLC:LoadVarChk("UnclampChat", "Off")					-- Unclamp chat frame
				LeaPlusLC:LoadVarChk("MoveChatEditBoxToTop", "Off")			-- Move editbox to top

				LeaPlusLC:LoadVarChk("NoStickyChat", "Off")					-- Disable sticky chat
				LeaPlusLC:LoadVarChk("UseArrowKeysInChat", "Off")			-- Use arrow keys in chat
				LeaPlusLC:LoadVarChk("NoChatFade", "Off")					-- Disable chat fade
				LeaPlusLC:LoadVarChk("UnivGroupColor", "Off")				-- Universal group color
				LeaPlusLC:LoadVarChk("Manageclasscolors", "Off")			-- Use class colors in chat
				LeaPlusLC:LoadVarChk("MaxChatHstory", "Off")				-- Increase chat history

				-- Text
				LeaPlusLC:LoadVarChk("HideErrorFrameText", "Off")			-- Hide error text
				LeaPlusLC:LoadVarChk("ShowQuestUpdates", "On")				-- Show quest updates
				LeaPlusLC:LoadVarChk("ShowImportantErrors", "On")			-- Show important errors
				LeaPlusLC:LoadVarChk("NoHitIndicators", "Off")				-- Hide portrait text
				LeaPlusLC:LoadVarChk("HideCraftedNames", "Off")				-- Hide crafted names
				LeaPlusLC:LoadVarChk("HideZoneText", "Off")					-- Hide zone text
				LeaPlusLC:LoadVarChk("HideSubzoneText", "Off")				-- Hide subzone text

				LeaPlusLC:LoadVarChk("MailFontChange", "Off")				-- Resize mail text
				LeaPlusLC:LoadVarNum("LeaPlusMailFontSize", 22, 10, 36)		-- Mail text slider

				LeaPlusLC:LoadVarChk("QuestFontChange", "Off")				-- Resize quest text
				LeaPlusLC:LoadVarNum("LeaPlusQuestFontSize", 18, 10, 36)	-- Quest text slider

				-- Interface
				LeaPlusLC:LoadVarChk("ShowMapMod", "Off")					-- Enhance world map
				LeaPlusLC:LoadVarChk("RevealWorldMap", "On")				-- Reveal world map
				LeaPlusLC:LoadVarChk("ShowRevealBox", "On")					-- Show reveal map checkbox
				LeaPlusLC:LoadVarChk("WorldMapCoords", "On")				-- Show map coordinates
				LeaPlusLC:LoadVarChk("FadeMap", "Off")						-- Fade map while moving

				LeaPlusLC:LoadVarChk("MinimapMod", "Off")					-- Customise minimap
				LeaPlusLC:LoadVarChk("MergeTrackBtn", "Off")				-- Merge buttons
				LeaPlusLC:LoadVarChk("HideMinimapZone", "Off")				-- Hide zone text
				LeaPlusLC:LoadVarChk("HideMinimapTime", "Off")				-- Hide clock
				LeaPlusLC:LoadVarChk("MinimapMouseZoom", "Off")				-- Mousewheel zoom
				LeaPlusLC:LoadVarNum("MinimapScale", 1.00, 0.50, 2.00)		-- Minimap scale slider

				LeaPlusLC:LoadVarChk("TipModEnable", "Off")					-- Manage tooltip
				LeaPlusLC:LoadVarChk("TipShowRank", "On")					-- Show rank
				LeaPlusLC:LoadVarChk("TipShowTarget", "On")					-- Show target
				LeaPlusLC:LoadVarChk("TipBackSimple", "Off")				-- Color backdrops
				LeaPlusLC:LoadVarChk("TipHideInCombat", "Off")				-- Hide tooltips during combat
				LeaPlusLC:LoadVarNum("LeaPlusTipSize", 1.00, 0.50, 2.00)	-- Tooltip scale slider
				LeaPlusLC:LoadVarNum("TipOffsetX", -13, -5000, 5000)		-- Tooltip X offset
				LeaPlusLC:LoadVarNum("TipOffsetY", 94, -5000, 5000)			-- Tooltip Y offset

				LeaPlusLC:LoadVarChk("ShowVolume", "Off")					-- Show volume slider
				LeaPlusLC:LoadVarChk("ShowVolumeInFrame", "Off")			-- Volume slider dual layout
				LeaPlusLC:LoadVarChk("AhExtras", "Off")						-- Show auction controls
				LeaPlusLC:LoadVarChk("AhBuyoutOnly", "Off")					-- Auction buyout only
				LeaPlusLC:LoadVarChk("AhGoldOnly", "Off")					-- Auction gold only
				LeaPlusLC:LoadVarChk("ShowDressTab", "Off")					-- Show dressup buttons

				LeaPlusLC:LoadVarChk("StaticCoords", "On")					-- Show coordinates
				LeaPlusLC:LoadVarChk("StaticCoordsEn", "Off")				-- Show coordinates
				LeaPlusLC:LoadVarChk("StaticCoordsBack", "Off")				-- Show background
				LeaPlusLC:LoadVarChk("StaticCoordsTop", "Off")				-- Show on top
				LeaPlusLC:LoadVarChk("StaticCoordsLock", "Off")				-- Lock coordinates
				LeaPlusLC:LoadVarNum("StaticCoordsScale", 1.0, 0.9, 2.0)	-- Coordinates scale slider
				LeaPlusLC:LoadVarAnc("CoordsA", "CENTER")					-- Coordinates anchor
				LeaPlusLC:LoadVarAnc("CoordsR", "CENTER")					-- Coordinates relative
				LeaPlusLC:LoadVarNum("CoordsX", 0, -5000, 5000)				-- Coordinates X axis
				LeaPlusLC:LoadVarNum("CoordsY", 200, -5000, 5000)			-- Coordinates Y axis

				LeaPlusLC:LoadVarChk("ShowCooldowns", "Off")				-- Show cooldowns
				LeaPlusLC:LoadVarChk("CooldownTips", "On")					-- Show cooldown tooltips
				LeaPlusLC:LoadVarChk("ShowCooldownID", "On")				-- Show cooldown ID in tips
				LeaPlusLC:LoadVarChk("NoCooldownDuration", "On")			-- Hide cooldown duration
				LeaPlusLC:LoadVarChk("CooldownsOnPlayer", "Off")			-- Anchor to player
				LeaPlusLC:LoadVarChk("DurabilityStatus", "Off")				-- Show durability status
				LeaPlusLC:LoadVarChk("ShowPetSaveBtn", "Off")				-- Show pet save button

				-- Frames
				LeaPlusLC:LoadVarChk("FrmEnabled", "Off")					-- Manage frames
				LeaPlusLC:LoadVarChk("ManageBuffFrame", "Off")				-- Manage buff frame
				LeaPlusLC:LoadVarAnc("BuffFrameA", "TOPRIGHT")				-- Buff frame anchor
				LeaPlusLC:LoadVarAnc("BuffFrameR", "TOPRIGHT")				-- Buff frame relative
				LeaPlusLC:LoadVarNum("BuffFrameX", -205, -5000, 5000) 		-- Buff frame X axis
				LeaPlusLC:LoadVarNum("BuffFrameY", -13, -5000, 5000)		-- Buff frame Y axis
				LeaPlusLC:LoadVarNum("BuffFrameScale", 1, 0.50, 2)			-- Buff frame scale

				LeaPlusLC:LoadVarChk("ClassColFrames", "Off")				-- Class colored frames
				LeaPlusLC:LoadVarChk("ClassColPlayer", "On")				-- Player frame in class color
				LeaPlusLC:LoadVarChk("ClassColTarget", "On")				-- Target frame in class color
				LeaPlusLC:LoadVarChk("ShowPlayerChain", "Off")				-- Show player chain
				LeaPlusLC:LoadVarNum("PlayerChainMenu", 2, 1, 3)			-- Player chain dropdown value
				LeaPlusLC:LoadVarChk("ShowRaidToggle", "Off")				-- Show raid toggle button
				LeaPlusLC:LoadVarChk("CombatPlates", "Off")					-- Combat plates

				LeaPlusLC:LoadVarChk("NoAlerts", "Off")						-- Hide alerts
				LeaPlusLC:LoadVarChk("NoAchieveAlerts", "On")				-- Hide achievement alerts
				LeaPlusLC:LoadVarChk("NoEncounterAlerts", "On")				-- Hide encounter alerts
				LeaPlusLC:LoadVarChk("NoGarrisonAlerts", "On")				-- Hide garrison alerts
				LeaPlusLC:LoadVarChk("NoLootAlerts", "On")					-- Hide loot alerts
				LeaPlusLC:LoadVarChk("NoProfessionAlerts", "On")			-- Hide profession alerts

				LeaPlusLC:LoadVarChk("NoCharControls", "Off")				-- Hide character controls
				LeaPlusLC:LoadVarChk("HideBodyguard", "Off")				-- Hide bodyguard window
				LeaPlusLC:LoadVarChk("HideTalkingFrame", "Off")				-- Hide talking frame
				LeaPlusLC:LoadVarChk("HideCleanupBtns", "Off")				-- Hide clean-up buttons
				LeaPlusLC:LoadVarChk("HideBossBanner", "Off")				-- Hide boss banner
				LeaPlusLC:LoadVarChk("HideLevelUpDisplay", "Off")			-- Hide level-up display
				LeaPlusLC:LoadVarChk("NoGryphons", "Off")					-- Hide gryphons
				LeaPlusLC:LoadVarChk("NoClassBar", "Off")					-- Hide stance bar
				LeaPlusLC:LoadVarChk("NoCommandBar", "Off")					-- Hide order hall bar

				-- System
				LeaPlusLC:LoadVarChk("NoShaders", "Off")					-- Disable screen glow
				LeaPlusLC:LoadVarChk("MaxCameraZoom", "Off")				-- Max camera zoom
				LeaPlusLC:LoadVarChk("ViewPortEnable", "Off")				-- Enable viewport
				LeaPlusLC:LoadVarNum("ViewPortTop", 0, 0, 300)				-- Top border
				LeaPlusLC:LoadVarNum("ViewPortBottom", 0, 0, 300)			-- Bottom border
				LeaPlusLC:LoadVarNum("ViewPortLeft", 0, 0, 300)				-- Left border
				LeaPlusLC:LoadVarNum("ViewPortRight", 0, 0, 300)			-- Right border
				LeaPlusLC:LoadVarNum("ViewPortAlpha", 0, 0, 1)				-- Border alpha
				LeaPlusLC:LoadVarChk("ViewPortResize", "Off")				-- Resize game world

				LeaPlusLC:LoadVarChk("NoRestedEmotes", "Off")				-- Silence rested emotes

				LeaPlusLC:LoadVarChk("NoBagAutomation", "Off")				-- Disable bag automation
				LeaPlusLC:LoadVarChk("NoPetAutomation", "Off")				-- Disable pet automation
				LeaPlusLC:LoadVarChk("CharAddonList", "Off")				-- Show character addons
				LeaPlusLC:LoadVarChk("NoRaidRestrictions", "Off")			-- Remove raid restrictions
				LeaPlusLC:LoadVarChk("NoConfirmLoot", "Off")				-- Disable loot warnings
				LeaPlusLC:LoadVarChk("NoMapEmote", "Off")					-- Disable map emote
				LeaPlusLC:LoadVarChk("SkipCinematics", "Off")				-- Skip cinematics
				LeaPlusLC:LoadVarChk("FasterLooting", "Off")				-- Faster auto loot
				LeaPlusLC:LoadVarChk("LockoutSharing", "Off")				-- Lockout sharing

				-- Settings
				LeaPlusLC:LoadVarChk("ShowMinimapIcon", "On")				-- Show minimap button
				LeaPlusLC:LoadVarNum("MinimapIconPos", -158.1, -180, 180)	-- Minimap button slider
				LeaPlusLC:LoadVarChk("EnableHotkey", "On")					-- Enable hotkey
				LeaPlusLC:LoadVarNum("HotkeyMenu", 1, 1, 4)					-- Leatrix Plus hotkey
				LeaPlusLC:LoadVarNum("MusicKeyMenu", 1, 1, 4)				-- Music player hotkey

				LeaPlusLC:LoadVarNum("PlusPanelScale", 1, 1, 2)				-- Panel scale
				LeaPlusLC:LoadVarNum("PlusPanelAlpha", 0, 0, 1)				-- Panel alpha

				-- Panel position
				LeaPlusLC:LoadVarAnc("MainPanelA", "CENTER")				-- Panel anchor
				LeaPlusLC:LoadVarAnc("MainPanelR", "CENTER")				-- Panel relative
				LeaPlusLC:LoadVarNum("MainPanelX", 0, -5000, 5000)			-- Panel X axis
				LeaPlusLC:LoadVarNum("MainPanelY", 0, -5000, 5000)			-- Panel Y axis

				-- Music player position
				LeaPlusLC:LoadVarAnc("MusicPanelA", "CENTER")				-- Panel anchor
				LeaPlusLC:LoadVarAnc("MusicPanelR", "CENTER")				-- Panel relative
				LeaPlusLC:LoadVarNum("MusicPanelX", 0, -5000, 5000)			-- Panel X axis
				LeaPlusLC:LoadVarNum("MusicPanelY", 0, -5000, 5000)			-- Panel Y axis

				-- Start page
				LeaPlusLC:LoadVarNum("LeaStartPage", 0, 0, LeaPlusLC["NumberOfPages"])

				-- Run other startup items
				LeaPlusLC:Live()
				LeaPlusLC:Isolated()
				LeaPlusLC:RunOnce()
				LeaPlusLC:SetDim()

			end
			return
		end

		if event == "VARIABLES_LOADED" then
			LeaPlusLC:Variable()
			return
		end

		if event == "PLAYER_ENTERING_WORLD" then
			LeaPlusLC:Player();
			collectgarbage()
			return
		end

		-- Save locals back to globals on logout
		if event == "PLAYER_LOGOUT" then

			-- Run the logout function without wipe flag
			LeaPlusLC:PlayerLogout(false)

			-- Automation
			LeaPlusDB["AutomateQuests"]			= LeaPlusLC["AutomateQuests"]
			LeaPlusDB["AutomateGossip"]			= LeaPlusLC["AutomateGossip"]
			LeaPlusDB["AutoGossipMenu"]			= LeaPlusLC["AutoGossipMenu"]
			LeaPlusDB["AutoAcceptSummon"] 		= LeaPlusLC["AutoAcceptSummon"]
			LeaPlusDB["AutoAcceptRes"] 			= LeaPlusLC["AutoAcceptRes"]
			LeaPlusDB["NoAutoResInCombat"]		= LeaPlusLC["NoAutoResInCombat"]
			LeaPlusDB["ResThankYouEmote"]		= LeaPlusLC["ResThankYouEmote"]

			LeaPlusDB["AutoReleasePvP"] 		= LeaPlusLC["AutoReleasePvP"]
			LeaPlusDB["AutoRelBGs"] 			= LeaPlusLC["AutoRelBGs"]
			LeaPlusDB["AutoRelWintergrasp"] 	= LeaPlusLC["AutoRelWintergrasp"]
			LeaPlusDB["AutoRelTolBarad"] 		= LeaPlusLC["AutoRelTolBarad"]
			LeaPlusDB["AutoRelAshran"] 			= LeaPlusLC["AutoRelAshran"]

			LeaPlusDB["AutoSellJunk"] 			= LeaPlusLC["AutoSellJunk"]
			LeaPlusDB["SellJunkSummary"] 		= LeaPlusLC["SellJunkSummary"]
			LeaPlusDB["AutoRepairOwnFunds"] 	= LeaPlusLC["AutoRepairOwnFunds"]
			LeaPlusDB["AutoRepairGuildFunds"] 	= LeaPlusLC["AutoRepairGuildFunds"]
			LeaPlusDB["AutoRepairSummary"] 		= LeaPlusLC["AutoRepairSummary"]

			-- Social
			LeaPlusDB["NoDuelRequests"] 		= LeaPlusLC["NoDuelRequests"]
			LeaPlusDB["NoPetDuels"] 			= LeaPlusLC["NoPetDuels"]
			LeaPlusDB["NoPartyInvites"]			= LeaPlusLC["NoPartyInvites"]
			LeaPlusDB["NoFriendRequests"]		= LeaPlusLC["NoFriendRequests"]

			LeaPlusDB["AcceptPartyFriends"]		= LeaPlusLC["AcceptPartyFriends"]
			LeaPlusDB["AutoConfirmRole"]		= LeaPlusLC["AutoConfirmRole"]
			LeaPlusDB["InviteFromWhisper"]		= LeaPlusLC["InviteFromWhisper"]
			LeaPlusDB["InvKey"]					= LeaPlusLC["InvKey"]

			-- Chat
			LeaPlusDB["UseEasyChatResizing"]	= LeaPlusLC["UseEasyChatResizing"]
			LeaPlusDB["NoCombatLogTab"]			= LeaPlusLC["NoCombatLogTab"]
			LeaPlusDB["NoChatButtons"]			= LeaPlusLC["NoChatButtons"]
			LeaPlusDB["NoSocialButton"]			= LeaPlusLC["NoSocialButton"]
			LeaPlusDB["UnclampChat"]			= LeaPlusLC["UnclampChat"]
			LeaPlusDB["MoveChatEditBoxToTop"]	= LeaPlusLC["MoveChatEditBoxToTop"]

			LeaPlusDB["NoStickyChat"] 			= LeaPlusLC["NoStickyChat"]
			LeaPlusDB["UseArrowKeysInChat"]		= LeaPlusLC["UseArrowKeysInChat"]
			LeaPlusDB["NoChatFade"]				= LeaPlusLC["NoChatFade"]
			LeaPlusDB["UnivGroupColor"]			= LeaPlusLC["UnivGroupColor"]
			LeaPlusDB["Manageclasscolors"]		= LeaPlusLC["Manageclasscolors"]
			LeaPlusDB["MaxChatHstory"]			= LeaPlusLC["MaxChatHstory"]

			-- Text
			LeaPlusDB["HideErrorFrameText"]		= LeaPlusLC["HideErrorFrameText"]
			LeaPlusDB["ShowQuestUpdates"]		= LeaPlusLC["ShowQuestUpdates"]
			LeaPlusDB["ShowImportantErrors"]	= LeaPlusLC["ShowImportantErrors"]
			LeaPlusDB["NoHitIndicators"]		= LeaPlusLC["NoHitIndicators"]
			LeaPlusDB["HideCraftedNames"] 		= LeaPlusLC["HideCraftedNames"]
			LeaPlusDB["HideZoneText"] 			= LeaPlusLC["HideZoneText"]
			LeaPlusDB["HideSubzoneText"] 		= LeaPlusLC["HideSubzoneText"]

			LeaPlusDB["MailFontChange"] 		= LeaPlusLC["MailFontChange"]
			LeaPlusDB["LeaPlusMailFontSize"] 	= LeaPlusLC["LeaPlusMailFontSize"]

			LeaPlusDB["QuestFontChange"] 		= LeaPlusLC["QuestFontChange"]
			LeaPlusDB["LeaPlusQuestFontSize"]	= LeaPlusLC["LeaPlusQuestFontSize"]

			-- Interface
			LeaPlusDB["ShowMapMod"] 			= LeaPlusLC["ShowMapMod"]
			LeaPlusDB["RevealWorldMap"] 		= LeaPlusLC["RevealWorldMap"]
			LeaPlusDB["ShowRevealBox"] 			= LeaPlusLC["ShowRevealBox"]
			LeaPlusDB["WorldMapCoords"] 		= LeaPlusLC["WorldMapCoords"]
			LeaPlusDB["FadeMap"] 				= LeaPlusLC["FadeMap"]

			LeaPlusDB["MinimapMod"]				= LeaPlusLC["MinimapMod"]
			LeaPlusDB["MergeTrackBtn"]			= LeaPlusLC["MergeTrackBtn"]
			LeaPlusDB["HideMinimapZone"]		= LeaPlusLC["HideMinimapZone"]
			LeaPlusDB["HideMinimapTime"]		= LeaPlusLC["HideMinimapTime"]
			LeaPlusDB["MinimapMouseZoom"]		= LeaPlusLC["MinimapMouseZoom"]
			LeaPlusDB["MinimapScale"]			= LeaPlusLC["MinimapScale"]

			LeaPlusDB["TipModEnable"]			= LeaPlusLC["TipModEnable"]
			LeaPlusDB["TipShowRank"]			= LeaPlusLC["TipShowRank"]
			LeaPlusDB["TipShowTarget"]			= LeaPlusLC["TipShowTarget"]
			LeaPlusDB["TipBackSimple"]			= LeaPlusLC["TipBackSimple"]
			LeaPlusDB["TipHideInCombat"]		= LeaPlusLC["TipHideInCombat"]
			LeaPlusDB["LeaPlusTipSize"]			= LeaPlusLC["LeaPlusTipSize"]
			LeaPlusDB["TipOffsetX"]				= LeaPlusLC["TipOffsetX"]
			LeaPlusDB["TipOffsetY"]				= LeaPlusLC["TipOffsetY"]

			LeaPlusDB["ShowVolume"] 			= LeaPlusLC["ShowVolume"]
			LeaPlusDB["ShowVolumeInFrame"] 		= LeaPlusLC["ShowVolumeInFrame"]
			LeaPlusDB["AhExtras"]				= LeaPlusLC["AhExtras"]
			LeaPlusDB["AhBuyoutOnly"]			= LeaPlusLC["AhBuyoutOnly"]
			LeaPlusDB["AhGoldOnly"]				= LeaPlusLC["AhGoldOnly"]
			LeaPlusDB["ShowDressTab"] 			= LeaPlusLC["ShowDressTab"]

			LeaPlusDB["StaticCoords"] 			= LeaPlusLC["StaticCoords"]
			LeaPlusDB["StaticCoordsEn"] 		= LeaPlusLC["StaticCoordsEn"]
			LeaPlusDB["StaticCoordsBack"] 		= LeaPlusLC["StaticCoordsBack"]
			LeaPlusDB["StaticCoordsTop"] 		= LeaPlusLC["StaticCoordsTop"]
			LeaPlusDB["StaticCoordsLock"] 		= LeaPlusLC["StaticCoordsLock"]
			LeaPlusDB["StaticCoordsScale"] 		= LeaPlusLC["StaticCoordsScale"]
			LeaPlusDB["CoordsA"] 				= LeaPlusLC["CoordsA"]
			LeaPlusDB["CoordsR"] 				= LeaPlusLC["CoordsR"]
			LeaPlusDB["CoordsX"] 				= LeaPlusLC["CoordsX"]
			LeaPlusDB["CoordsY"] 				= LeaPlusLC["CoordsY"]

			LeaPlusDB["ShowCooldowns"]			= LeaPlusLC["ShowCooldowns"]
			LeaPlusDB["CooldownTips"]			= LeaPlusLC["CooldownTips"]
			LeaPlusDB["ShowCooldownID"]			= LeaPlusLC["ShowCooldownID"]
			LeaPlusDB["NoCooldownDuration"]		= LeaPlusLC["NoCooldownDuration"]
			LeaPlusDB["CooldownsOnPlayer"]		= LeaPlusLC["CooldownsOnPlayer"]
			LeaPlusDB["DurabilityStatus"]		= LeaPlusLC["DurabilityStatus"]
			LeaPlusDB["ShowPetSaveBtn"]			= LeaPlusLC["ShowPetSaveBtn"]

			-- Frames
			LeaPlusDB["FrmEnabled"]				= LeaPlusLC["FrmEnabled"]
			LeaPlusDB["ManageBuffFrame"]		= LeaPlusLC["ManageBuffFrame"]
			LeaPlusDB["BuffFrameA"]				= LeaPlusLC["BuffFrameA"]
			LeaPlusDB["BuffFrameR"]				= LeaPlusLC["BuffFrameR"]
			LeaPlusDB["BuffFrameX"]				= LeaPlusLC["BuffFrameX"]
			LeaPlusDB["BuffFrameY"]				= LeaPlusLC["BuffFrameY"]
			LeaPlusDB["BuffFrameScale"]			= LeaPlusLC["BuffFrameScale"]

			LeaPlusDB["ClassColFrames"]			= LeaPlusLC["ClassColFrames"]
			LeaPlusDB["ClassColPlayer"]			= LeaPlusLC["ClassColPlayer"]
			LeaPlusDB["ClassColTarget"]			= LeaPlusLC["ClassColTarget"]
			LeaPlusDB["ShowPlayerChain"]		= LeaPlusLC["ShowPlayerChain"]
			LeaPlusDB["PlayerChainMenu"]		= LeaPlusLC["PlayerChainMenu"]
			LeaPlusDB["ShowRaidToggle"]			= LeaPlusLC["ShowRaidToggle"]
			LeaPlusDB["CombatPlates"]			= LeaPlusLC["CombatPlates"]

			LeaPlusDB["NoAlerts"]				= LeaPlusLC["NoAlerts"]
			LeaPlusDB["NoAchieveAlerts"]		= LeaPlusLC["NoAchieveAlerts"]
			LeaPlusDB["NoEncounterAlerts"]		= LeaPlusLC["NoEncounterAlerts"]
			LeaPlusDB["NoGarrisonAlerts"]		= LeaPlusLC["NoGarrisonAlerts"]
			LeaPlusDB["NoLootAlerts"]			= LeaPlusLC["NoLootAlerts"]
			LeaPlusDB["NoProfessionAlerts"]		= LeaPlusLC["NoProfessionAlerts"]

			LeaPlusDB["NoCharControls"]			= LeaPlusLC["NoCharControls"]
			LeaPlusDB["HideBodyguard"]			= LeaPlusLC["HideBodyguard"]
			LeaPlusDB["HideTalkingFrame"]		= LeaPlusLC["HideTalkingFrame"]
			LeaPlusDB["HideCleanupBtns"]		= LeaPlusLC["HideCleanupBtns"]
			LeaPlusDB["HideBossBanner"]			= LeaPlusLC["HideBossBanner"]
			LeaPlusDB["HideLevelUpDisplay"]		= LeaPlusLC["HideLevelUpDisplay"]
			LeaPlusDB["NoGryphons"]				= LeaPlusLC["NoGryphons"]
			LeaPlusDB["NoClassBar"]				= LeaPlusLC["NoClassBar"]
			LeaPlusDB["NoCommandBar"]			= LeaPlusLC["NoCommandBar"]

			-- System
			LeaPlusDB["NoShaders"] 				= LeaPlusLC["NoShaders"]
			LeaPlusDB["MaxCameraZoom"] 			= LeaPlusLC["MaxCameraZoom"]
			LeaPlusDB["ViewPortEnable"]			= LeaPlusLC["ViewPortEnable"]
			LeaPlusDB["ViewPortTop"]			= LeaPlusLC["ViewPortTop"]
			LeaPlusDB["ViewPortBottom"]			= LeaPlusLC["ViewPortBottom"]
			LeaPlusDB["ViewPortLeft"]			= LeaPlusLC["ViewPortLeft"]
			LeaPlusDB["ViewPortRight"]			= LeaPlusLC["ViewPortRight"]
			LeaPlusDB["ViewPortAlpha"]			= LeaPlusLC["ViewPortAlpha"]
			LeaPlusDB["ViewPortResize"]			= LeaPlusLC["ViewPortResize"]

			LeaPlusDB["NoRestedEmotes"]			= LeaPlusLC["NoRestedEmotes"]

			LeaPlusDB["NoBagAutomation"]		= LeaPlusLC["NoBagAutomation"]
			LeaPlusDB["NoPetAutomation"]		= LeaPlusLC["NoPetAutomation"]
			LeaPlusDB["CharAddonList"]			= LeaPlusLC["CharAddonList"]
			LeaPlusDB["NoRaidRestrictions"]		= LeaPlusLC["NoRaidRestrictions"]
			LeaPlusDB["NoConfirmLoot"] 			= LeaPlusLC["NoConfirmLoot"]
			LeaPlusDB["NoMapEmote"] 			= LeaPlusLC["NoMapEmote"]
			LeaPlusDB["SkipCinematics"] 		= LeaPlusLC["SkipCinematics"]
			LeaPlusDB["FasterLooting"] 			= LeaPlusLC["FasterLooting"]
			LeaPlusDB["LockoutSharing"] 		= LeaPlusLC["LockoutSharing"]

			-- Settings
			LeaPlusDB["ShowMinimapIcon"] 		= LeaPlusLC["ShowMinimapIcon"]
			LeaPlusDB["MinimapIconPos"] 		= LeaPlusLC["MinimapIconPos"]
			LeaPlusDB["EnableHotkey"] 			= LeaPlusLC["EnableHotkey"]
			LeaPlusDB["HotkeyMenu"] 			= LeaPlusLC["HotkeyMenu"]
			LeaPlusDB["MusicKeyMenu"] 			= LeaPlusLC["MusicKeyMenu"]

			LeaPlusDB["PlusPanelScale"] 		= LeaPlusLC["PlusPanelScale"]
			LeaPlusDB["PlusPanelAlpha"] 		= LeaPlusLC["PlusPanelAlpha"]

			-- Panel position
			LeaPlusDB["MainPanelA"]				= LeaPlusLC["MainPanelA"]
			LeaPlusDB["MainPanelR"]				= LeaPlusLC["MainPanelR"]
			LeaPlusDB["MainPanelX"]				= LeaPlusLC["MainPanelX"]
			LeaPlusDB["MainPanelY"]				= LeaPlusLC["MainPanelY"]

			-- Music player position
			LeaPlusDB["MusicPanelA"]			= LeaPlusLC["MusicPanelA"]
			LeaPlusDB["MusicPanelR"]			= LeaPlusLC["MusicPanelR"]
			LeaPlusDB["MusicPanelX"]			= LeaPlusLC["MusicPanelX"]
			LeaPlusDB["MusicPanelY"]			= LeaPlusLC["MusicPanelY"]

			-- Start page
			LeaPlusDB["LeaStartPage"]			= LeaPlusLC["LeaStartPage"]

		end

	end

--	Register event handler
	LpEvt:SetScript("OnEvent", eventHandler);

----------------------------------------------------------------------
--	L74: Player logout
----------------------------------------------------------------------

	-- Player Logout
	function LeaPlusLC:PlayerLogout(wipe)

		----------------------------------------------------------------------
		-- Restore default values if options were unchecked or wiped
		----------------------------------------------------------------------

		-- Use class colors
		if LeaPlusDB["Manageclasscolors"] == "On" then
			if wipe or (not wipe and LeaPlusLC["Manageclasscolors"] == "Off") then
				-- Restore local channel color
				for i = 1, 18 do
					if _G["ChatConfigChatSettingsLeftCheckBox" .. i .. "Check"] then
						ToggleChatColorNamesByClassGroup(false, _G["ChatConfigChatSettingsLeftCheckBox" .. i .. "Check"]:GetParent().type);
					end
				end
				-- Restore global channel color
				for i = 1, 50 do
					ToggleChatColorNamesByClassGroup(false, "CHANNEL"..i)
				end
			end
		end

		-- Silence rested emotes
		if LeaPlusDB["NoRestedEmotes"] == "On" then
			if wipe or (not wipe and LeaPlusLC["NoRestedEmotes"] == "Off") then
				SetCVar("Sound_EnableEmoteSounds", "1")
			end
		end

		-- Max camera zoom
		if LeaPlusDB["MaxCameraZoom"] == "On" then
			if wipe or (not wipe and LeaPlusLC["MaxCameraZoom"] == "Off") then
				SetCVar("cameraDistanceMaxZoomFactor", 1.9)
			end
		end

		-- Set map fade
		if LeaPlusDB["ShowMapMod"] == "On" then
			if wipe or (not wipe and LeaPlusLC["FadeMap"] == "Off") then
				SetCVar("mapFade", "1")
			end
		end

		-- Manage shader support
		if LeaPlusDB["NoShaders"] == "On" then
			if wipe or (not wipe and LeaPlusLC["NoShaders"] == "Off") then
				SetCVar("ffxGlow", "1")
			end
		end

		-- Universal group color
		if LeaPlusDB["UnivGroupColor"] == "On" then
			if wipe or (not wipe and LeaPlusLC["UnivGroupColor"] == "Off") then
				ChangeChatColor("RAID", 1, 0.50, 0)
				ChangeChatColor("RAID_LEADER", 1, 0.28, 0.04)
				ChangeChatColor("INSTANCE_CHAT", 1, 0.50, 0)
				ChangeChatColor("INSTANCE_CHAT_LEADER", 1, 0.28, 0.04)
			end
		end

		----------------------------------------------------------------------
		-- Do other stuff during logout
		----------------------------------------------------------------------

		-- Prevent frame caching if frame customisation is enabled
		if LeaPlusDB["FrmEnabled"] == "On" then
			PlayerFrame:SetUserPlaced(false)
			TargetFrame:SetUserPlaced(false)
		end

		-- Store the auction house duration value if auction house option is enabled
		if LeaPlusDB["AhExtras"] == "On" then
			if AuctionFrameAuctions and AuctionFrameAuctions.duration then
				LeaPlusDB["AHDuration"] = AuctionFrameAuctions.duration
			end
		end

	end

----------------------------------------------------------------------
-- 	Options panel functions
----------------------------------------------------------------------

	-- Function to add textures to panels
	function LeaPlusLC:CreateBar(name, parent, width, height, anchor, r, g, b, alp, tex)
		local ft = parent:CreateTexture(nil, "BORDER")
		ft:SetTexture(tex)
		ft:SetSize(width, height)  
		ft:SetPoint(anchor)
		ft:SetVertexColor(r ,g, b, alp)
		if name == "MainTexture" or name == "MusicMainTexture" then
			ft:SetTexCoord(0.09, 1, 0, 1);
		end
	end

	-- Create a configuration panel
	function LeaPlusLC:CreatePanel(title, globref)

		-- Create the panel
		local Side = CreateFrame("Frame", nil, UIParent)

		-- Make it a system frame
		_G["LeaPlusGlobalPanel_" .. globref] = Side
		table.insert(UISpecialFrames, "LeaPlusGlobalPanel_" .. globref)

		-- Store it in the configuration panel table
		tinsert(LeaConfigList, Side)

		-- Set frame parameters
		Side:Hide();
		Side:SetSize(570, 370); 
		Side:SetClampedToScreen(false);
		Side:SetFrameStrata("FULLSCREEN_DIALOG")

		-- Set the background color
		Side.t = Side:CreateTexture(nil, "BACKGROUND")
		Side.t:SetAllPoints()
		Side.t:SetColorTexture(0.05, 0.05, 0.05, 0.9)

		-- Add a close Button
		Side.c = CreateFrame("Button", nil, Side, "UIPanelCloseButton") 
		Side.c:SetSize(30, 30)
		Side.c:SetPoint("TOPRIGHT", 0, 0)
		Side.c:SetScript("OnClick", function() Side:Hide() end)

		-- Add reset, help and back buttons
		Side.r = LeaPlusLC:CreateButton("ResetButton", Side, "Reset", "TOPLEFT", 16, -292, 0, 25, true, "Click to reset the settings on this page.")
		Side.h = LeaPlusLC:CreateButton("HelpButton", Side, "Help", "TOPLEFT", 76, -292, 0, 25, true, "No help is available for this page.")
		Side.b = LeaPlusLC:CreateButton("BackButton", Side, "Back to Main Menu", "TOPRIGHT", -16, -292, 0, 25, true, "Click to return to the main menu.")

		-- Reposition help button so it doesn't overlap reset button
		Side.h:ClearAllPoints()
		Side.h:SetPoint("LEFT", Side.r, "RIGHT", 10, 0)

		-- Remove the click texture from the help button
		Side.h:SetPushedTextOffset(0, 0)

		-- Add a reload button and syncronise it with the main panel reload button
		local reloadb = LeaPlusLC:CreateButton("ConfigReload", Side, "Reload", "BOTTOMRIGHT", -16, 10, 0, 25, true, LeaPlusCB["ReloadUIButton"].tiptext)
		LeaPlusLC:LockItem(reloadb,true)
		reloadb:SetScript("OnClick", ReloadUI)

		reloadb.f = reloadb:CreateFontString(nil, 'ARTWORK', 'GameFontNormalSmall')
		reloadb.f:SetHeight(32);
		reloadb.f:SetPoint('RIGHT', reloadb, 'LEFT', -10, 0)
		reloadb.f:SetText(LeaPlusCB["ReloadUIButton"].f:GetText())
		reloadb.f:Hide()

		LeaPlusCB["ReloadUIButton"]:HookScript("OnEnable", function()
			LeaPlusLC:LockItem(reloadb, false)
			reloadb.f:Show()
		end)

		LeaPlusCB["ReloadUIButton"]:HookScript("OnDisable", function()
			LeaPlusLC:LockItem(reloadb, true)
			reloadb.f:Hide()
		end)

		-- Set textures
		LeaPlusLC:CreateBar("FootTexture", Side, 570, 48, "BOTTOM", 0.5, 0.5, 0.5, 1.0, "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")
		LeaPlusLC:CreateBar("MainTexture", Side, 570, 323, "TOPRIGHT", 0.7, 0.7, 0.7, 0.7,  "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")

		-- Allow movement
		Side:EnableMouse(true)
		Side:SetMovable(true)
		Side:RegisterForDrag("LeftButton")
		Side:SetScript("OnDragStart", Side.StartMoving)
		Side:SetScript("OnDragStop", function ()
			Side:StopMovingOrSizing();
			Side:SetUserPlaced(false);
			-- Save panel position
			LeaPlusLC["MainPanelA"], void, LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"] = Side:GetPoint()
		end)

		-- Set panel attributes when shown
		Side:SetScript("OnShow", function()
			Side:ClearAllPoints()
			Side:SetPoint(LeaPlusLC["MainPanelA"], UIParent, LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"])
			Side:SetScale(LeaPlusLC["PlusPanelScale"])
			Side.t:SetAlpha(1 - LeaPlusLC["PlusPanelAlpha"])
		end)

		-- Add title
		Side.f = Side:CreateFontString(nil, 'ARTWORK', 'GameFontNormalLarge')
		Side.f:SetPoint('TOPLEFT', 16, -16);
		Side.f:SetText(LeaPlusLC:Translate(title))

		-- Add description
		Side.v = Side:CreateFontString(nil, 'ARTWORK', 'GameFontHighlightSmall')
		Side.v:SetHeight(32);
		Side.v:SetPoint('TOPLEFT', Side.f, 'BOTTOMLEFT', 0, -8); 
		Side.v:SetPoint('RIGHT', Side, -32, 0)
		Side.v:SetJustifyH('LEFT'); Side.v:SetJustifyV('TOP');
		Side.v:SetText(LeaPlusLC:Translate("Configuration Panel"))
	
		-- Prevent options panel from showing while side panel is showing
		LeaPlusLC["PageF"]:HookScript("OnShow", function()
			if Side:IsShown() then LeaPlusLC["PageF"]:Hide(); end
		end)

		-- Return the frame
		return Side

	end

	-- Define subheadings
	function LeaPlusLC:MakeTx(frame, title, x, y)
		local text = frame:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
		text:SetPoint("TOPLEFT", x, y)
		text:SetText(LeaPlusLC:Translate(title))
	end

	-- Define text
	function LeaPlusLC:MakeWD(frame, title, x, y)
		local text = frame:CreateFontString(nil, 'ARTWORK', 'GameFontHighlight')
		text:SetPoint("TOPLEFT", x, y)
		text:SetText(LeaPlusLC:Translate(title))
		text:SetJustifyH"LEFT";
	end

	-- Create a slider control (uses standard template)
	function LeaPlusLC:MakeSL(frame, field, caption, low, high, step, x, y, form)

		-- Create slider control
		local Slider = CreateFrame("Slider", "LeaPlusGlobalSlider" .. field, frame, "OptionssliderTemplate")
		LeaPlusCB[field] = Slider;
		Slider:SetMinMaxValues(low, high)
		Slider:SetValueStep(step)
		Slider:EnableMouseWheel(true)
		Slider:SetPoint('TOPLEFT', x,y)
		Slider:SetWidth(100)
		Slider:SetHeight(20)
		Slider:SetHitRectInsets(0, 0, 0, 0);

		-- Remove slider text
		_G[Slider:GetName().."Low"]:SetText('');
		_G[Slider:GetName().."High"]:SetText('');

		-- Create slider label
		Slider.f = Slider:CreateFontString(nil, 'BACKGROUND')
		Slider.f:SetFontObject('GameFontHighlight')
		Slider.f:SetPoint('LEFT', Slider, 'RIGHT', 12, 0)
		Slider.f:SetFormattedText("%.2f", Slider:GetValue())

		-- Process mousewheel scrolling
		Slider:SetScript("OnMouseWheel", function(self, arg1)
			if Slider:IsEnabled() then
				local step = step * arg1
				local value = self:GetValue()
				if step > 0 then
					self:SetValue(min(value + step, high))
				else
					self:SetValue(max(value + step, low))
				end
			end
		end)

		-- Process value changed
		Slider:SetScript("OnValueChanged", function(self, value)
			local value = floor((value - low) / step + 0.5) * step + low
			Slider.f:SetFormattedText(form, value)
			LeaPlusLC[field] = value
		end)

		-- Set slider value when shown
		Slider:SetScript("OnShow", function(self)
			self:SetValue(LeaPlusLC[field])
		end)

	end

	-- Create a checkbox control (uses standard template)
	function LeaPlusLC:MakeCB(parent, field, caption, x, y, reload, tip, tipstyle)

		-- Create the checkbox
		local Cbox = CreateFrame('CheckButton', nil, parent, "ChatConfigCheckButtonTemplate")
		LeaPlusCB[field] = Cbox
		Cbox:SetPoint("TOPLEFT",x, y)
		Cbox:SetScript("OnEnter", LeaPlusLC.TipSee)
		Cbox:SetScript("OnLeave", GameTooltip_Hide)

		-- Add label and tooltip
		Cbox.f = Cbox:CreateFontString(nil, 'ARTWORK', 'GameFontHighlight')
		Cbox.f:SetPoint('LEFT', 20, 0)
		if reload then
			-- Checkbox requires UI reload
			Cbox.f:SetText(LeaPlusLC:Translate(caption) .. "*")
			Cbox.tiptext = LeaPlusLC:Translate(tip) .. "\n\n* " .. LeaPlusLC:Translate("Requires UI reload.")
		else
			-- Checkbox dot not require UI reload
			Cbox.f:SetText(LeaPlusLC:Translate(caption))
			Cbox.tiptext = LeaPlusLC:Translate(tip)
		end

		-- Set label parameters
		Cbox.f:SetJustifyH("LEFT")
		Cbox.f:SetWordWrap(false)

		-- Set maximum label width
		if parent:GetParent() == LeaPlusLC["PageF"] then
			-- Main panel checkbox labels
			if Cbox.f:GetWidth() > 152 then
				Cbox.f:SetWidth(152)
				LeaPlusLC["TruncatedLabelsList"] = LeaPlusLC["TruncatedLabelsList"] or {}
				LeaPlusLC["TruncatedLabelsList"][Cbox.f] = LeaPlusLC:Translate(caption)
			end
		else
			-- Configuration panel checkbox labels (other checkboxes either have custom functions or blank labels)
			if Cbox.f:GetWidth() > 302 then
				Cbox.f:SetWidth(302)
				LeaPlusLC["TruncatedLabelsList"] = LeaPlusLC["TruncatedLabelsList"] or {}
				LeaPlusLC["TruncatedLabelsList"][Cbox.f] = LeaPlusLC:Translate(caption)
			end
		end

		-- Set default checkbox state and click area
		Cbox:SetScript('OnShow', function(self)
			if LeaPlusLC[field] == "On" then
				self:SetChecked(true)
			else
				self:SetChecked(false)
			end
			Cbox:SetHitRectInsets(0, -Cbox.f:GetStringWidth() + 10, 0, 0);
		end)

		-- Process clicks
		Cbox:SetScript('OnClick', function()
			if Cbox:GetChecked() then
				LeaPlusLC[field] = "On"
			else
				LeaPlusLC[field] = "Off"
			end
			LeaPlusLC:SetDim(); -- Lock invalid options
			LeaPlusLC:ReloadCheck(); -- Show reload button if needed
			LeaPlusLC:Live(); -- Run live code
		end)
	end

	-- Create an editbox (uses standard template)
	function LeaPlusLC:CreateEditBox(frame, parent, width, maxchars, anchor, x, y, tab, shifttab)

		-- Create editbox
        local eb = CreateFrame("EditBox", nil, parent, "InputBoxTemplate")
		LeaPlusCB[frame] = eb
		eb:SetPoint(anchor, x, y)
		eb:SetWidth(width)
		eb:SetHeight(24)
		eb:SetFontObject("GameFontNormal")
		eb:SetTextColor(1.0, 1.0, 1.0)
		eb:SetAutoFocus(false) 
		eb:SetMaxLetters(maxchars) 
		eb:SetScript("OnEscapePressed", eb.ClearFocus)
		eb:SetScript("OnEnterPressed", eb.ClearFocus)

		-- Add editbox border and backdrop
		eb.f = CreateFrame("FRAME", nil, eb);
		eb.f:SetBackdrop({bgFile = "Interface\\Tooltips\\UI-Tooltip-Background", edgeFile = "Interface\\Tooltips\\UI-Tooltip-Border", tile = false, tileSize = 16, edgeSize = 16, insets = { left = 5, right = 5, top = 5, bottom = 5 }});
		eb.f:SetPoint("LEFT", -6, 0);
		eb.f:SetWidth(eb:GetWidth()+6);
		eb.f:SetHeight(eb:GetHeight())
		eb.f:SetBackdropColor(1.0, 1.0, 1.0, 0.3)

		-- Move onto next editbox when tab key is pressed
		eb:SetScript("OnTabPressed", function(self)
			LeaPlusLC[frame] = eb:GetText();
			LeaPlusDB[frame] = LeaPlusLC[frame];
			self:ClearFocus();
			if IsShiftKeyDown() then
				LeaPlusCB[shifttab]:SetFocus();
			else
				LeaPlusCB[tab]:SetFocus();
			end
		end)

		-- Load initial values
		if LeaPlusDB[frame] then
			eb:SetText(LeaPlusDB[frame]);
		end

		return eb

	end

	-- Create a standard button (using standard button template)
	function LeaPlusLC:CreateButton(name, frame, label, anchor, x, y, width, height, reskin, tip)
		local mbtn = CreateFrame("Button", nil, frame, "UIPanelButtonTemplate")
		LeaPlusCB[name] = mbtn
		mbtn:SetSize(width, height)
		mbtn:SetPoint(anchor, x, y)
		mbtn:SetHitRectInsets(0, 0, 0, 0)
		mbtn:SetText(LeaPlusLC:Translate(label))

		-- Create fontstring so the button can be sized correctly
		mbtn.f = mbtn:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
		mbtn.f:SetText(LeaPlusLC:Translate(label))
		if width > 0 then
			-- Button should have static width
			mbtn:SetWidth(width)
		else
			-- Button should have variable width
			mbtn:SetWidth(mbtn.f:GetStringWidth() + 20)
		end

		-- Tooltip handler
		mbtn.tiptext = LeaPlusLC:Translate(tip)
		mbtn:SetScript("OnEnter", LeaPlusLC.TipSee)
		mbtn:SetScript("OnLeave", GameTooltip_Hide)

		-- Texture the button
		if reskin then

			-- Set skinned button textures
			mbtn:SetNormalTexture("Interface\\AddOns\\Leatrix_Plus\\Leatrix_Plus.blp")
			mbtn:GetNormalTexture():SetTexCoord(0.5, 1, 0, 1)
			mbtn:SetHighlightTexture("Interface\\AddOns\\Leatrix_Plus\\Leatrix_Plus.blp")
			mbtn:GetHighlightTexture():SetTexCoord(0, 0.5, 0, 1)

			-- Hide the default textures
			mbtn:HookScript("OnShow", function() mbtn.Left:Hide(); mbtn.Middle:Hide(); mbtn.Right:Hide() end)
			mbtn:HookScript("OnEnable", function() mbtn.Left:Hide(); mbtn.Middle:Hide(); mbtn.Right:Hide() end)
			mbtn:HookScript("OnDisable", function() mbtn.Left:Hide(); mbtn.Middle:Hide(); mbtn.Right:Hide() end)
			mbtn:HookScript("OnMouseDown", function() mbtn.Left:Hide(); mbtn.Middle:Hide(); mbtn.Right:Hide() end)
			mbtn:HookScript("OnMouseUp", function() mbtn.Left:Hide(); mbtn.Middle:Hide(); mbtn.Right:Hide() end)

		end

		return mbtn
	end

	-- Create a dropdown menu (using custom function to avoid taint)
	function LeaPlusLC:CreateDropDown(ddname, label, parent, width, anchor, x, y, items, tip)

		-- Add the dropdown name to a table
		tinsert(LeaDropList, ddname)

		-- Populate variable with item list
		LeaPlusLC[ddname.."Table"] = items

		-- Create outer frame
		local frame = CreateFrame("FRAME", nil, parent); frame:SetWidth(width); frame:SetHeight(42); frame:SetPoint("BOTTOMLEFT", parent, anchor, x, y);

		-- Create dropdown inside outer frame
		local dd = CreateFrame("Frame", nil, frame); dd:SetPoint("BOTTOMLEFT", -16, -8); dd:SetPoint("BOTTOMRIGHT", 15, -4); dd:SetHeight(32);

		-- Create dropdown textures
		local lt = dd:CreateTexture(nil, "ARTWORK"); lt:SetTexture("Interface\\Glues\\CharacterCreate\\CharacterCreate-LabelFrame"); lt:SetTexCoord(0, 0.1953125, 0, 1); lt:SetPoint("TOPLEFT", dd, 0, 17); lt:SetWidth(25); lt:SetHeight(64); 
		local rt = dd:CreateTexture(nil, "BORDER"); rt:SetTexture("Interface\\Glues\\CharacterCreate\\CharacterCreate-LabelFrame"); rt:SetTexCoord(0.8046875, 1, 0, 1); rt:SetPoint("TOPRIGHT", dd, 0, 17); rt:SetWidth(25); rt:SetHeight(64); 
		local mt = dd:CreateTexture(nil, "BORDER"); mt:SetTexture("Interface\\Glues\\CharacterCreate\\CharacterCreate-LabelFrame"); mt:SetTexCoord(0.1953125, 0.8046875, 0, 1); mt:SetPoint("LEFT", lt, "RIGHT"); mt:SetPoint("RIGHT", rt, "LEFT"); mt:SetHeight(64);

		-- Create dropdown label
		local lf = dd:CreateFontString(nil, "OVERLAY", "GameFontNormal"); lf:SetPoint("TOPLEFT", frame, 0, 0); lf:SetPoint("TOPRIGHT", frame, -5, 0); lf:SetJustifyH("LEFT"); lf:SetText(LeaPlusLC:Translate(label))
	
		-- Create dropdown placeholder for value (set it using OnShow)
		local value = dd:CreateFontString(nil, "OVERLAY", "GameFontHighlight")
		value:SetPoint("LEFT", lt, 26, 2); value:SetPoint("RIGHT", rt, -43, 0); value:SetJustifyH("LEFT")
		dd:SetScript("OnShow", function() value:SetText(LeaPlusLC[ddname.."Table"][LeaPlusLC[ddname]]) end)

		-- Create dropdown button (clicking it opens the dropdown list)
		local dbtn = CreateFrame("Button", nil, dd)
		dbtn:SetPoint("TOPRIGHT", rt, -16, -18); dbtn:SetWidth(24); dbtn:SetHeight(24)
		dbtn:SetNormalTexture("Interface\\ChatFrame\\UI-ChatIcon-ScrollDown-Up"); dbtn:SetPushedTexture("Interface\\ChatFrame\\UI-ChatIcon-ScrollDown-Down"); dbtn:SetDisabledTexture("Interface\\ChatFrame\\UI-ChatIcon-ScrollDown-Disabled"); dbtn:SetHighlightTexture("Interface\\Buttons\\UI-Common-MouseHilight"); dbtn:GetHighlightTexture():SetBlendMode("ADD")
		dbtn.tiptext = tip; dbtn:SetScript("OnEnter", LeaPlusLC.ShowTooltip); 
		dbtn:SetScript("OnLeave", GameTooltip_Hide)

		-- Create dropdown list
		local ddlist =  CreateFrame("Frame",nil,frame);
		LeaPlusCB["ListFrame"..ddname] = ddlist;
		ddlist:SetPoint("TOP",0,-42);
		ddlist:SetWidth(frame:GetWidth());
		ddlist:SetHeight((#items * 17) + 17 + 17);
		ddlist:SetFrameStrata("FULLSCREEN_DIALOG");
		ddlist:SetFrameLevel(12);
		ddlist:SetBackdrop({bgFile = "Interface\\DialogFrame\\UI-DialogBox-Background-Dark", edgeFile = "Interface\\DialogFrame\\UI-DialogBox-Border", tile = false, tileSize = 0, edgeSize = 32, insets = { left = 4, right = 4, top = 4, bottom = 4 }});
		ddlist:Hide();

		-- Hide list if parent is closed
		parent:HookScript("OnHide", function() ddlist:Hide() end)

		-- Create checkmark (it marks the currently selected item)
		local ddlistchk = CreateFrame("FRAME", nil, ddlist)
		ddlistchk:SetHeight(16); ddlistchk:SetWidth(16);
		ddlistchk.t = ddlistchk:CreateTexture(nil, "ARTWORK"); ddlistchk.t:SetAllPoints(); ddlistchk.t:SetTexture("Interface\\Common\\UI-DropDownRadioChecks"); ddlistchk.t:SetTexCoord(0, 0.5, 0.5, 1.0);

		-- Create dropdown list items
		for k, v in pairs(items) do

			local dditem = CreateFrame("Button", nil, LeaPlusCB["ListFrame"..ddname])
			LeaPlusCB["Drop"..ddname..k] = dditem;
			dditem:Show();
			dditem:SetWidth(ddlist:GetWidth()-22)
			dditem:SetHeight(20)
			dditem:SetPoint("TOPLEFT", 12, -k*16)

			dditem.f = dditem:CreateFontString(nil, 'ARTWORK', 'GameFontHighlight'); 
			dditem.f:SetPoint('LEFT', 16, 0)
			dditem.f:SetText(items[k])

			dditem.t = dditem:CreateTexture(nil, "BACKGROUND")
			dditem.t:SetAllPoints()
			dditem.t:SetColorTexture(0.3, 0.3, 0.00, 0.8)
			dditem.t:Hide();

			dditem:SetScript("OnEnter", function() dditem.t:Show() end)
			dditem:SetScript("OnLeave", function() dditem.t:Hide() end)
			dditem:SetScript("OnClick", function()
				LeaPlusLC[ddname] = k
				value:SetText(LeaPlusLC[ddname.."Table"][k])
				ddlist:Hide(); -- Must be last in click handler as other functions hook it
			end)

			-- Show list when button is clicked
			dbtn:SetScript("OnClick", function()
				-- Show the dropdown
				if ddlist:IsShown() then ddlist:Hide() else 
					ddlist:Show();
					ddlistchk:SetPoint("TOPLEFT",10,select(5,LeaPlusCB["Drop"..ddname..LeaPlusLC[ddname]]:GetPoint()))
					ddlistchk:Show();
				end;
				-- Hide all other dropdowns except the one we're dealing with
				for void,v in pairs(LeaDropList) do
					if v ~= ddname then
						LeaPlusCB["ListFrame"..v]:Hide();
					end
				end
			end)

			-- Expand the clickable area of the button to include the entire menu width
			dbtn:SetHitRectInsets(-width+28, 0, 0, 0);

		end

		return frame
		
	end
	
----------------------------------------------------------------------
-- 	Create main options panel frame
----------------------------------------------------------------------

	function LeaPlusLC:CreateMainPanel()

		-- Create the panel
		local PageF = CreateFrame("Frame", nil, UIParent);

		-- Make it a system frame
		_G["LeaPlusGlobalPanel"] = PageF
		table.insert(UISpecialFrames, "LeaPlusGlobalPanel")

		-- Set frame parameters
		LeaPlusLC["PageF"] = PageF
		PageF:SetSize(570,370)
		PageF:Hide();
		PageF:SetFrameStrata("FULLSCREEN_DIALOG")
		PageF:SetClampedToScreen(false);
		PageF:EnableMouse(true)
		PageF:SetMovable(true)
		PageF:RegisterForDrag("LeftButton")
		PageF:SetScript("OnDragStart", PageF.StartMoving)
		PageF:SetScript("OnDragStop", function ()
			PageF:StopMovingOrSizing();
			PageF:SetUserPlaced(false);
			-- Save panel position
			LeaPlusLC["MainPanelA"], void, LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"] = PageF:GetPoint()
		end)

		-- Add background color
		PageF.t = PageF:CreateTexture(nil, "BACKGROUND")
		PageF.t:SetAllPoints()
		PageF.t:SetColorTexture(0.05, 0.05, 0.05, 0.9)

		-- Add textures
		LeaPlusLC:CreateBar("FootTexture", PageF, 570, 48, "BOTTOM", 0.5, 0.5, 0.5, 1.0, "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")
		LeaPlusLC:CreateBar("MainTexture", PageF, 440, 323, "TOPRIGHT", 0.7, 0.7, 0.7, 0.7,  "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")
		LeaPlusLC:CreateBar("MenuTexture", PageF, 130, 323, "TOPLEFT", 0.7, 0.7, 0.7, 0.7, "Interface\\ACHIEVEMENTFRAME\\UI-GuildAchievement-Parchment-Horizontal-Desaturated.png")

		-- Set panel position when shown
		PageF:SetScript("OnShow", function()
			PageF:ClearAllPoints()
			PageF:SetPoint(LeaPlusLC["MainPanelA"], UIParent, LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"])
		end)

		-- Add main title (shown above menu in the corner)
		PageF.mt = PageF:CreateFontString(nil, 'ARTWORK', 'GameFontNormalLarge')
		PageF.mt:SetPoint('TOPLEFT', 16, -16)
		PageF.mt:SetText("Leatrix Plus")

		-- Add version text (shown underneath main title)
		PageF.v = PageF:CreateFontString(nil, 'ARTWORK', 'GameFontHighlightSmall')
		PageF.v:SetHeight(32);
		PageF.v:SetPoint('TOPLEFT', PageF.mt, 'BOTTOMLEFT', 0, -8); 
		PageF.v:SetPoint('RIGHT', PageF, -32, 0)
		PageF.v:SetJustifyH('LEFT'); PageF.v:SetJustifyV('TOP');
		PageF.v:SetNonSpaceWrap(true); PageF.v:SetText(LeaPlusLC:Translate("Version") .. " " .. LeaPlusLC["AddonVer"])

		-- Add reload UI Button
		local reloadb = LeaPlusLC:CreateButton("ReloadUIButton", PageF, "Reload", "BOTTOMRIGHT", -16, 10, 0, 25, true, "Your UI needs to be reloaded for some of the changes to take effect.\n\nYou don't have to click the reload button immediately but you do need to click it when you are done making changes and you want the changes to take effect.")
		LeaPlusLC:LockItem(reloadb,true)
		reloadb:SetScript("OnClick", ReloadUI)

		reloadb.f = reloadb:CreateFontString(nil, 'ARTWORK', 'GameFontNormalSmall')
		reloadb.f:SetHeight(32);
		reloadb.f:SetPoint('RIGHT', reloadb, 'LEFT', -10, 0)
		reloadb.f:SetText(LeaPlusLC:Translate("Your UI needs to be reloaded."))
		reloadb.f:Hide()

		-- Add close Button
		local CloseB = CreateFrame("Button", nil, PageF, "UIPanelCloseButton") 
		CloseB:SetSize(30, 30)
		CloseB:SetPoint("TOPRIGHT", 0, 0)
		CloseB:SetScript("OnClick", LeaPlusLC.HideFrames) 

		-- Release memory
		LeaPlusLC.CreateMainPanel = nil

	end

	LeaPlusLC:CreateMainPanel();

----------------------------------------------------------------------
-- 	L80: Commands 
----------------------------------------------------------------------

	-- Slash command function
	function LeaPlusLC:SlashFunc(str)
		if str and str ~= "" then
			if str == "wipe" then
				-- Wipe settings
				LeaPlusLC:PlayerLogout(true) -- Run logout function with wipe parameter
				wipe(LeaPlusDB)
				LpEvt:UnregisterAllEvents(); -- Don't save any settings
				ReloadUI();
			elseif string.sub(str, 1, 6) == "nosave" then
				-- Prevent Leatrix Plus from overwriting LeaPlusDB at next logout
				LpEvt:UnregisterEvent("PLAYER_LOGOUT")
				LeaPlusLC:Print("Leatrix Plus will not overwrite LeaPlusDB at next logout.")
				return
			elseif str == "reset" then
				-- Reset panel positions
				LeaPlusLC["MainPanelA"], LeaPlusLC["MainPanelR"], LeaPlusLC["MainPanelX"], LeaPlusLC["MainPanelY"] = "CENTER", "CENTER", 0, 0
				LeaPlusLC["PlusPanelScale"] = 1
				LeaPlusLC["PlusPanelAlpha"] = 0
				LeaPlusLC["PageF"]:SetScale(1)
				LeaPlusLC["MusicPlayer"]:SetScale(1)
				LeaPlusLC["PageF"].t:SetAlpha(1 - LeaPlusLC["PlusPanelAlpha"])
				LeaPlusLC["MusicPlayer"].t:SetAlpha(1 - LeaPlusLC["PlusPanelAlpha"])
				-- Refresh panels
				LeaPlusLC["PageF"]:ClearAllPoints()
				LeaPlusLC["PageF"]:SetPoint("CENTER", UIParent, "CENTER", 0, 0)
				LeaPlusLC["MusicPlayer"]:ClearAllPoints()
				LeaPlusLC["MusicPlayer"]:SetPoint("CENTER", UIParent, "CENTER", 0, 0)
				-- Reset currently showing configuration panel
				for k, v in pairs(LeaConfigList) do 
					if v:IsShown() then
						v:ClearAllPoints()
						v:SetPoint("CENTER", UIParent, "CENTER", 0, 0)
						v:SetScale(1)
						v.t:SetAlpha(1 - LeaPlusLC["PlusPanelAlpha"])
					end
				end
				-- Refresh Leatrix Plus settings menu only
				if LeaPlusLC["Page8"]:IsShown() then
					LeaPlusLC["Page8"]:Hide()
					LeaPlusLC["Page8"]:Show()
				end
			elseif str == "hk" then
				local chagmsg = LeaPlusLC:Translate("Lifetime honorable kills")
				local ltphk = GetStatistic(588)
				if ltphk == "--" then ltphk = "0" end
				chagmsg = chagmsg .. ": |cffffffff" .. ltphk
				LeaPlusLC:Print(chagmsg)
				return
			elseif string.sub(str, 1, 5) == "taint" then
				-- Set taint log level
				local taintLevel = string.sub(str, 7)
				if taintLevel and taintLevel ~= "" then
					local taintLevel = tonumber(taintLevel)
					if taintLevel then
						if taintLevel < 0 or taintLevel > 2 then
							LeaPlusLC:Print("Invalid taint level.")
						else
							if taintLevel == 0 then
								-- Disable taint log
								ConsoleExec("taintLog 0")
								LeaPlusLC:Print("Taint level: Disabled (0).")
							elseif taintLevel == 1 then
								-- Basic taint log
								ConsoleExec("taintLog 1")
								LeaPlusLC:Print("Taint level: Basic (1).")
							elseif taintLevel == 2 then
								-- Full taint log
								ConsoleExec("taintLog 2")
								LeaPlusLC:Print("Taint level: Full (2).")
							end
						end
					else
 						LeaPlusLC:Print("Invalid taint level.")
					end
				else
					-- Show current taint level
					local taintCurrent = GetCVar("taintLog")
					if taintCurrent == "0" then
						LeaPlusLC:Print("Taint level: Disabled (0).")
					elseif taintCurrent == "1" then
						LeaPlusLC:Print("Taint level: Basic (1).")
					elseif taintCurrent == "2" then
						LeaPlusLC:Print("Taint level: Full (2).")
					end
				end
				return
			elseif string.sub(str, 1, 5) == "quest" then
				-- Show quest completed status
				local questID = string.sub(str, 7)
				if questID and questID ~= "" then
					if tonumber(questID) then
						local questCompleted = IsQuestFlaggedCompleted(questID)
						if questCompleted then
							LeaPlusLC:Print(questID .. ": " .. LeaPlusLC:Translate("Quest completed."))
						else
							LeaPlusLC:Print(questID .. ": " .. LeaPlusLC:Translate("Quest not completed."))
						end
					else
						LeaPlusLC:Print("Invalid quest ID.")
					end
				else
					LeaPlusLC:Print("Missing quest ID.")
				end
				return
			elseif str == "gstaff" then
				-- Buy 10 x Rough Wooden Staff from Larana Drome in Scribes' Sacellum, Dalaran, Northrend (used for testing)
				local npcName = UnitName("target")
				local npcGuid = UnitGUID("target") or nil
				local errmsg = "Requires you to be interacting with Larana Drome.  She can be found at Scribes' Sacellum, Dalaran, Northrend."
				if npcName and npcGuid then
					local void, void, void, void, void, npcID = strsplit("-", npcGuid)
					if npcID and npcID == "28723" then
						for k = 1, 10 do
							BuyMerchantItem(5)
						end
					else
						LeaPlusLC:Print(errmsg)
					end
				else
					LeaPlusLC:Print(errmsg)
				end
				return
			elseif str == "rest" then
				-- Show rested bubbles
				LeaPlusLC:Print(LeaPlusLC:Translate("Rested bubbles") .. ": |cffffffff" .. (math.floor(20 * (GetXPExhaustion() or 0) / UnitXPMax("player") + 0.5)))
				return
			elseif str == "zygor" then
				LeaPlusLC:ZygorToggle()
				return
			elseif str == "id" then
				-- Print NPC ID
				local npcName = UnitName("target")
				local npcGuid = UnitGUID("target") or nil
				if npcName and npcGuid then
					local void, void, void, void, void, npcID = strsplit("-", npcGuid)
					if npcID then
						LeaPlusLC:Print(npcName .. ": |cffffffff" .. npcID)
					end
				end
			elseif str == "tooltip" then
				-- Print tooltip frame name
				local enumf = EnumerateFrames()
				while enumf do
					if (enumf:GetObjectType() == "GameTooltip" or strfind((enumf:GetName() or ""):lower(),"tip")) and enumf:IsVisible() and enumf:GetPoint() then
						print(enumf:GetName())
					end 
					enumf = EnumerateFrames(enumf)
				end
				collectgarbage()
			elseif str == "soil" then
				-- Enable dark soil scanning
				if not LeaPlusLC["DarkScriptlEnabled"] then
					GameTooltip:HookScript("OnUpdate", function() 
						local a = _G["GameTooltipTextLeft1"]:GetText() or "" 
						if a == "Dark Soil" then
							PlaySound("RaidWarning", "Master") 
						end
					end)
					LeaPlusLC["DarkScriptlEnabled"] = true
					LeaPlusLC:Print("Dark Soil scanning activated.  Reload UI to exit.")
				else
					LeaPlusLC:Print("Dark Soil scanning is already activated.  You only need to run this once.  Reload UI to exit.")
				end
				return
			elseif str == "event" then
				-- List events (used for debug)
				LeaPlusLC["DbF"] = LeaPlusLC["DbF"] or CreateFrame("FRAME")
				if not LeaPlusLC["DbF"]:GetScript("OnEvent") then
					LeaPlusLC:Print("Tracing started.")
					LeaPlusLC["DbF"]:RegisterAllEvents()
					-- Unregister unnecessary spammy events
					LeaPlusLC["DbF"]:UnregisterEvent("SPELL_UPDATE_COOLDOWN")
					LeaPlusLC["DbF"]:UnregisterEvent("ACTIONBAR_UPDATE_COOLDOWN")
					LeaPlusLC["DbF"]:UnregisterEvent("BAG_UPDATE_COOLDOWN")
					LeaPlusLC["DbF"]:UnregisterEvent("COMBAT_LOG_EVENT_UNFILTERED")
					LeaPlusLC["DbF"]:UnregisterEvent("UNIT_POWER_FREQUENT")
					LeaPlusLC["DbF"]:UnregisterEvent("SPELL_UPDATE_USABLE")
					LeaPlusLC["DbF"]:UnregisterEvent("UPDATE_INVENTORY_DURABILITY")
					LeaPlusLC["DbF"]:UnregisterEvent("CHAT_MSG_TRADESKILLS")
					LeaPlusLC["DbF"]:SetScript("OnEvent", function(self, event)
						print(event)
					end)
				else
					LeaPlusLC["DbF"]:UnregisterAllEvents()
					LeaPlusLC["DbF"]:SetScript("OnEvent", nil)
					LeaPlusLC:Print("Tracing stopped.")
				end
			elseif str == "config" then
				-- Show maximum camera distance
				LeaPlusLC:Print(LeaPlusLC:Translate("Camera distance") .. ": |cffffffff" .. GetCVar("cameraDistanceMaxZoomFactor"))
				-- Show shader status
				LeaPlusLC:Print(LeaPlusLC:Translate("Shaders") .. ": |cffffffff" .. GetCVar("ffxGlow"))
				-- Show particle density
				LeaPlusLC:Print(LeaPlusLC:Translate("Particle density") .. ": |cffffffff" .. GetCVar("particleDensity"))
				LeaPlusLC:Print(LeaPlusLC:Translate("Weather density") .. ": |cffffffff" .. GetCVar("weatherDensity"))
				-- Show config
				LeaPlusLC:Print("SynchroniseConfig: |cffffffff" .. GetCVar("synchronizeConfig"))
				-- Show achievement sharing
				local achhidden = AreAccountAchievementsHidden()
				if achhidden then
					LeaPlusLC:Print("Account achievements are hidden.")
				else
					LeaPlusLC:Print("Account achievements are being shared.")
				end
			elseif str == "move" then
				-- Move minimap
				MinimapZoneTextButton:Hide()
				MinimapBorderTop:SetTexture("")
				MiniMapWorldMapButton:Hide()
				MinimapBackdrop:ClearAllPoints()
				MinimapBackdrop:SetPoint("CENTER", UIParent, "CENTER", -330, -75)
				Minimap:SetPoint("CENTER", UIParent, "CENTER", -320, -50)
			elseif str == "tipcol" then
				-- Show default tooltip title color
				if GameTooltipTextLeft1:IsShown() then
					local r, g, b, a = GameTooltipTextLeft1:GetTextColor()
					r = r <= 1 and r >= 0 and r or 0
					g = g <= 1 and g >= 0 and g or 0
					b = b <= 1 and b >= 0 and b or 0
					LeaPlusLC:Print(LeaPlusLC:Translate("Tooltip title color") .. ": " .. strupper(string.format("%02x%02x%02x", r * 255, g * 255, b * 255) .. "."))
				else
					LeaPlusLC:Print("No tooltip showing.")
				end
			elseif str == "list" then
				-- Enumerate frames
				local frame = EnumerateFrames()
				while frame do 
					if (frame:IsVisible() and MouseIsOver(frame)) then 
						LeaPlusLC:Print(frame:GetName() or string.format("[Unnamed Frame: %s]", tostring(frame)))
					end 
					frame = EnumerateFrames(frame) 
				end
			elseif str == "nohelp" then
				-- Set most help plates to seen
				for i = 1, 100 do
					SetCVarBitfield("closedInfoFrames", i, true)
				end
				TalentMicroButtonAlert:Hide()
				TalentMicroButtonAlert:HookScript("OnShow", TalentMicroButtonAlert.Hide)
			elseif str == "grid" then
				-- Create grid for first use
				if not LeaPlusLC.grid then
					LeaPlusLC.grid = CreateFrame('FRAME') 
					LeaPlusLC.grid:Hide()
					LeaPlusLC.grid:SetAllPoints(UIParent)
					local w, h = GetScreenWidth() / 64, GetScreenHeight() / 36
					-- Plot vertical lines
					for i = 0, 64 do
						local t = LeaPlusLC.grid:CreateTexture(nil, 'BACKGROUND')
						if i == 32 then t:SetColorTexture(1, 0, 0, 0.5) else t:SetColorTexture(0, 0, 0, 0.5) end
						t:SetPoint('TOPLEFT', LeaPlusLC.grid, 'TOPLEFT', i * w - 1, 0)
						t:SetPoint('BOTTOMRIGHT', LeaPlusLC.grid, 'BOTTOMLEFT', i * w + 1, 0)
					end
					-- Plot horizontal lines
					for i = 0, 36 do
						local t = LeaPlusLC.grid:CreateTexture(nil, 'BACKGROUND')
						if i == 18 then	t:SetColorTexture(1, 0, 0, 0.5) else t:SetColorTexture(0, 0, 0, 0.5) end
						t:SetPoint('TOPLEFT', LeaPlusLC.grid, 'TOPLEFT', 0, -i * h + 1)
						t:SetPoint('BOTTOMRIGHT', LeaPlusLC.grid, 'TOPRIGHT', 0, -i * h - 1)
					end	
				end

				-- Show or hide grid
				if LeaPlusLC.grid:IsShown() then
					LeaPlusLC.grid:Hide()
				else
					LeaPlusLC.grid:Show()
				end
			elseif str == "chk" then
				-- List truncated checkbox labels
				if LeaPlusLC["TruncatedLabelsList"] then
					for i, v in pairs(LeaPlusLC["TruncatedLabelsList"]) do
						LeaPlusLC:Print(LeaPlusLC["TruncatedLabelsList"][i])
					end
				else
					LeaPlusLC:Print("Checkbox labels are Ok.")
				end
			elseif string.sub(str, 1, 2) == "cv" then
				-- Print console variable setting
				local param = string.sub(str, 4)
				if param and param ~= "" then
					if GetCVar(param) then
						LeaPlusLC:Print(param .. ": |cffffffff" .. GetCVar(param))
					else
						LeaPlusLC:Print("Invalid console variable.")
					end
				else
					LeaPlusLC:Print("Missing console variable.")
				end
				return
			elseif string.sub(str, 1, 5) == "sound" then
				-- Play sound file
				local param = string.sub(str, 7)
				if param and param ~= "" then
					PlaySoundFile(param)
				else
					LeaPlusLC:Print("Missing sound file parameter.")
				end
				return
			elseif string.sub(str, 1, 4) == "team" then
				-- Assign battle pet team
				local param = string.sub(str, 6)
				local p1, s1p1, s1p2, s1p3, p2, s2p1, s2p2, s2p3, p3, s3p1, s3p2, s3p3 = strsplit(",", param, 12)
				if p1 and s1p1 and s1p2 and s1p3 and p2 and s2p1 and s2p2 and s2p3 and p3 and s3p1 and s3p2 and s3p3 then
					if LeaPlusLC:PlayerInCombat() then
						return
					else
						-- Ensure all 3 slots are unlocked
						for i = 1, 3 do
							local void, void, void, void, isLocked = C_PetJournal.GetPetLoadOutInfo(i)
							if isLocked and isLocked == true then
								LeaPlusLC:Print("All 3 battle pet slots need to be unlocked.")
								return
							end
						end
						-- Assign pets
						C_PetJournal.SetPetLoadOutInfo(1, p1)
						C_PetJournal.SetAbility(1, 1, s1p1)
						C_PetJournal.SetAbility(1, 2, s1p2)
						C_PetJournal.SetAbility(1, 3, s1p3)
						C_PetJournal.SetPetLoadOutInfo(2, p2)
						C_PetJournal.SetAbility(2, 1, s2p1)
						C_PetJournal.SetAbility(2, 2, s2p2)
						C_PetJournal.SetAbility(2, 3, s2p3)
						C_PetJournal.SetPetLoadOutInfo(3, p3)
						C_PetJournal.SetAbility(3, 1, s3p1)
						C_PetJournal.SetAbility(3, 2, s3p2)
						C_PetJournal.SetAbility(3, 3, s3p3)
						if PetJournal and PetJournal:IsShown() then
							PetJournal_UpdatePetLoadOut()
						end
					end
				else
					LeaPlusLC:Print("Invalid battle pet team parameter.")
				end
			elseif str == "wipecds" then
				-- Wipe cooldowns
				LeaPlusDB["Cooldowns"] = nil
				ReloadUI()
			elseif str == "play" then
				-- Music player
				if LeaPlusLC["MusicPlayer"]:IsShown() then
					LeaPlusLC["MusicPlayer"]:Hide()
				else
					LeaPlusLC["MusicPlayer"]:Show()
				end
			elseif str == "admin" then
				-- Preset profile (used for testing)
				LpEvt:UnregisterAllEvents()						-- Prevent changes
				wipe(LeaPlusDB)									-- Wipe settings
				LeaPlusLC:PlayerLogout(true)					-- Reset permanent settings
				-- Automation
				LeaPlusDB["AutomateQuests"] = "On"				-- Automate quests
				LeaPlusDB["AutomateGossip"] = "On"				-- Automate gossip
				LeaPlusDB["AutoAcceptSummon"] = "On"			-- Accept summon
				LeaPlusDB["AutoAcceptRes"] = "On"				-- Accept resurrection
				LeaPlusDB["AutoReleasePvP"] = "On"				-- Release in PvP
				LeaPlusDB["AutoSellJunk"] = "On"				-- Sell junk automatically
				LeaPlusDB["AutoRepairOwnFunds"] = "On"			-- Repair automatically

				-- Social
				LeaPlusDB["NoDuelRequests"] = "On"				-- Block duels
				LeaPlusDB["NoPetDuels"] = "On"					-- Block pet battle duels
				LeaPlusDB["NoPartyInvites"] = "Off"				-- Block party invites
				LeaPlusDB["NoFriendRequests"] = "Off"			-- Block friend requests			
				LeaPlusDB["AcceptPartyFriends"] = "On"			-- Party from friends
				LeaPlusDB["AutoConfirmRole"] = "On"				-- Queue from friends
				LeaPlusDB["InviteFromWhisper"] = "On"			-- Invite from whispers

				-- Chat
				LeaPlusDB["UseEasyChatResizing"] = "On"			-- Use easy resizing
				LeaPlusDB["NoCombatLogTab"] = "On"				-- Hide the combat log
				LeaPlusDB["NoChatButtons"] = "On"				-- Hide chat buttons
				LeaPlusDB["NoSocialButton"] = "On"				-- Hide social button
				LeaPlusDB["UnclampChat"] = "On"					-- Unclamp chat frame
				LeaPlusDB["MoveChatEditBoxToTop"] = "On"		-- Move editbox to top
				LeaPlusDB["NoStickyChat"] = "On"				-- Disable sticky chat
				LeaPlusDB["UseArrowKeysInChat"] = "On"			-- Use arrow keys in chat
				LeaPlusDB["NoChatFade"] = "On"					-- Disable chat fade
				LeaPlusDB["UnivGroupColor"] = "On"				-- Universal group color
				LeaPlusDB["Manageclasscolors"] = "On"			-- Manage class colors
				LeaPlusDB["MaxChatHstory"] = "Off"				-- Increase chat history

				-- Text
				LeaPlusDB["HideErrorFrameText"] = "On"			-- Hide error messages
				LeaPlusDB["NoHitIndicators"] = "On"				-- Hide portrait text
				LeaPlusDB["HideCraftedNames"] = "On"			-- Hide crafted names
				LeaPlusDB["MailFontChange"] = "On"				-- Resize mail text
				LeaPlusDB["QuestFontChange"] = "On"				-- Resize quest text

				-- Interface
				LeaPlusDB["ShowMapMod"] = "On"					-- Enhance world map
				LeaPlusDB["MinimapMod"] = "On"					-- Customise minimap
				LeaPlusDB["MergeTrackBtn"] = "On"				-- Merge buttons
				LeaPlusDB["HideMinimapZone"] = "On"				-- Hide zone text
				LeaPlusDB["MinimapScale"] = 1.30				-- Minimap scale slider
				LeaPlusDB["TipModEnable"] = "On"				-- Manage tooltip
				LeaPlusDB["TipBackSimple"] = "On"				-- Color backdrops
				LeaPlusDB["LeaPlusTipSize"] = 1.25				-- Tooltip scale slider
				LeaPlusDB["ShowVolume"] = "On"					-- Show volume slider
				LeaPlusDB["AhExtras"] = "On"					-- Show auction controls
				LeaPlusDB["ShowDressTab"] = "On"				-- Show dressup buttons
				LeaPlusDB["StaticCoordsEn"] = "On"				-- Show coordinates
				LeaPlusDB["StaticCoords"] = "Off"				-- Show coordinates frame
				LeaPlusDB["StaticCoordsScale"] = 2.0			-- Coordinates scale
				LeaPlusDB["CoordsA"] = "BOTTOMRIGHT"			-- Coordinates anchor
				LeaPlusDB["CoordsR"] = "BOTTOMRIGHT"			-- Coordinates relative
				LeaPlusDB["CoordsX"] = -300						-- Coordinates X axis
				LeaPlusDB["CoordsY"] = 130						-- Coordinates Y axis
				LeaPlusDB["ShowCooldowns"] = "On"				-- Show cooldowns
				LeaPlusDB["DurabilityStatus"] = "On"			-- Show durability status
				LeaPlusDB["ShowPetSaveBtn"] = "On"				-- Show pet save button

				-- Frames
				LeaPlusDB["FrmEnabled"] = "On"					-- Manage frames

				LeaPlusDB["Frames"] = {}						-- Frame profile
				LeaPlusDB["Frames"]["PlayerFrame"] = {}
				LeaPlusDB["Frames"]["PlayerFrame"]["Point"] = "TOPLEFT"
				LeaPlusDB["Frames"]["PlayerFrame"]["Relative"] = "TOPLEFT"
				LeaPlusDB["Frames"]["PlayerFrame"]["XOffset"] = -35
				LeaPlusDB["Frames"]["PlayerFrame"]["YOffset"] = -14
				LeaPlusDB["Frames"]["PlayerFrame"]["Scale"] = 1.20

				LeaPlusDB["Frames"]["TargetFrame"] = {}
				LeaPlusDB["Frames"]["TargetFrame"]["Point"] = "TOPLEFT"
				LeaPlusDB["Frames"]["TargetFrame"]["Relative"] = "TOPLEFT"
				LeaPlusDB["Frames"]["TargetFrame"]["XOffset"] = 190
				LeaPlusDB["Frames"]["TargetFrame"]["YOffset"] = -14
				LeaPlusDB["Frames"]["TargetFrame"]["Scale"] = 1.20

				LeaPlusDB["Frames"]["GhostFrame"] = {}
				LeaPlusDB["Frames"]["GhostFrame"]["Point"] = "CENTER"
				LeaPlusDB["Frames"]["GhostFrame"]["Relative"] = "CENTER"
				LeaPlusDB["Frames"]["GhostFrame"]["XOffset"] = 3
				LeaPlusDB["Frames"]["GhostFrame"]["YOffset"] = -142

				LeaPlusDB["Frames"]["WorldStateAlwaysUpFrame"] = {}
				LeaPlusDB["Frames"]["WorldStateAlwaysUpFrame"]["Point"] = "TOP"
				LeaPlusDB["Frames"]["WorldStateAlwaysUpFrame"]["Relative"] = "TOP"
				LeaPlusDB["Frames"]["WorldStateAlwaysUpFrame"]["XOffset"] = -40
				LeaPlusDB["Frames"]["WorldStateAlwaysUpFrame"]["YOffset"] = -530

				LeaPlusDB["Frames"]["MirrorTimer1"] = {}
				LeaPlusDB["Frames"]["MirrorTimer1"]["Point"] = "TOP"
				LeaPlusDB["Frames"]["MirrorTimer1"]["Relative"] = "TOP"
				LeaPlusDB["Frames"]["MirrorTimer1"]["XOffset"] = 0
				LeaPlusDB["Frames"]["MirrorTimer1"]["YOffset"] = -120

				LeaPlusDB["ManageBuffFrame"] = "On"				-- Manage buff frame
				LeaPlusDB["BuffFrameA"] = "TOPRIGHT"			-- Buff frame anchor
				LeaPlusDB["BuffFrameR"] = "TOPRIGHT"			-- Buff frame relative
				LeaPlusDB["BuffFrameX"] = -271					-- Buff frame X offset
				LeaPlusDB["BuffFrameY"] = 0						-- Buff frame Y offset
				LeaPlusDB["BuffFrameScale"] = 0.80				-- Buff frame scale

				LeaPlusDB["ClassColFrames"] = "On"				-- Class colored frames
				LeaPlusDB["ShowPlayerChain"] = "On"				-- Show player chain
				LeaPlusDB["PlayerChainMenu"] = 3				-- Player chain style
				LeaPlusDB["ShowRaidToggle"] = "On"				-- Show raid toggle button
				LeaPlusDB["CombatPlates"] = "On"				-- Combat plates

				LeaPlusDB["NoAlerts"] = "On"					-- Hide alerts
				LeaPlusDB["NoAchieveAlerts"] = "On"				-- Hide achievement alerts
				LeaPlusDB["NoEncounterAlerts"] = "On"			-- Hide encounter alerts
				LeaPlusDB["NoGarrisonAlerts"] = "On"			-- Hide garrison alerts
				LeaPlusDB["NoLootAlerts"] = "On"				-- Hide loot alerts
				LeaPlusDB["NoProfessionAlerts"] = "On"			-- Hide profession alerts

				LeaPlusDB["NoCharControls"] = "On"				-- Hide character controls
				LeaPlusDB["HideBodyguard"] = "On"				-- Hide bodyguard window
				LeaPlusDB["HideTalkingFrame"] = "On"			-- Hide talking frame
				LeaPlusDB["HideCleanupBtns"] = "On"				-- Hide cleanup buttons
				LeaPlusDB["HideBossBanner"] = "On"				-- Hide boss banner
				LeaPlusDB["HideLevelUpDisplay"] = "On"			-- Hide level-up display
				LeaPlusDB["NoGryphons"] = "On"					-- Hide gryphons
				LeaPlusDB["NoClassBar"] = "On"					-- Hide stance bar
				LeaPlusDB["NoCommandBar"] = "On"				-- Hide order hall bar

				-- System
				LeaPlusDB["NoShaders"] = "On"					-- Disable screen glow
				LeaPlusDB["MaxCameraZoom"] = "On"				-- Max camera zoom
				LeaPlusDB["ViewPortEnable"] = "On"				-- Enable viewport
				LeaPlusDB["ViewPortResize"] = "On"				-- Resize game world
				LeaPlusDB["NoRestedEmotes"] = "On"				-- Silence rested emotes

				LeaPlusDB["NoBagAutomation"] = "On"				-- Disable bag automation
				LeaPlusDB["NoPetAutomation"] = "On"				-- Disable pet automation
				LeaPlusDB["CharAddonList"] = "On"				-- Show character addons
				LeaPlusDB["NoRaidRestrictions"] = "On"			-- Remove raid restrictions
				LeaPlusDB["NoConfirmLoot"] = "On"				-- Disable loot warnings
				LeaPlusDB["NoMapEmote"] = "On"					-- Disable map emote
				LeaPlusDB["SkipCinematics"] = "On"				-- Skip cinematics
				LeaPlusDB["FasterLooting"] = "On"				-- Faster auto loot
				LeaPlusDB["LockoutSharing"] = "On"				-- Lockout sharing

				-- Settings
				LeaPlusDB["HotkeyMenu"] = 2						-- Leatrix Plus hotkey
				LeaPlusDB["MusicKeyMenu"] = 2					-- Music player hotkey

				-- Function to assign cooldowns
				local function setIcon(pclass, pspec, sp1, st1, pt1, sp2, st2, pt2, sp3, st3, pt3, sp4, st4, pt4, sp5, st5, pt5)
					-- Set spell ID
					if sp1 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R1Idn"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R1Idn"] = sp1 end
					if sp2 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R2Idn"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R2Idn"] = sp2 end
					if sp3 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R3Idn"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R3Idn"] = sp3 end
					if sp4 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R4Idn"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R4Idn"] = sp4 end
					if sp5 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R5Idn"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R5Idn"] = sp5 end
					-- Set stack
					if st1 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R1Stk"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R1Stk"] = st1 end
					if st2 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R2Stk"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R2Stk"] = st2 end
					if st3 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R3Stk"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R3Stk"] = st3 end
					if st4 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R4Stk"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R4Stk"] = st4 end
					if st5 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R5Stk"] = "" else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R5Stk"] = st5 end
					-- Set pet
					if pt1 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R1Pet"] = false else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R1Pet"] = true end
					if pt2 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R2Pet"] = false else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R2Pet"] = true end
					if pt3 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R3Pet"] = false else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R3Pet"] = true end
					if pt4 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R4Pet"] = false else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R4Pet"] = true end
					if pt5 == 0 then LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R5Pet"] = false else LeaPlusDB["Cooldowns"][pclass]["S" .. pspec .. "R5Pet"] = true end
				end

				-- Create main table
				LeaPlusDB["Cooldowns"] = {}

				-- Create class tables
				for index = 1, GetNumClasses() do
					local classDisplayName, classTag, classID = GetClassInfo(index)
					LeaPlusDB["Cooldowns"][classTag] = {}
				end

				-- Assign cooldowns
				setIcon("WARRIOR", 		1, --[[Arms]] 		 	--[[1]] 32216, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Victory Rush
				setIcon("WARRIOR", 		2, --[[Fury]]  			--[[1]] 32216, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Victory Rush
				setIcon("WARRIOR", 		3, --[[Protection]]  	--[[1]] 32216, 0, 0, 	--[[2]] 190456, 0, 0, 	--[[3]] 132404, 0, 0, 	--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Victory Rush, Ignore Pain, Shield Block

				setIcon("PALADIN", 		1, --[[Holy]]  			--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 203539, 0, 0, 	--[[4]] 203528, 0, 0, 	--[[5]] 203538, 0, 0) -- nil, nil, Wisdom, Might, Kings
				setIcon("PALADIN", 		2, --[[Protection]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 203539, 0, 0, 	--[[4]] 203528, 0, 0, 	--[[5]] 203538, 0, 0) -- nil, nil, Wisdom, Might, Kings
				setIcon("PALADIN", 		3, --[[Retribution]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 203539, 0, 0, 	--[[4]] 203528, 0, 0, 	--[[5]] 203538, 0, 0) -- nil, nil, Wisdom, Might, Kings

				setIcon("SHAMAN", 		1, --[[Elemental]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 215864, 0, 0, 	--[[5]] 546, 0, 0) -- nil, nil, nil, Rainfall, Water Walking
				setIcon("SHAMAN", 		2, --[[Enhancement]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 215864, 0, 0, 	--[[5]] 546, 0, 0) -- nil, nil, nil, Rainfall, Water Walking
				setIcon("SHAMAN", 		3, --[[Resto]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 215864, 0, 0, 	--[[5]] 546, 0, 0) -- nil, nil, nil, Rainfall, Water Walking

				setIcon("ROGUE", 		1, --[[Assassination]]  --[[1]] 1784, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 2823, 0, 0, 	--[[5]] 3408, 0, 0) -- Stealth, nil, nil, Deadly Poison, Crippling Poison
				setIcon("ROGUE", 		2, --[[Outlaw]]  		--[[1]] 1784, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 2823, 0, 0, 	--[[5]] 3408, 0, 0) -- Stealth, nil, nil, Deadly Poison, Crippling Poison
				setIcon("ROGUE", 		3, --[[Subtetly]]  		--[[1]] 1784, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 2823, 0, 0, 	--[[5]] 3408, 0, 0) -- Stealth, nil, nil, Deadly Poison, Crippling Poison

				setIcon("DRUID", 		1, --[[Balance]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("DRUID", 		2, --[[Feral]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("DRUID", 		3, --[[Guardian]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("DRUID", 		4, --[[Resto]]			--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)

				setIcon("MONK", 		1, --[[Brewmaster]]  	--[[1]] 125359, 0, 0,	--[[2]] 115307, 0, 0, 	--[[3]] 124274, 0, 0, 	--[[4]] 124273, 0, 0, 	--[[5]] 116781, 0, 0) -- Tiger Power, Shuffle, Moderate Stagger, Heavy Stagger, Legacy of the White Tiger
				setIcon("MONK", 		2, --[[Mistweaver]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("MONK", 		3, --[[Windwalker]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)

				setIcon("MAGE", 		1, --[[Arcane]]  		--[[1]] 11426, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Ice Barrier
				setIcon("MAGE", 		2, --[[Fire]]  			--[[1]] 11426, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Ice Barrier
				setIcon("MAGE", 		3, --[[Frost]]  		--[[1]] 11426, 0, 0, 	--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Ice Barrier

				setIcon("WARLOCK", 		1, --[[Affliction]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("WARLOCK", 		2, --[[Demonology]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("WARLOCK", 		3, --[[Destruction]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)

				setIcon("PRIEST", 		1, --[[Discipline]]  	--[[1]] 17, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Power Word: Shield
				setIcon("PRIEST", 		2, --[[Holy]]  			--[[1]] 17, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Power Word: Shield
				setIcon("PRIEST", 		3, --[[Shadow]]  		--[[1]] 17, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0) -- Power Word: Shield

				setIcon("HUNTER", 		1, --[[Beast Mastery]]  --[[1]] 136, 0, 1, 		--[[2]] 118455, 0, 1, 	--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 5384, 0, 0) -- Mend Pet, nil, nil, nil, Feign Death
				setIcon("HUNTER", 		2, --[[Marksmanship]]  	--[[1]] 136, 0, 1, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 5384, 0, 0) -- Mend Pet, nil, nil, nil, Feign Death
				setIcon("HUNTER", 		3, --[[Survival]]  		--[[1]] 136, 0, 1, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 5384, 0, 0) -- Mend Pet, nil, nil, nil, Feign Death

				setIcon("DEATHKNIGHT", 	1, --[[Blood]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("DEATHKNIGHT", 	2, --[[Frost]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("DEATHKNIGHT", 	3, --[[Unholy]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)

				setIcon("DEMONHUNTER", 	1, --[[Havoc]]  		--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)
				setIcon("DEMONHUNTER", 	2, --[[Vengeance]]  	--[[1]] 0, 0, 0, 		--[[2]] 0, 0, 0, 		--[[3]] 0, 0, 0, 		--[[4]] 0, 0, 0, 		--[[5]] 0, 0, 0)

				-- Other code
				SetCVar("weatherDensity", "0")

				-- Reload
				ReloadUI()
			else
				LeaPlusLC:Print("Invalid parameter.")
			end
		else
			-- Toggle the options panel if game options panel is not showing
			if InterfaceOptionsFrame:IsShown() or VideoOptionsFrame:IsShown() or ChatConfigFrame:IsShown() then return end
			if LeaPlusLC:IsPlusShowing() then
				LeaPlusLC:HideFrames()
				LeaPlusLC:HideConfigPanels()
			else
				LeaPlusLC:HideFrames()
				LeaPlusLC["PageF"]:Show()
			end
			LeaPlusLC["Page"..LeaPlusLC["LeaStartPage"]]:Show()
		end
	end

	-- Slash command for global function
	_G.SLASH_Leatrix_Plus1 = "/ltp"
	_G.SLASH_Leatrix_Plus2 = "/leaplus" 
	SlashCmdList["Leatrix_Plus"] = function(self)
		-- Run slash command function
		LeaPlusLC:SlashFunc(self)
		-- Redirect tainted variables
		RunScript('ACTIVE_CHAT_EDIT_BOX = ACTIVE_CHAT_EDIT_BOX')
		RunScript('LAST_ACTIVE_CHAT_EDIT_BOX = LAST_ACTIVE_CHAT_EDIT_BOX')
	end

	-- Slash command for UI reload
	_G.SLASH_LEATRIX_PLUS_RL1 = "/rl"
	SlashCmdList["LEATRIX_PLUS_RL"] = function()
		ReloadUI()
	end

----------------------------------------------------------------------
-- 	Create options panel pages (no content yet)
----------------------------------------------------------------------

	-- Function to add menu button
	function LeaPlusLC:MakeMN(name, text, parent, anchor, x, y, width, height)

		local mbtn = CreateFrame("Button", nil, parent)
		LeaPlusLC[name] = mbtn
		mbtn:Show();
		mbtn:SetSize(width, height)
		mbtn:SetAlpha(1.0)
		mbtn:SetPoint(anchor, x, y)

		mbtn.t = mbtn:CreateTexture(nil, "BACKGROUND")
		mbtn.t:SetAllPoints()
		mbtn.t:SetColorTexture(0.3, 0.3, 0.00, 0.8)
		mbtn.t:SetAlpha(0.7)
		mbtn.t:Hide()

		mbtn.s = mbtn:CreateTexture(nil, "BACKGROUND")
		mbtn.s:SetAllPoints()
		mbtn.s:SetColorTexture(0.3, 0.3, 0.00, 0.8)
		mbtn.s:Hide()

		mbtn.f = mbtn:CreateFontString(nil, 'ARTWORK', 'GameFontNormal')
		mbtn.f:SetPoint('LEFT', 16, 0)
		mbtn.f:SetText(LeaPlusLC:Translate(text))
	
		mbtn:SetScript("OnEnter", function()
			mbtn.t:Show()
		end)

		mbtn:SetScript("OnLeave", function()
			mbtn.t:Hide()
		end)

		return mbtn, mbtn.s

	end

	-- Function to create individual options panel pages
	function LeaPlusLC:MakePage(name, title, menu, menuname, menuparent, menuanchor, menux, menuy, menuwidth, menuheight)

		-- Create frame
		local oPage = CreateFrame("Frame", nil, LeaPlusLC["PageF"]); 
		LeaPlusLC[name] = oPage
		oPage:SetAllPoints(LeaPlusLC["PageF"])
		oPage:Hide();

		-- Add page title
		oPage.s = oPage:CreateFontString(nil, 'ARTWORK', 'GameFontNormalLarge')
		oPage.s:SetPoint('TOPLEFT', 146, -16)
		oPage.s:SetText(LeaPlusLC:Translate(title))

		-- Add menu item if needed
		if menu then
			LeaPlusLC[menu], LeaPlusLC[menu .. ".s"] = LeaPlusLC:MakeMN(menu, menuname, menuparent, menuanchor, menux, menuy, menuwidth, menuheight)
			LeaPlusLC[name]:SetScript("OnShow", function() LeaPlusLC[menu .. ".s"]:Show(); end)
			LeaPlusLC[name]:SetScript("OnHide", function() LeaPlusLC[menu .. ".s"]:Hide(); end)
		end

		return oPage;
	
	end

	-- Create options pages
	LeaPlusLC["Page0"] = LeaPlusLC:MakePage("Page0", "Home"			, "LeaPlusNav0", "Home"			, LeaPlusLC["PageF"], "TOPLEFT", 16, -72, 112, 20)
	LeaPlusLC["Page1"] = LeaPlusLC:MakePage("Page1", "Automation"	, "LeaPlusNav1", "Automation"	, LeaPlusLC["PageF"], "TOPLEFT", 16, -112, 112, 20)
	LeaPlusLC["Page2"] = LeaPlusLC:MakePage("Page2", "Social"		, "LeaPlusNav2", "Social"		, LeaPlusLC["PageF"], "TOPLEFT", 16, -132, 112, 20)
	LeaPlusLC["Page3"] = LeaPlusLC:MakePage("Page3", "Chat"			, "LeaPlusNav3", "Chat"			, LeaPlusLC["PageF"], "TOPLEFT", 16, -152, 112, 20)
	LeaPlusLC["Page4"] = LeaPlusLC:MakePage("Page4", "Text"			, "LeaPlusNav4", "Text"			, LeaPlusLC["PageF"], "TOPLEFT", 16, -172, 112, 20)
	LeaPlusLC["Page5"] = LeaPlusLC:MakePage("Page5", "Interface"	, "LeaPlusNav5", "Interface"	, LeaPlusLC["PageF"], "TOPLEFT", 16, -192, 112, 20)
	LeaPlusLC["Page6"] = LeaPlusLC:MakePage("Page6", "Frames"		, "LeaPlusNav6", "Frames"		, LeaPlusLC["PageF"], "TOPLEFT", 16, -212, 112, 20)
	LeaPlusLC["Page7"] = LeaPlusLC:MakePage("Page7", "System"		, "LeaPlusNav7", "System"		, LeaPlusLC["PageF"], "TOPLEFT", 16, -232, 112, 20)
	LeaPlusLC["Page8"] = LeaPlusLC:MakePage("Page8", "Settings"		, "LeaPlusNav8", "Settings"		, LeaPlusLC["PageF"], "TOPLEFT", 16, -272, 112, 20)

	-- Page navigation mechanism
	for i = 0, LeaPlusLC["NumberOfPages"] do
		LeaPlusLC["LeaPlusNav"..i]:SetScript("OnClick", function()
			LeaPlusLC:HideFrames()
			LeaPlusLC["PageF"]:Show();
			LeaPlusLC["Page"..i]:Show();
			LeaPlusLC["LeaStartPage"] = i
		end)
	end

	-- Use a variable to contain the page number (makes it easier to move options around)
	local pg;

----------------------------------------------------------------------
-- 	LC0: Welcome
----------------------------------------------------------------------

	pg = "Page0";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Welcome to Leatrix Plus.", 146, -72);
	LeaPlusLC:MakeWD(LeaPlusLC[pg], "To begin, choose an options page.", 146, -92);

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Support", 146, -132);
	LeaPlusLC:MakeWD(LeaPlusLC[pg], "www.leatrix.com", 146, -152);

	-- Credit translator
	if L and L["Translation"] and L["Translation"] ~= "" then
		LeaPlusLC:MakeTx(LeaPlusLC[pg], "Translation", 146, -252)
		LeaPlusLC:MakeWD(LeaPlusLC[pg], "TranslatedBy", 146, -272)
	end

----------------------------------------------------------------------
-- 	LC1: Automation
----------------------------------------------------------------------

	pg = "Page1";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Character"					, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutomateQuests"			,	"Automate quests"				,	146, -92, 	true,	"If checked, quests will be selected, accepted and turned-in automatically.\n\nYou can hold the shift key down when you talk to a quest giver to over-ride this setting.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutomateGossip"			,	"Automate gossip"				,	146, -112, 	true,	"If checked, you can hold a designated modifier key while opening a gossip window to automatically select a single gossip option.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutoAcceptSummon"			,	"Accept summon"					, 	146, -132, 	false,	"If checked, summon requests will be accepted automatically unless you are in combat.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutoAcceptRes"				,	"Accept resurrection"			, 	146, -152, 	false,	"If checked, resurrection requests will be accepted automatically.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutoReleasePvP"			,	"Release in PvP"				, 	146, -172, 	false,	"If checked, you will release automatically after you die in a designated PvP zone.\n\nYou will not release automatically if you have the ability to self-resurrect (soulstone, reincarnation, etc).")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Vendors"					, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutoSellJunk"				,	"Sell junk automatically"		,	340, -92, 	true,	"If checked, all grey items in your bags will be sold automatically when you visit a merchant.\n\nYou can hold the shift key down when you talk to a merchant to over-ride this setting.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutoRepairOwnFunds"		, 	"Repair automatically"			,	340, -112, 	true,	"If checked, your gear will be repaired automatically when you visit a suitable merchant.\n\nYou can hold the shift key down when you talk to a merchant to over-ride this setting.")

	LeaPlusLC:CfgBtn("AutoGossipBtn", LeaPlusCB["AutomateGossip"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("AutoResBtn", LeaPlusCB["AutoAcceptRes"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("AutoReleaseBtn", LeaPlusCB["AutoReleasePvP"], "Click to configure the settings for this option.")
 	LeaPlusLC:CfgBtn("SellJunkBtn", LeaPlusCB["AutoSellJunk"], "Click to configure the settings for this option.")
 	LeaPlusLC:CfgBtn("RepairBtn", LeaPlusCB["AutoRepairOwnFunds"], "Click to configure the settings for this option.")

----------------------------------------------------------------------
-- 	LC2: Social
----------------------------------------------------------------------

	pg = "Page2";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Blocks"					, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoDuelRequests"			, 	"Block duels"					,	146, -92, 	false,	"If checked, duel requests will be blocked unless the player requesting the duel is in your friends list or guild.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoPetDuels"				, 	"Block pet battle duels"		,	146, -112, 	false,	"If checked, pet battle duel requests will be blocked unless the player requesting the duel is in your friends list or guild.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoPartyInvites"			, 	"Block party invites"			, 	146, -132, 	false,	"If checked, party invitations will be blocked unless the player inviting you is in your friends list or guild.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoFriendRequests"			, 	"Block friend requests"			, 	146, -152, 	false,	"If checked, BattleTag and Real ID friend requests will be automatically declined.\n\nEnabling this option will automatically decline any pending requests.")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Groups"					, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AcceptPartyFriends"		, 	"Party from friends"			, 	340, -92, 	false,	"If checked, party invitations from friends or guild members will be automatically accepted unless you are queued in Dungeon Finder.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AutoConfirmRole"			, 	"Queue from friends"			,	340, -112, 	false,	"If checked, requests initiated by your party leader to join the Dungeon Finder queue will be automatically accepted if the party leader is in your friends list or guild.\n\nThis option requires that you have selected a role for your character in the Dungeon Finder window.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "InviteFromWhisper"			,   "Invite from whispers"			,	340, -132,	false,	"If checked, a group invite will be automatically sent to anyone who whispers a designated keyword to you.\n\nYou need to be either ungrouped or party leader in your own group for this to work.")

 	LeaPlusLC:CfgBtn("InvWhisperBtn", LeaPlusCB["InviteFromWhisper"], "Click to configure the settings for this option.")

----------------------------------------------------------------------
-- 	LC3: Chat
----------------------------------------------------------------------

	pg = "Page3";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Chat Frame"				, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "UseEasyChatResizing"		,	"Use easy resizing"				,	146, -92,	true,	"If checked, dragging the General chat tab while the chat frame is locked will expand the chat frame upwards.\n\n\If the chat frame is unlocked, dragging the General chat tab will move the chat frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoCombatLogTab" 			, 	"Hide the combat log"			, 	146, -112, 	true,	"If checked, the combat log will be hidden.\n\nThe combat log must be docked in order for this option to work.\n\nIf the combat log is undocked, you can dock it by dragging the tab (and reloading your UI) or by resetting the chat windows (from the chat menu).")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoChatButtons"				,	"Hide chat buttons"				,	146, -132,	true,	"If checked, chat frame buttons will be hidden.\n\nClicking chat tabs will automatically show the latest messages.\n\nUse the mouse wheel to scroll through the chat history.  Hold down SHIFT for page jump or CTRL to jump to the top or bottom of the chat history.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoSocialButton"			,	"Hide social button"			,	146, -152,	true,	"If checked, the social button and quick-join notification will be hidden.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "UnclampChat"				,	"Unclamp chat frame"			,	146, -172,	true,	"If checked, you will be able to drag the chat frame to the edge of the screen.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "MoveChatEditBoxToTop" 		, 	"Move editbox to top"			,	146, -192, 	true,	"If checked, the editbox will be moved to the top of the chat frame.")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Mechanics"					, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoStickyChat"				, 	"Disable sticky chat"			,	340, -92,	true,	"If checked, sticky chat will be disabled.\n\nNote that this does not apply to temporary chat windows.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "UseArrowKeysInChat"		, 	"Use arrow keys in chat"		, 	340, -112, 	true,	"If checked, you can press the arrow keys to move the insertion point left and right in the chat frame.\n\nIf unchecked, the arrow keys will use the default keybind setting.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoChatFade"				, 	"Disable chat fade"				, 	340, -132, 	true,	"If checked, chat text will not fade out after a time period.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "UnivGroupColor"			,	"Universal group color"			,	340, -152,	true,	"If checked, raid chat and instance chat will both be colored blue (to match the default party chat color).")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "Manageclasscolors"			,	"Use class colors in chat"		,	340, -172,	true,	"If checked, class colors will be used in the chat frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "MaxChatHstory"				,	"Increase chat history"			, 	340, -192, 	true,	"If checked, your chat history will increase to 4096 lines.  If unchecked, the default will be used (128 lines).\n\nEnabling this option may prevent some chat text from showing during login.")

----------------------------------------------------------------------
-- 	LC4: Text
----------------------------------------------------------------------

	pg = "Page4";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Visibility"				, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideErrorFrameText"		, 	"Hide error messages"			,	146, -92, 	true,	"If checked, error messages (such as 'Not enough rage') will not be shown.\n\nIf you have the minimap button enabled, you can hold down CTRL and right-click it to toggle error messages without affecting this setting.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoHitIndicators"			, 	"Hide portrait numbers"			,	146, -112, 	true,	"If checked, damage and healing numbers in the player and pet portrait frames will be hidden.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideCraftedNames"			, 	"Hide crafted names"			,	146, -132, 	true,	"If checked, crafted items will no longer show the name of the crafter.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideZoneText"				,	"Hide zone text"				,	146, -152, 	true,	"If checked, zone text will not be shown (eg. 'Ironforge').")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideSubzoneText"			, 	"Hide subzone text"				,	146, -172, 	true,	"If checked, subzone text will not be shown (eg. 'Mystic Quarter').")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Text Size"					, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "MailFontChange"			,	"Resize mail text"				, 	340, -92, 	true,	"If checked, you will be able to change the font size of standard mail text.\n\nThis does not affect mail created using templates (such as auction house invoices).")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "QuestFontChange"			,	"Resize quest text"				, 	340, -112, 	true,	"If checked, you will be able to change the font size of quest text.\n\nEnabling this option will also change the text size of other frames which inherit the same font (such as the Dungeon Finder frame).")

	LeaPlusLC:CfgBtn("HideErrorsBtn", LeaPlusCB["HideErrorFrameText"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("MailTextBtn", LeaPlusCB["MailFontChange"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("QuestTextBtn", LeaPlusCB["QuestFontChange"], "Click to configure the settings for this option.")

----------------------------------------------------------------------
-- 	LC5: Interface
----------------------------------------------------------------------

	pg = "Page5";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Enhancements"				, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowMapMod"				, 	"Enhance world map"				, 	146, -92, 	true,	"If checked, you will be able to reveal unexplored areas of the map and show cursor coordinates at the top of the map.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "MinimapMod"				,	"Customise minimap"				, 	146, -112, 	true,	"If checked, you will be able to customise and rescale the minimap.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "TipModEnable"				,	"Manage tooltip"				,	146, -132, 	true,	"If checked, the tooltip will be color coded and you will be able to modify the tooltip layout and scale.")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Extras"					, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowVolume"				, 	"Show volume slider"			, 	340, -92, 	true,	"If checked, a master volume slider will be shown on the character sheet.\n\nThe volume slider can be placed in either of two locations on the character sheet.  To toggle between them, hold the shift key down and right-click the slider.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "AhExtras"					, 	"Show auction controls"			, 	340, -112, 	true,	"If checked, additional functionality will be added to the auction house.\n\nBuyout only - create buyout auctions without filling in the starting price.\n\nGold only - set the copper and silver prices at 99 to speed up new auctions.\n\nFind - search the auction house for the item you are selling.\n\nIn addition, the auction duration setting will be saved account-wide.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowDressTab"				, 	"Show dressup buttons"			, 	340, -132, 	true,	"If checked, two buttons will be added to the dressup frame which will allow you to hide your tabard or appear nude.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "StaticCoordsEn"			, 	"Show coordinates"				, 	340, -152, 	true,	"If checked, coordinates representing your character's location will be shown in a movable, customisable frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowCooldowns"				, 	"Show cooldowns"				, 	340, -172, 	true,	"If checked, you will be able to place up to five beneficial cooldown icons above the target or player frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "DurabilityStatus"			, 	"Show durability status"		, 	340, -192, 	true,	"If checked, a button will be added to the character sheet which will show your equipped item durability when you hover the pointer over it.\n\nIn addition, an overall percentage will be shown in the chat frame when you die.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowPetSaveBtn"			, 	"Show pet save button"			, 	340, -212, 	true,	"If checked, you will be able to save your current battle pet team (including abilities) to a single command.\n\nA button will be added to the Pet Journal.  Clicking the button will toggle showing the assignment command for your current team.  Pressing CTRL/C will copy the command to memory.\n\nYou can then paste the command (with CTRL/V) into the chat window or a macro to instantly assign your team.")

	LeaPlusLC:CfgBtn("EnhanceMapButton", LeaPlusCB["ShowMapMod"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("ModMinimapBtn", LeaPlusCB["MinimapMod"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("MoveTooltipButton", LeaPlusCB["TipModEnable"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("ModStaticCoordsBtn", LeaPlusCB["StaticCoordsEn"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("CooldownsButton", LeaPlusCB["ShowCooldowns"], "Click to configure the settings for this option.")

----------------------------------------------------------------------
-- 	LC6: Frames
----------------------------------------------------------------------

	pg = "Page6";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Features"					, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "FrmEnabled"				,	"Manage frames"					, 	146, -92, 	true,	"If checked, you will be able to change the position and scale of the player frame, target frame, world state, ghost frame and timer bar.  Your layout will be saved account-wide.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ManageBuffFrame"			, 	"Manage buff frame"				,	146, -112, 	true,	"If checked, you will be able to change the position and scale of the buff frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ClassColFrames"			, 	"Class colored frames"			,	146, -132, 	true,	"If checked, you will be able to show class coloring in the player frame, target frame and focus frame backgrounds.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowPlayerChain"			, 	"Show player chain"				,	146, -152, 	true,	"If checked, you will be able to show a rare, elite or rare elite chain around the player frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowRaidToggle"			, 	"Raid frame toggle"				,	146, -172, 	true,	"If checked, the button to toggle the raid container frame will be shown just above the raid management frame (left side of the screen) instead of in the raid management frame itself.\n\nThis allows you to toggle the raid container frame without needing to open the raid management frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "CombatPlates"				, 	"Combat plates"					,	146, -192, 	true,	"If checked, enemy nameplates will be shown during combat and hidden when combat ends.")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Visibility"				, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoAlerts"					,	"Hide alerts"					, 	340, -92, 	true,	"If checked, you will be able to hide alert frames.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoCharControls"			,	"Hide character controls"		,	340, -112, 	true,	"If checked, model control buttons (such as zoom) will not be shown in the character frame, inspect frame, dressup frame and transmogrification frame.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideBodyguard"				, 	"Hide bodyguard gossip"			, 	340, -132, 	true,	"If checked, the gossip window will not be shown when you talk to an active garrison bodyguard.\n\nYou can hold the shift key down when you talk to a bodyguard to over-ride this setting.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideTalkingFrame"			, 	"Hide talking frame"			, 	340, -152, 	true,	"If checked, the talking frame will not be shown.\n\nThe talking frame normally appears in the lower portion of the screen when certain NPCs communicate with you.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideCleanupBtns"			, 	"Hide clean-up buttons"			, 	340, -172, 	true,	"If checked, the backpack clean-up button and the bank frame clean-up button will not be shown.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideBossBanner"			, 	"Hide boss banner"				, 	340, -192, 	true,	"If checked, the boss banner will not be shown.\n\nThe boss banner appears when a boss is defeated.  It shows the name of the boss and the loot that was distributed.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "HideLevelUpDisplay"		, 	"Hide level-up display"			, 	340, -212, 	true,	"If checked, the level-up display will not be shown.\n\nThe level-up display shows encounter objectives, level-ups, pet battle rewards, etc.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoGryphons"				,	"Hide gryphons"					, 	340, -232, 	true,	"If checked, the main bar gryphons will not be shown.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoClassBar"				,	"Hide stance bar"				, 	340, -252, 	true,	"If checked, the stance bar will not be shown.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoCommandBar"				,	"Hide order hall bar"			, 	340, -272, 	true,	"If checked, the order hall command bar will not be shown.")

	LeaPlusLC:CfgBtn("NoAlertsBtn", LeaPlusCB["NoAlerts"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("MoveFramesButton", LeaPlusCB["FrmEnabled"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("ClassFramesBtn", LeaPlusCB["ClassColFrames"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("ModPlayerChain", LeaPlusCB["ShowPlayerChain"], "Click to configure the settings for this option.")
	LeaPlusLC:CfgBtn("ManageBuffBtn", LeaPlusCB["ManageBuffFrame"], "Click to configure the settings for this option.")

----------------------------------------------------------------------
-- 	LC7: System
----------------------------------------------------------------------

	pg = "Page7";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Graphics and Sound"		, 	146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoShaders"					, 	"Disable screen glow"			, 	146, -92, 	true,	"If checked, the screen glow effect will be disabled.\n\nEnabling this option may increase your overall graphics performance and reduce nausea.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "MaxCameraZoom"				, 	"Max camera zoom"				, 	146, -112, 	true,	"If checked, you will be able to zoom out to a greater distance.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ViewPortEnable"			,	"Enable viewport"				,	146, -132, 	true,	"If checked, you will be able to create a viewport.  A viewport adds adjustable black borders around the game world.\n\nThe borders are placed on top of the game world but under the UI so you can place UI elements over them.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoRestedEmotes"			, 	"Silence rested emotes"			,	146, -152, 	true,	"If checked, emote sounds will be silenced while your character is:\n\n- resting\n- in a pet battle\n- at the Hathill Market\n- at the Grim Guzzler\n\nEmote sounds will be enabled when none of the above apply.")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Game Options"				, 	340, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoBagAutomation"			, 	"Disable bag automation"		, 	340, -92, 	true,	"If checked, your bags will not be opened or closed automatically when you interact with a merchant, bank or mailbox.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoPetAutomation"			, 	"Disable pet automation"		, 	340, -112, 	true, 	"If checked, battle pets which are automatically summoned will be dismissed within a few seconds.\n\nThis includes dragging a pet onto the first team slot in the pet journal and entering a battle pet team save command.\n\nNote that pets which are automatically summoned during combat will be dismissed when combat ends.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "CharAddonList"				, 	"Show character addons"			, 	340, -132, 	true,	"If checked, the addon list (accessible from the game menu) will show character based addons by default.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoRaidRestrictions"		, 	"Remove raid restrictions"		,	340, -152, 	true,	"If checked, your low level characters will be allowed to join raid groups.\n\nNote that you cannot join a raid group directly with a low level character.  You have to join a party group first then the party leader should convert the party group to a raid group.\n\nReload your UI if the group leader is unable to convert the party group to a raid group.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoConfirmLoot"				, 	"Disable loot warnings"			,	340, -172, 	false,	"If checked, confirmations will no longer appear when you choose a loot roll option or attempt to sell or mail a tradable item.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "NoMapEmote"				, 	"Disable map emote"				,	340, -192, 	true,	"If checked, your character will not perform the reading emote when you open the map.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "SkipCinematics"			, 	"Skip cinematics"				,	340, -212, 	true,	"If checked, in-game cinematics will be skipped if at all possible.\n\nYou can hold the shift key down when a cinematic is about to start to over-ride this setting.\n\nNote that some cinematics cannot be skipped.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "FasterLooting"				, 	"Faster auto loot"				,	340, -232, 	true,	"If checked, the amount of time it takes to auto loot creatures will be significantly reduced.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "LockoutSharing"			, 	"Lockout sharing"				, 	340, -252, 	true, 	"If checked, the 'Display only character achievements to others' setting in the game options panel ('Social' menu) will be permanently checked and locked.")

	LeaPlusLC:CfgBtn("ModViewportBtn", LeaPlusCB["ViewPortEnable"], "Click to configure the settings for this option.")

----------------------------------------------------------------------
-- 	LC8: Settings
----------------------------------------------------------------------

	pg = "Page8";

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Addon"						, 146, -72);
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "ShowMinimapIcon"			, "Show minimap button"				, 146, -92,		true,	"If checked, a minimap button will be available.\n\nLeft-click - Toggle options panel.\n\nRight-click - Toggle music player.\n\nSHIFT/Left-click - Toggle music.\n\nSHIFT/Right-click - Toggle coordinates (if enabled).\n\nCTRL/Left-click - Toggle minimap target tracking.\n\nCTRL/Right-click - Toggle errors (if enabled).\n\nCTRL/SHIFT/Left-click - Toggle Zygor (if installed).\n\nCTRL/SHIFT/Right-click - Toggle windowed mode.")
	LeaPlusLC:MakeCB(LeaPlusLC[pg], "EnableHotkey"				, "Enable hotkey"					, 146, -112,	true,	"If checked, you will be able to open Leatrix Plus or the music player by pressing a designated hotkey.")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Scale", 340, -72);
	LeaPlusLC:MakeSL(LeaPlusLC[pg], "PlusPanelScale", "", 1, 2, 0.1, 340, -92, "%.1f")

	LeaPlusLC:MakeTx(LeaPlusLC[pg], "Transparency", 340, -132);
	LeaPlusLC:MakeSL(LeaPlusLC[pg], "PlusPanelAlpha", "", 0, 1, 0.1, 340, -152, "%.1f")

	LeaPlusLC:CfgBtn("HotkeyBtn", LeaPlusCB["EnableHotkey"], "Click to configure the settings for this option.")

	LeaPlusLC:ShowMemoryUsage(LeaPlusLC[pg], "TOPLEFT", 146, -262)
